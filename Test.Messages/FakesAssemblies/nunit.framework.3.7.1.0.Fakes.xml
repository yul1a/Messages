<?xml version="1.0"?>
<doc>
    <assembly>
        <name>nunit.framework.3.7.1.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:NUnit.Compatibility.Fakes.ShimAdditionalTypeExtensions">
            <summary>Shim type of NUnit.Compatibility.AdditionalTypeExtensions</summary>
        </member>
        <member name="M:NUnit.Compatibility.Fakes.ShimAdditionalTypeExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Compatibility.Fakes.ShimAdditionalTypeExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Compatibility.Fakes.ShimAdditionalTypeExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Compatibility.Fakes.ShimAdditionalTypeExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Compatibility.Fakes.ShimAdditionalTypeExtensions.IsCastableFromTypeType">
            <summary>Sets the shim of AdditionalTypeExtensions.IsCastableFrom(Type to, Type from)</summary>
        </member>
        <member name="P:NUnit.Compatibility.Fakes.ShimAdditionalTypeExtensions.ParametersMatchParameterInfoArrayTypeArray">
            <summary>Sets the shim of AdditionalTypeExtensions.ParametersMatch(ParameterInfo[] pinfos, Type[] ptypes)</summary>
        </member>
        <member name="P:NUnit.Compatibility.Fakes.ShimAdditionalTypeExtensions.StaticConstructor">
            <summary>Sets the shim of AdditionalTypeExtensions.AdditionalTypeExtensions()</summary>
        </member>
        <member name="T:NUnit.Compatibility.Fakes.ShimAttributeHelper">
            <summary>Shim type of NUnit.Compatibility.AttributeHelper</summary>
        </member>
        <member name="M:NUnit.Compatibility.Fakes.ShimAttributeHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Compatibility.Fakes.ShimAttributeHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Compatibility.Fakes.ShimAttributeHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Compatibility.Fakes.ShimAttributeHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Compatibility.Fakes.ShimAttributeHelper.GetCustomAttributesObjectTypeBoolean">
            <summary>Sets the shim of AttributeHelper.GetCustomAttributes(Object actual, Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="T:NUnit.Compatibility.Fakes.ShimLongLivedMarshalByRefObject">
            <summary>Shim type of NUnit.Compatibility.LongLivedMarshalByRefObject</summary>
        </member>
        <member name="M:NUnit.Compatibility.Fakes.ShimLongLivedMarshalByRefObject.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Compatibility.Fakes.ShimLongLivedMarshalByRefObject.#ctor(NUnit.Compatibility.LongLivedMarshalByRefObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Compatibility.Fakes.ShimLongLivedMarshalByRefObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Compatibility.Fakes.ShimLongLivedMarshalByRefObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Compatibility.Fakes.ShimLongLivedMarshalByRefObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Compatibility.Fakes.ShimLongLivedMarshalByRefObject.Constructor">
            <summary>Sets the shim of LongLivedMarshalByRefObject.LongLivedMarshalByRefObject()</summary>
        </member>
        <member name="P:NUnit.Compatibility.Fakes.ShimLongLivedMarshalByRefObject.InitializeLifetimeService">
            <summary>Sets the shim of LongLivedMarshalByRefObject.InitializeLifetimeService()</summary>
        </member>
        <member name="T:NUnit.Compatibility.Fakes.ShimLongLivedMarshalByRefObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Compatibility.Fakes.ShimLongLivedMarshalByRefObject.AllInstances.InitializeLifetimeService">
            <summary>Sets the shim of LongLivedMarshalByRefObject.InitializeLifetimeService()</summary>
        </member>
        <member name="T:NUnit.Compatibility.Fakes.ShimNUnitNullType">
            <summary>Shim type of NUnit.Compatibility.NUnitNullType</summary>
        </member>
        <member name="M:NUnit.Compatibility.Fakes.ShimNUnitNullType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Compatibility.Fakes.ShimNUnitNullType.#ctor(NUnit.Compatibility.NUnitNullType)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Compatibility.Fakes.ShimNUnitNullType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Compatibility.Fakes.ShimNUnitNullType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Compatibility.Fakes.ShimNUnitNullType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Compatibility.Fakes.ShimNUnitNullType.Constructor">
            <summary>Sets the shim of NUnitNullType.NUnitNullType()</summary>
        </member>
        <member name="T:NUnit.Compatibility.Fakes.ShimNUnitNullType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Compatibility.Fakes.StubLongLivedMarshalByRefObject">
            <summary>Stub type of NUnit.Compatibility.LongLivedMarshalByRefObject</summary>
        </member>
        <member name="M:NUnit.Compatibility.Fakes.StubLongLivedMarshalByRefObject.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Compatibility.Fakes.StubLongLivedMarshalByRefObject.InitializeLifetimeService">
            <summary>Sets the stub of LongLivedMarshalByRefObject.InitializeLifetimeService()</summary>
        </member>
        <member name="F:NUnit.Compatibility.Fakes.StubLongLivedMarshalByRefObject.InitializeLifetimeService01">
            <summary>Sets the stub of LongLivedMarshalByRefObject.InitializeLifetimeService()</summary>
        </member>
        <member name="M:NUnit.Compatibility.Fakes.StubLongLivedMarshalByRefObject.InitializeStub">
            <summary>Initializes a new instance of type StubLongLivedMarshalByRefObject</summary>
        </member>
        <member name="P:NUnit.Compatibility.Fakes.StubLongLivedMarshalByRefObject.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Compatibility.Fakes.StubLongLivedMarshalByRefObject.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Compatibility.Fakes.StubLongLivedMarshalByRefObject.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Compatibility.Fakes.StubNUnitNullType">
            <summary>Stub type of NUnit.Compatibility.NUnitNullType</summary>
        </member>
        <member name="M:NUnit.Compatibility.Fakes.StubNUnitNullType.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Compatibility.Fakes.StubNUnitNullType.InitializeStub">
            <summary>Initializes a new instance of type StubNUnitNullType</summary>
        </member>
        <member name="P:NUnit.Compatibility.Fakes.StubNUnitNullType.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Compatibility.Fakes.StubNUnitNullType.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Compatibility.Fakes.StubNUnitNullType.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Fakes.ShimFrameworkPackageSettings">
            <summary>Shim type of NUnit.FrameworkPackageSettings</summary>
        </member>
        <member name="M:NUnit.Fakes.ShimFrameworkPackageSettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Fakes.ShimFrameworkPackageSettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Fakes.ShimFrameworkPackageSettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Fakes.ShimFrameworkPackageSettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.ShimDefaultTestAssemblyBuilder">
            <summary>Shim type of NUnit.Framework.Api.DefaultTestAssemblyBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimDefaultTestAssemblyBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimDefaultTestAssemblyBuilder.#ctor(NUnit.Framework.Api.DefaultTestAssemblyBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimDefaultTestAssemblyBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimDefaultTestAssemblyBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimDefaultTestAssemblyBuilder.Bind(NUnit.Framework.Api.ITestAssemblyBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimDefaultTestAssemblyBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimDefaultTestAssemblyBuilder.BuildAssemblyIDictionaryOfStringObject">
            <summary>Sets the shim of DefaultTestAssemblyBuilder.Build(Assembly assembly, IDictionary`2&lt;String,Object&gt; options)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimDefaultTestAssemblyBuilder.BuildAssemblyStringIDictionaryOfStringObject">
            <summary>Sets the shim of DefaultTestAssemblyBuilder.Build(Assembly assembly, String assemblyPath, IDictionary`2&lt;String,Object&gt; options)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimDefaultTestAssemblyBuilder.BuildStringIDictionaryOfStringObject">
            <summary>Sets the shim of DefaultTestAssemblyBuilder.Build(String assemblyName, IDictionary`2&lt;String,Object&gt; options)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimDefaultTestAssemblyBuilder.BuildTestAssemblyAssemblyStringIListOfTest">
            <summary>Sets the shim of DefaultTestAssemblyBuilder.BuildTestAssembly(Assembly assembly, String assemblyName, IList`1&lt;Test&gt; fixtures)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimDefaultTestAssemblyBuilder.Constructor">
            <summary>Sets the shim of DefaultTestAssemblyBuilder.DefaultTestAssemblyBuilder()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimDefaultTestAssemblyBuilder.GetCandidateFixtureTypesAssemblyIList">
            <summary>Sets the shim of DefaultTestAssemblyBuilder.GetCandidateFixtureTypes(Assembly assembly, IList names)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimDefaultTestAssemblyBuilder.GetFixturesAssemblyIList">
            <summary>Sets the shim of DefaultTestAssemblyBuilder.GetFixtures(Assembly assembly, IList names)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimDefaultTestAssemblyBuilder.StaticConstructor">
            <summary>Sets the shim of DefaultTestAssemblyBuilder.DefaultTestAssemblyBuilder()</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.ShimDefaultTestAssemblyBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimDefaultTestAssemblyBuilder.AllInstances.BuildAssemblyIDictionaryOfStringObject">
            <summary>Sets the shim of DefaultTestAssemblyBuilder.Build(Assembly assembly, IDictionary`2&lt;String,Object&gt; options)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimDefaultTestAssemblyBuilder.AllInstances.BuildAssemblyStringIDictionaryOfStringObject">
            <summary>Sets the shim of DefaultTestAssemblyBuilder.Build(Assembly assembly, String assemblyPath, IDictionary`2&lt;String,Object&gt; options)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimDefaultTestAssemblyBuilder.AllInstances.BuildStringIDictionaryOfStringObject">
            <summary>Sets the shim of DefaultTestAssemblyBuilder.Build(String assemblyName, IDictionary`2&lt;String,Object&gt; options)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimDefaultTestAssemblyBuilder.AllInstances.BuildTestAssemblyAssemblyStringIListOfTest">
            <summary>Sets the shim of DefaultTestAssemblyBuilder.BuildTestAssembly(Assembly assembly, String assemblyName, IList`1&lt;Test&gt; fixtures)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimDefaultTestAssemblyBuilder.AllInstances.GetCandidateFixtureTypesAssemblyIList">
            <summary>Sets the shim of DefaultTestAssemblyBuilder.GetCandidateFixtureTypes(Assembly assembly, IList names)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimDefaultTestAssemblyBuilder.AllInstances.GetFixturesAssemblyIList">
            <summary>Sets the shim of DefaultTestAssemblyBuilder.GetFixtures(Assembly assembly, IList names)</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.ShimFrameworkController">
            <summary>Shim type of NUnit.Framework.Api.FrameworkController</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.#ctor(NUnit.Framework.Api.FrameworkController)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AddSettingTNodeStringObject">
            <summary>Sets the shim of FrameworkController.AddSetting(TNode settingsNode, String name, Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AssemblyGet">
            <summary>Sets the shim of FrameworkController.get_Assembly()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AssemblyNameOrPathGet">
            <summary>Sets the shim of FrameworkController.get_AssemblyNameOrPath()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AssemblyNameOrPathSetString">
            <summary>Sets the shim of FrameworkController.set_AssemblyNameOrPath(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AssemblySetAssembly">
            <summary>Sets the shim of FrameworkController.set_Assembly(Assembly value)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.BuilderGet">
            <summary>Sets the shim of FrameworkController.get_Builder()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.BuilderSetITestAssemblyBuilder">
            <summary>Sets the shim of FrameworkController.set_Builder(ITestAssemblyBuilder value)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.ConstructorAssemblyStringIDictionary">
            <summary>Sets the shim of FrameworkController.FrameworkController(Assembly assembly, String idPrefix, IDictionary settings)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.ConstructorAssemblyStringIDictionaryStringString">
            <summary>Sets the shim of FrameworkController.FrameworkController(Assembly assembly, String idPrefix, IDictionary settings, String runnerType, String builderType)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.ConstructorStringStringIDictionary">
            <summary>Sets the shim of FrameworkController.FrameworkController(String assemblyNameOrPath, String idPrefix, IDictionary settings)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.ConstructorStringStringIDictionaryStringString">
            <summary>Sets the shim of FrameworkController.FrameworkController(String assemblyNameOrPath, String idPrefix, IDictionary settings, String runnerType, String builderType)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.CountTestsICallbackEventHandlerString">
            <summary>Sets the shim of FrameworkController.CountTests(ICallbackEventHandler handler, String filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.CountTestsString">
            <summary>Sets the shim of FrameworkController.CountTests(String filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.ExploreTestsICallbackEventHandlerString">
            <summary>Sets the shim of FrameworkController.ExploreTests(ICallbackEventHandler handler, String filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.ExploreTestsString">
            <summary>Sets the shim of FrameworkController.ExploreTests(String filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.GetProcessorArchitecture">
            <summary>Sets the shim of FrameworkController.GetProcessorArchitecture()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.InitializeStringIDictionary">
            <summary>Sets the shim of FrameworkController.Initialize(String assemblyPath, IDictionary settings)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.InsertEnvironmentElementTNode">
            <summary>Sets the shim of FrameworkController.InsertEnvironmentElement(TNode targetNode)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.InsertSettingsElementTNodeIDictionaryOfStringObject">
            <summary>Sets the shim of FrameworkController.InsertSettingsElement(TNode targetNode, IDictionary`2&lt;String,Object&gt; settings)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.LoadTests">
            <summary>Sets the shim of FrameworkController.LoadTests()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.LoadTestsICallbackEventHandler">
            <summary>Sets the shim of FrameworkController.LoadTests(ICallbackEventHandler handler)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.RunAsyncActionOfStringString">
            <summary>Sets the shim of FrameworkController.RunAsync(Action`1&lt;String&gt; callback, String filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.RunAsyncICallbackEventHandlerString">
            <summary>Sets the shim of FrameworkController.RunAsync(ICallbackEventHandler handler, String filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.RunTestsActionOfStringString">
            <summary>Sets the shim of FrameworkController.RunTests(Action`1&lt;String&gt; callback, String filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.RunTestsICallbackEventHandlerString">
            <summary>Sets the shim of FrameworkController.RunTests(ICallbackEventHandler handler, String filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.RunTestsString">
            <summary>Sets the shim of FrameworkController.RunTests(String filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.RunnerGet">
            <summary>Sets the shim of FrameworkController.get_Runner()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.RunnerSetITestAssemblyRunner">
            <summary>Sets the shim of FrameworkController.set_Runner(ITestAssemblyRunner value)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.SettingsGet">
            <summary>Sets the shim of FrameworkController.get_Settings()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.SettingsSetIDictionaryOfStringObject">
            <summary>Sets the shim of FrameworkController.set_Settings(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.StopRunBoolean">
            <summary>Sets the shim of FrameworkController.StopRun(Boolean force)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.StopRunICallbackEventHandlerBoolean">
            <summary>Sets the shim of FrameworkController.StopRun(ICallbackEventHandler handler, Boolean force)</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.AssemblyGet">
            <summary>Sets the shim of FrameworkController.get_Assembly()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.AssemblyNameOrPathGet">
            <summary>Sets the shim of FrameworkController.get_AssemblyNameOrPath()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.AssemblyNameOrPathSetString">
            <summary>Sets the shim of FrameworkController.set_AssemblyNameOrPath(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.AssemblySetAssembly">
            <summary>Sets the shim of FrameworkController.set_Assembly(Assembly value)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.BuilderGet">
            <summary>Sets the shim of FrameworkController.get_Builder()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.BuilderSetITestAssemblyBuilder">
            <summary>Sets the shim of FrameworkController.set_Builder(ITestAssemblyBuilder value)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.CountTestsICallbackEventHandlerString">
            <summary>Sets the shim of FrameworkController.CountTests(ICallbackEventHandler handler, String filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.CountTestsString">
            <summary>Sets the shim of FrameworkController.CountTests(String filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.ExploreTestsICallbackEventHandlerString">
            <summary>Sets the shim of FrameworkController.ExploreTests(ICallbackEventHandler handler, String filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.ExploreTestsString">
            <summary>Sets the shim of FrameworkController.ExploreTests(String filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.InitializeStringIDictionary">
            <summary>Sets the shim of FrameworkController.Initialize(String assemblyPath, IDictionary settings)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.LoadTests">
            <summary>Sets the shim of FrameworkController.LoadTests()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.LoadTestsICallbackEventHandler">
            <summary>Sets the shim of FrameworkController.LoadTests(ICallbackEventHandler handler)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.RunAsyncActionOfStringString">
            <summary>Sets the shim of FrameworkController.RunAsync(Action`1&lt;String&gt; callback, String filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.RunAsyncICallbackEventHandlerString">
            <summary>Sets the shim of FrameworkController.RunAsync(ICallbackEventHandler handler, String filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.RunTestsActionOfStringString">
            <summary>Sets the shim of FrameworkController.RunTests(Action`1&lt;String&gt; callback, String filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.RunTestsICallbackEventHandlerString">
            <summary>Sets the shim of FrameworkController.RunTests(ICallbackEventHandler handler, String filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.RunTestsString">
            <summary>Sets the shim of FrameworkController.RunTests(String filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.RunnerGet">
            <summary>Sets the shim of FrameworkController.get_Runner()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.RunnerSetITestAssemblyRunner">
            <summary>Sets the shim of FrameworkController.set_Runner(ITestAssemblyRunner value)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.SettingsGet">
            <summary>Sets the shim of FrameworkController.get_Settings()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.SettingsSetIDictionaryOfStringObject">
            <summary>Sets the shim of FrameworkController.set_Settings(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.StopRunBoolean">
            <summary>Sets the shim of FrameworkController.StopRun(Boolean force)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.AllInstances.StopRunICallbackEventHandlerBoolean">
            <summary>Sets the shim of FrameworkController.StopRun(ICallbackEventHandler handler, Boolean force)</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimCountTestsAction">
            <summary>Shim type of NUnit.Framework.Api.FrameworkController+CountTestsAction</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimCountTestsAction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimCountTestsAction.#ctor(NUnit.Framework.Api.FrameworkController.CountTestsAction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimCountTestsAction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimCountTestsAction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimCountTestsAction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimCountTestsAction.ConstructorFrameworkControllerStringObject">
            <summary>Sets the shim of CountTestsAction.CountTestsAction(FrameworkController controller, String filter, Object handler)</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimCountTestsAction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimExploreTestsAction">
            <summary>Shim type of NUnit.Framework.Api.FrameworkController+ExploreTestsAction</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimExploreTestsAction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimExploreTestsAction.#ctor(NUnit.Framework.Api.FrameworkController.ExploreTestsAction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimExploreTestsAction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimExploreTestsAction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimExploreTestsAction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimExploreTestsAction.ConstructorFrameworkControllerStringObject">
            <summary>Sets the shim of ExploreTestsAction.ExploreTestsAction(FrameworkController controller, String filter, Object handler)</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimExploreTestsAction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimFrameworkControllerAction">
            <summary>Shim type of NUnit.Framework.Api.FrameworkController+FrameworkControllerAction</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimFrameworkControllerAction.#ctor(NUnit.Framework.Api.FrameworkController.FrameworkControllerAction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimFrameworkControllerAction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimFrameworkControllerAction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimFrameworkControllerAction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimFrameworkControllerAction.Constructor">
            <summary>Sets the shim of FrameworkControllerAction.FrameworkControllerAction()</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimFrameworkControllerAction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimLoadTestsAction">
            <summary>Shim type of NUnit.Framework.Api.FrameworkController+LoadTestsAction</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimLoadTestsAction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimLoadTestsAction.#ctor(NUnit.Framework.Api.FrameworkController.LoadTestsAction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimLoadTestsAction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimLoadTestsAction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimLoadTestsAction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimLoadTestsAction.ConstructorFrameworkControllerObject">
            <summary>Sets the shim of LoadTestsAction.LoadTestsAction(FrameworkController controller, Object handler)</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimLoadTestsAction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimRunAsyncAction">
            <summary>Shim type of NUnit.Framework.Api.FrameworkController+RunAsyncAction</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimRunAsyncAction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimRunAsyncAction.#ctor(NUnit.Framework.Api.FrameworkController.RunAsyncAction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimRunAsyncAction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimRunAsyncAction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimRunAsyncAction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimRunAsyncAction.ConstructorFrameworkControllerStringObject">
            <summary>Sets the shim of RunAsyncAction.RunAsyncAction(FrameworkController controller, String filter, Object handler)</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimRunAsyncAction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimRunTestsAction">
            <summary>Shim type of NUnit.Framework.Api.FrameworkController+RunTestsAction</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimRunTestsAction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimRunTestsAction.#ctor(NUnit.Framework.Api.FrameworkController.RunTestsAction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimRunTestsAction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimRunTestsAction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimRunTestsAction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimRunTestsAction.ConstructorFrameworkControllerStringObject">
            <summary>Sets the shim of RunTestsAction.RunTestsAction(FrameworkController controller, String filter, Object handler)</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimRunTestsAction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimStopRunAction">
            <summary>Shim type of NUnit.Framework.Api.FrameworkController+StopRunAction</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimStopRunAction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimStopRunAction.#ctor(NUnit.Framework.Api.FrameworkController.StopRunAction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimStopRunAction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimStopRunAction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimStopRunAction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimStopRunAction.ConstructorFrameworkControllerBooleanObject">
            <summary>Sets the shim of StopRunAction.StopRunAction(FrameworkController controller, Boolean force, Object handler)</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.ShimFrameworkController.ShimStopRunAction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner">
            <summary>Shim type of NUnit.Framework.Api.NUnitTestAssemblyRunner</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.#ctor(NUnit.Framework.Api.NUnitTestAssemblyRunner)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.Bind(NUnit.Framework.Api.ITestAssemblyRunner)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.ConstructorITestAssemblyBuilder">
            <summary>Sets the shim of NUnitTestAssemblyRunner.NUnitTestAssemblyRunner(ITestAssemblyBuilder builder)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.ContextGet">
            <summary>Sets the shim of NUnitTestAssemblyRunner.get_Context()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.ContextSetTestExecutionContext">
            <summary>Sets the shim of NUnitTestAssemblyRunner.set_Context(TestExecutionContext value)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.CountTestCasesITestFilter">
            <summary>Sets the shim of NUnitTestAssemblyRunner.CountTestCases(ITestFilter filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.CountTestCasesITestITestFilter">
            <summary>Sets the shim of NUnitTestAssemblyRunner.CountTestCases(ITest test, ITestFilter filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.CreateTestExecutionContextITestListener">
            <summary>Sets the shim of NUnitTestAssemblyRunner.CreateTestExecutionContext(ITestListener listener)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.DefaultLevelOfParallelismGet">
            <summary>Sets the shim of NUnitTestAssemblyRunner.get_DefaultLevelOfParallelism()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.ExploreTestsITestFilter">
            <summary>Sets the shim of NUnitTestAssemblyRunner.ExploreTests(ITestFilter filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.GetLevelOfParallelism">
            <summary>Sets the shim of NUnitTestAssemblyRunner.GetLevelOfParallelism()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.IsTestCompleteGet">
            <summary>Sets the shim of NUnitTestAssemblyRunner.get_IsTestComplete()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.IsTestLoadedGet">
            <summary>Sets the shim of NUnitTestAssemblyRunner.get_IsTestLoaded()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.IsTestRunningGet">
            <summary>Sets the shim of NUnitTestAssemblyRunner.get_IsTestRunning()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.LoadAssemblyIDictionaryOfStringObject">
            <summary>Sets the shim of NUnitTestAssemblyRunner.Load(Assembly assembly, IDictionary`2&lt;String,Object&gt; settings)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.LoadStringIDictionaryOfStringObject">
            <summary>Sets the shim of NUnitTestAssemblyRunner.Load(String assemblyName, IDictionary`2&lt;String,Object&gt; settings)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.LoadedTestGet">
            <summary>Sets the shim of NUnitTestAssemblyRunner.get_LoadedTest()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.LoadedTestSetITest">
            <summary>Sets the shim of NUnitTestAssemblyRunner.set_LoadedTest(ITest value)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.OnRunCompletedObjectEventArgs">
            <summary>Sets the shim of NUnitTestAssemblyRunner.OnRunCompleted(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.PauseBeforeRun">
            <summary>Sets the shim of NUnitTestAssemblyRunner.PauseBeforeRun()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.ResultGet">
            <summary>Sets the shim of NUnitTestAssemblyRunner.get_Result()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.RunAsyncITestListenerITestFilter">
            <summary>Sets the shim of NUnitTestAssemblyRunner.RunAsync(ITestListener listener, ITestFilter filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.RunITestListenerITestFilter">
            <summary>Sets the shim of NUnitTestAssemblyRunner.Run(ITestListener listener, ITestFilter filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.SettingsGet">
            <summary>Sets the shim of NUnitTestAssemblyRunner.get_Settings()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.SettingsSetIDictionaryOfStringObject">
            <summary>Sets the shim of NUnitTestAssemblyRunner.set_Settings(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.StartRunITestListener">
            <summary>Sets the shim of NUnitTestAssemblyRunner.StartRun(ITestListener listener)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.StaticConstructor">
            <summary>Sets the shim of NUnitTestAssemblyRunner.NUnitTestAssemblyRunner()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.StopRunBoolean">
            <summary>Sets the shim of NUnitTestAssemblyRunner.StopRun(Boolean force)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.TopLevelWorkItemGet">
            <summary>Sets the shim of NUnitTestAssemblyRunner.get_TopLevelWorkItem()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.TopLevelWorkItemSetWorkItem">
            <summary>Sets the shim of NUnitTestAssemblyRunner.set_TopLevelWorkItem(WorkItem value)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.WaitForCompletionInt32">
            <summary>Sets the shim of NUnitTestAssemblyRunner.WaitForCompletion(Int32 timeout)</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.ContextGet">
            <summary>Sets the shim of NUnitTestAssemblyRunner.get_Context()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.ContextSetTestExecutionContext">
            <summary>Sets the shim of NUnitTestAssemblyRunner.set_Context(TestExecutionContext value)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.CountTestCasesITestFilter">
            <summary>Sets the shim of NUnitTestAssemblyRunner.CountTestCases(ITestFilter filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.CountTestCasesITestITestFilter">
            <summary>Sets the shim of NUnitTestAssemblyRunner.CountTestCases(ITest test, ITestFilter filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.CreateTestExecutionContextITestListener">
            <summary>Sets the shim of NUnitTestAssemblyRunner.CreateTestExecutionContext(ITestListener listener)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.ExploreTestsITestFilter">
            <summary>Sets the shim of NUnitTestAssemblyRunner.ExploreTests(ITestFilter filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.GetLevelOfParallelism">
            <summary>Sets the shim of NUnitTestAssemblyRunner.GetLevelOfParallelism()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.IsTestCompleteGet">
            <summary>Sets the shim of NUnitTestAssemblyRunner.get_IsTestComplete()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.IsTestLoadedGet">
            <summary>Sets the shim of NUnitTestAssemblyRunner.get_IsTestLoaded()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.IsTestRunningGet">
            <summary>Sets the shim of NUnitTestAssemblyRunner.get_IsTestRunning()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.LoadAssemblyIDictionaryOfStringObject">
            <summary>Sets the shim of NUnitTestAssemblyRunner.Load(Assembly assembly, IDictionary`2&lt;String,Object&gt; settings)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.LoadStringIDictionaryOfStringObject">
            <summary>Sets the shim of NUnitTestAssemblyRunner.Load(String assemblyName, IDictionary`2&lt;String,Object&gt; settings)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.LoadedTestGet">
            <summary>Sets the shim of NUnitTestAssemblyRunner.get_LoadedTest()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.LoadedTestSetITest">
            <summary>Sets the shim of NUnitTestAssemblyRunner.set_LoadedTest(ITest value)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.OnRunCompletedObjectEventArgs">
            <summary>Sets the shim of NUnitTestAssemblyRunner.OnRunCompleted(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.ResultGet">
            <summary>Sets the shim of NUnitTestAssemblyRunner.get_Result()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.RunAsyncITestListenerITestFilter">
            <summary>Sets the shim of NUnitTestAssemblyRunner.RunAsync(ITestListener listener, ITestFilter filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.RunITestListenerITestFilter">
            <summary>Sets the shim of NUnitTestAssemblyRunner.Run(ITestListener listener, ITestFilter filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.SettingsGet">
            <summary>Sets the shim of NUnitTestAssemblyRunner.get_Settings()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.SettingsSetIDictionaryOfStringObject">
            <summary>Sets the shim of NUnitTestAssemblyRunner.set_Settings(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.StartRunITestListener">
            <summary>Sets the shim of NUnitTestAssemblyRunner.StartRun(ITestListener listener)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.StopRunBoolean">
            <summary>Sets the shim of NUnitTestAssemblyRunner.StopRun(Boolean force)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.TopLevelWorkItemGet">
            <summary>Sets the shim of NUnitTestAssemblyRunner.get_TopLevelWorkItem()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.TopLevelWorkItemSetWorkItem">
            <summary>Sets the shim of NUnitTestAssemblyRunner.set_TopLevelWorkItem(WorkItem value)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.ShimNUnitTestAssemblyRunner.AllInstances.WaitForCompletionInt32">
            <summary>Sets the shim of NUnitTestAssemblyRunner.WaitForCompletion(Int32 timeout)</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.StubDefaultTestAssemblyBuilder">
            <summary>Stub type of NUnit.Framework.Api.DefaultTestAssemblyBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.StubDefaultTestAssemblyBuilder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.StubDefaultTestAssemblyBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultTestAssemblyBuilder</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.StubDefaultTestAssemblyBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.StubDefaultTestAssemblyBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.StubDefaultTestAssemblyBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.StubFrameworkController">
            <summary>Stub type of NUnit.Framework.Api.FrameworkController</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.StubFrameworkController.#ctor(System.String,System.String,System.Collections.IDictionary)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.StubFrameworkController.#ctor(System.Reflection.Assembly,System.String,System.Collections.IDictionary)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.StubFrameworkController.#ctor(System.String,System.String,System.Collections.IDictionary,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.StubFrameworkController.#ctor(System.Reflection.Assembly,System.String,System.Collections.IDictionary,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.StubFrameworkController.InitializeLifetimeService">
            <summary>Sets the stub of LongLivedMarshalByRefObject.InitializeLifetimeService()</summary>
        </member>
        <member name="F:NUnit.Framework.Api.Fakes.StubFrameworkController.InitializeLifetimeService01">
            <summary>Sets the stub of LongLivedMarshalByRefObject.InitializeLifetimeService()</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.StubFrameworkController.InitializeStub">
            <summary>Initializes a new instance of type StubFrameworkController</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.StubFrameworkController.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.StubFrameworkController.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.StubFrameworkController.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.StubITestAssemblyBuilder">
            <summary>Stub type of NUnit.Framework.Api.ITestAssemblyBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.StubITestAssemblyBuilder.#ctor">
            <summary>Initializes a new instance of type StubITestAssemblyBuilder</summary>
        </member>
        <member name="F:NUnit.Framework.Api.Fakes.StubITestAssemblyBuilder.BuildAssemblyIDictionaryOfStringObject">
            <summary>Sets the stub of ITestAssemblyBuilder.Build(Assembly assembly, IDictionary`2&lt;String,Object&gt; options)</summary>
        </member>
        <member name="F:NUnit.Framework.Api.Fakes.StubITestAssemblyBuilder.BuildStringIDictionaryOfStringObject">
            <summary>Sets the stub of ITestAssemblyBuilder.Build(String assemblyName, IDictionary`2&lt;String,Object&gt; options)</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.StubITestAssemblyBuilder.n::NUnit#Framework#Api#ITestAssemblyBuilder#Build(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Sets the stub of ITestAssemblyBuilder.Build(String assemblyName, IDictionary`2&lt;String,Object&gt; options)</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.StubITestAssemblyBuilder.n::NUnit#Framework#Api#ITestAssemblyBuilder#Build(System.Reflection.Assembly,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Sets the stub of ITestAssemblyBuilder.Build(Assembly assembly, IDictionary`2&lt;String,Object&gt; options)</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner">
            <summary>Stub type of NUnit.Framework.Api.ITestAssemblyRunner</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.#ctor">
            <summary>Initializes a new instance of type StubITestAssemblyRunner</summary>
        </member>
        <member name="F:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.CountTestCasesITestFilter">
            <summary>Sets the stub of ITestAssemblyRunner.CountTestCases(ITestFilter filter)</summary>
        </member>
        <member name="F:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.ExploreTestsITestFilter">
            <summary>Sets the stub of ITestAssemblyRunner.ExploreTests(ITestFilter filter)</summary>
        </member>
        <member name="F:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.IsTestCompleteGet">
            <summary>Sets the stub of ITestAssemblyRunner.get_IsTestComplete()</summary>
        </member>
        <member name="F:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.IsTestLoadedGet">
            <summary>Sets the stub of ITestAssemblyRunner.get_IsTestLoaded()</summary>
        </member>
        <member name="F:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.IsTestRunningGet">
            <summary>Sets the stub of ITestAssemblyRunner.get_IsTestRunning()</summary>
        </member>
        <member name="F:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.LoadAssemblyIDictionaryOfStringObject">
            <summary>Sets the stub of ITestAssemblyRunner.Load(Assembly assembly, IDictionary`2&lt;String,Object&gt; settings)</summary>
        </member>
        <member name="F:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.LoadStringIDictionaryOfStringObject">
            <summary>Sets the stub of ITestAssemblyRunner.Load(String assemblyName, IDictionary`2&lt;String,Object&gt; settings)</summary>
        </member>
        <member name="F:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.LoadedTestGet">
            <summary>Sets the stub of ITestAssemblyRunner.get_LoadedTest()</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.n::NUnit#Framework#Api#ITestAssemblyRunner#CountTestCases(NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Sets the stub of ITestAssemblyRunner.CountTestCases(ITestFilter filter)</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.n::NUnit#Framework#Api#ITestAssemblyRunner#ExploreTests(NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Sets the stub of ITestAssemblyRunner.ExploreTests(ITestFilter filter)</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.n::NUnit#Framework#Api#ITestAssemblyRunner#Load(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Sets the stub of ITestAssemblyRunner.Load(String assemblyName, IDictionary`2&lt;String,Object&gt; settings)</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.n::NUnit#Framework#Api#ITestAssemblyRunner#Load(System.Reflection.Assembly,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Sets the stub of ITestAssemblyRunner.Load(Assembly assembly, IDictionary`2&lt;String,Object&gt; settings)</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.n::NUnit#Framework#Api#ITestAssemblyRunner#Run(NUnit.Framework.Interfaces.ITestListener,NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Sets the stub of ITestAssemblyRunner.Run(ITestListener listener, ITestFilter filter)</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.n::NUnit#Framework#Api#ITestAssemblyRunner#RunAsync(NUnit.Framework.Interfaces.ITestListener,NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Sets the stub of ITestAssemblyRunner.RunAsync(ITestListener listener, ITestFilter filter)</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.n::NUnit#Framework#Api#ITestAssemblyRunner#StopRun(System.Boolean)">
            <summary>Sets the stub of ITestAssemblyRunner.StopRun(Boolean force)</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.n::NUnit#Framework#Api#ITestAssemblyRunner#WaitForCompletion(System.Int32)">
            <summary>Sets the stub of ITestAssemblyRunner.WaitForCompletion(Int32 timeout)</summary>
        </member>
        <member name="F:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.ResultGet">
            <summary>Sets the stub of ITestAssemblyRunner.get_Result()</summary>
        </member>
        <member name="F:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.RunAsyncITestListenerITestFilter">
            <summary>Sets the stub of ITestAssemblyRunner.RunAsync(ITestListener listener, ITestFilter filter)</summary>
        </member>
        <member name="F:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.RunITestListenerITestFilter">
            <summary>Sets the stub of ITestAssemblyRunner.Run(ITestListener listener, ITestFilter filter)</summary>
        </member>
        <member name="F:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.StopRunBoolean">
            <summary>Sets the stub of ITestAssemblyRunner.StopRun(Boolean force)</summary>
        </member>
        <member name="F:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.WaitForCompletionInt32">
            <summary>Sets the stub of ITestAssemblyRunner.WaitForCompletion(Int32 timeout)</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.n::NUnit#Framework#Api#ITestAssemblyRunner#IsTestComplete">
            <summary>Sets the stub of ITestAssemblyRunner.get_IsTestComplete()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.n::NUnit#Framework#Api#ITestAssemblyRunner#IsTestLoaded">
            <summary>Sets the stub of ITestAssemblyRunner.get_IsTestLoaded()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.n::NUnit#Framework#Api#ITestAssemblyRunner#IsTestRunning">
            <summary>Sets the stub of ITestAssemblyRunner.get_IsTestRunning()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.n::NUnit#Framework#Api#ITestAssemblyRunner#LoadedTest">
            <summary>Sets the stub of ITestAssemblyRunner.get_LoadedTest()</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.StubITestAssemblyRunner.n::NUnit#Framework#Api#ITestAssemblyRunner#Result">
            <summary>Sets the stub of ITestAssemblyRunner.get_Result()</summary>
        </member>
        <member name="T:NUnit.Framework.Api.Fakes.StubNUnitTestAssemblyRunner">
            <summary>Stub type of NUnit.Framework.Api.NUnitTestAssemblyRunner</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.StubNUnitTestAssemblyRunner.#ctor(NUnit.Framework.Api.ITestAssemblyBuilder)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Api.Fakes.StubNUnitTestAssemblyRunner.InitializeStub">
            <summary>Initializes a new instance of type StubNUnitTestAssemblyRunner</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.StubNUnitTestAssemblyRunner.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.StubNUnitTestAssemblyRunner.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Api.Fakes.StubNUnitTestAssemblyRunner.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.AllItemsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.#ctor(NUnit.Framework.Constraints.AllItemsConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of AllItemsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.ConstructorIConstraint">
            <summary>Sets the shim of AllItemsConstraint.AllItemsConstraint(IConstraint itemConstraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.DisplayNameGet">
            <summary>Sets the shim of AllItemsConstraint.get_DisplayName()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.AllItemsConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of AllItemsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAllItemsConstraint.AllInstances.DisplayNameGet">
            <summary>Sets the shim of AllItemsConstraint.get_DisplayName()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAllOperator">
            <summary>Shim type of NUnit.Framework.Constraints.AllOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAllOperator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAllOperator.#ctor(NUnit.Framework.Constraints.AllOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAllOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAllOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAllOperator.ApplyPrefixIConstraint">
            <summary>Sets the shim of AllOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAllOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAllOperator.Constructor">
            <summary>Sets the shim of AllOperator.AllOperator()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAllOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAllOperator.AllInstances.ApplyPrefixIConstraint">
            <summary>Sets the shim of AllOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAndConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.AndConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.#ctor(NUnit.Framework.Constraints.AndConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of AndConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.ConstructorIConstraintIConstraint">
            <summary>Sets the shim of AndConstraint.AndConstraint(IConstraint left, IConstraint right)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.DescriptionGet">
            <summary>Sets the shim of AndConstraint.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.AndConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of AndConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAndConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of AndConstraint.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAndOperator">
            <summary>Shim type of NUnit.Framework.Constraints.AndOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAndOperator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAndOperator.#ctor(NUnit.Framework.Constraints.AndOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAndOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAndOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAndOperator.ApplyOperatorIConstraintIConstraint">
            <summary>Sets the shim of AndOperator.ApplyOperator(IConstraint left, IConstraint right)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAndOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAndOperator.Constructor">
            <summary>Sets the shim of AndOperator.AndOperator()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAndOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAndOperator.AllInstances.ApplyOperatorIConstraintIConstraint">
            <summary>Sets the shim of AndOperator.ApplyOperator(IConstraint left, IConstraint right)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.AssignableFromConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.#ctor(NUnit.Framework.Constraints.AssignableFromConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.ConstructorType">
            <summary>Sets the shim of AssignableFromConstraint.AssignableFromConstraint(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.MatchesObject">
            <summary>Sets the shim of AssignableFromConstraint.Matches(Object actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAssignableFromConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of AssignableFromConstraint.Matches(Object actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.AssignableToConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.#ctor(NUnit.Framework.Constraints.AssignableToConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.ConstructorType">
            <summary>Sets the shim of AssignableToConstraint.AssignableToConstraint(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.MatchesObject">
            <summary>Sets the shim of AssignableToConstraint.Matches(Object actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAssignableToConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of AssignableToConstraint.Matches(Object actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.AttributeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.#ctor(NUnit.Framework.Constraints.AttributeConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of AttributeConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.ConstructorTypeIConstraint">
            <summary>Sets the shim of AttributeConstraint.AttributeConstraint(Type type, IConstraint baseConstraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.GetStringRepresentation">
            <summary>Sets the shim of AttributeConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.AttributeConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of AttributeConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeConstraint.AllInstances.GetStringRepresentation">
            <summary>Sets the shim of AttributeConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.AttributeExistsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.#ctor(NUnit.Framework.Constraints.AttributeExistsConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of AttributeExistsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.ConstructorType">
            <summary>Sets the shim of AttributeExistsConstraint.AttributeExistsConstraint(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.DescriptionGet">
            <summary>Sets the shim of AttributeExistsConstraint.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.AttributeExistsConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of AttributeExistsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeExistsConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of AttributeExistsConstraint.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAttributeOperator">
            <summary>Shim type of NUnit.Framework.Constraints.AttributeOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeOperator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeOperator.#ctor(NUnit.Framework.Constraints.AttributeOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimAttributeOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeOperator.ConstructorType">
            <summary>Sets the shim of AttributeOperator.AttributeOperator(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the shim of AttributeOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimAttributeOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimAttributeOperator.AllInstances.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the shim of AttributeOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimBinaryConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.BinaryConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinaryConstraint.#ctor(NUnit.Framework.Constraints.BinaryConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinaryConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinaryConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinaryConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinaryConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinaryConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinaryConstraint.ConstructorIConstraintIConstraint">
            <summary>Sets the shim of BinaryConstraint.BinaryConstraint(IConstraint left, IConstraint right)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimBinaryConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator">
            <summary>Shim type of NUnit.Framework.Constraints.BinaryOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.#ctor(NUnit.Framework.Constraints.BinaryOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.Constructor">
            <summary>Sets the shim of BinaryOperator.BinaryOperator()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.LeftPrecedenceGet">
            <summary>Sets the shim of BinaryOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the shim of BinaryOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.RightPrecedenceGet">
            <summary>Sets the shim of BinaryOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.AllInstances.LeftPrecedenceGet">
            <summary>Sets the shim of BinaryOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.AllInstances.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the shim of BinaryOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinaryOperator.AllInstances.RightPrecedenceGet">
            <summary>Sets the shim of BinaryOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.BinarySerializableConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.#ctor(NUnit.Framework.Constraints.BinarySerializableConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of BinarySerializableConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.Constructor">
            <summary>Sets the shim of BinarySerializableConstraint.BinarySerializableConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.DescriptionGet">
            <summary>Sets the shim of BinarySerializableConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.GetStringRepresentation">
            <summary>Sets the shim of BinarySerializableConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.BinarySerializableConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of BinarySerializableConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of BinarySerializableConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimBinarySerializableConstraint.AllInstances.GetStringRepresentation">
            <summary>Sets the shim of BinarySerializableConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.CollectionConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.#ctor(NUnit.Framework.Constraints.CollectionConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of CollectionConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.Constructor">
            <summary>Sets the shim of CollectionConstraint.CollectionConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.ConstructorObject">
            <summary>Sets the shim of CollectionConstraint.CollectionConstraint(Object arg)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.IsEmptyIEnumerable">
            <summary>Sets the shim of CollectionConstraint.IsEmpty(IEnumerable enumerable)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.CollectionConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of CollectionConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.CollectionContainsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.#ctor(NUnit.Framework.Constraints.CollectionContainsConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.UsingOf2FuncOfM0M1Boolean``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0,``1,System.Boolean},NUnit.Framework.Constraints.CollectionContainsConstraint})">
            <summary>Sets the shim of CollectionContainsConstraint.Using(Func`3&lt;!!0,!!1,Boolean&gt; comparison)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.ConstructorObject">
            <summary>Sets the shim of CollectionContainsConstraint.CollectionContainsConstraint(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.DescriptionGet">
            <summary>Sets the shim of CollectionContainsConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.DisplayNameGet">
            <summary>Sets the shim of CollectionContainsConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.ExpectedGet">
            <summary>Sets the shim of CollectionContainsConstraint.get_Expected()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.ExpectedSetObject">
            <summary>Sets the shim of CollectionContainsConstraint.set_Expected(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.MatchesIEnumerable">
            <summary>Sets the shim of CollectionContainsConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.AllInstances.UsingOf2FuncOfM0M1Boolean``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.CollectionContainsConstraint,System.Func{``0,``1,System.Boolean},NUnit.Framework.Constraints.CollectionContainsConstraint})">
            <summary>Sets the shim of CollectionContainsConstraint.Using(Func`3&lt;!!0,!!1,Boolean&gt; comparison)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of CollectionContainsConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.AllInstances.DisplayNameGet">
            <summary>Sets the shim of CollectionContainsConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.AllInstances.ExpectedGet">
            <summary>Sets the shim of CollectionContainsConstraint.get_Expected()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.AllInstances.ExpectedSetObject">
            <summary>Sets the shim of CollectionContainsConstraint.set_Expected(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionContainsConstraint.AllInstances.MatchesIEnumerable">
            <summary>Sets the shim of CollectionContainsConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.CollectionEquivalentConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.#ctor(NUnit.Framework.Constraints.CollectionEquivalentConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.UsingOf2FuncOfM0M1Boolean``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0,``1,System.Boolean},NUnit.Framework.Constraints.CollectionEquivalentConstraint})">
            <summary>Sets the shim of CollectionEquivalentConstraint.Using(Func`3&lt;!!0,!!1,Boolean&gt; comparison)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.ConstructorIEnumerable">
            <summary>Sets the shim of CollectionEquivalentConstraint.CollectionEquivalentConstraint(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.DescriptionGet">
            <summary>Sets the shim of CollectionEquivalentConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.DisplayNameGet">
            <summary>Sets the shim of CollectionEquivalentConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.MatchesIEnumerable">
            <summary>Sets the shim of CollectionEquivalentConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.AllInstances.UsingOf2FuncOfM0M1Boolean``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.CollectionEquivalentConstraint,System.Func{``0,``1,System.Boolean},NUnit.Framework.Constraints.CollectionEquivalentConstraint})">
            <summary>Sets the shim of CollectionEquivalentConstraint.Using(Func`3&lt;!!0,!!1,Boolean&gt; comparison)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of CollectionEquivalentConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.AllInstances.DisplayNameGet">
            <summary>Sets the shim of CollectionEquivalentConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionEquivalentConstraint.AllInstances.MatchesIEnumerable">
            <summary>Sets the shim of CollectionEquivalentConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.CollectionItemsEqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.#ctor(NUnit.Framework.Constraints.CollectionItemsEqualConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.UsingOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Comparison{``0},NUnit.Framework.Constraints.CollectionItemsEqualConstraint})">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.UsingOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.CollectionItemsEqualConstraint})">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.UsingOf1IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEqualityComparer{``0},NUnit.Framework.Constraints.CollectionItemsEqualConstraint})">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.Constructor">
            <summary>Sets the shim of CollectionItemsEqualConstraint.CollectionItemsEqualConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.ConstructorObject">
            <summary>Sets the shim of CollectionItemsEqualConstraint.CollectionItemsEqualConstraint(Object arg)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.IgnoreCaseGet">
            <summary>Sets the shim of CollectionItemsEqualConstraint.get_IgnoreCase()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.ItemsEqualObjectObject">
            <summary>Sets the shim of CollectionItemsEqualConstraint.ItemsEqual(Object x, Object y)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.TallyIEnumerable">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Tally(IEnumerable c)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.UsingEqualityAdapter">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(EqualityAdapter adapter)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.UsingIComparer">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.UsingIEqualityComparer">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(IEqualityComparer comparer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.AllInstances.UsingOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.CollectionItemsEqualConstraint,System.Comparison{``0},NUnit.Framework.Constraints.CollectionItemsEqualConstraint})">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.AllInstances.UsingOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.CollectionItemsEqualConstraint,System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.CollectionItemsEqualConstraint})">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.AllInstances.UsingOf1IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.CollectionItemsEqualConstraint,System.Collections.Generic.IEqualityComparer{``0},NUnit.Framework.Constraints.CollectionItemsEqualConstraint})">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.AllInstances.IgnoreCaseGet">
            <summary>Sets the shim of CollectionItemsEqualConstraint.get_IgnoreCase()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.AllInstances.ItemsEqualObjectObject">
            <summary>Sets the shim of CollectionItemsEqualConstraint.ItemsEqual(Object x, Object y)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.AllInstances.TallyIEnumerable">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Tally(IEnumerable c)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.AllInstances.UsingEqualityAdapter">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(EqualityAdapter adapter)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.AllInstances.UsingIComparer">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionItemsEqualConstraint.AllInstances.UsingIEqualityComparer">
            <summary>Sets the shim of CollectionItemsEqualConstraint.Using(IEqualityComparer comparer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionOperator">
            <summary>Shim type of NUnit.Framework.Constraints.CollectionOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOperator.#ctor(NUnit.Framework.Constraints.CollectionOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOperator.Constructor">
            <summary>Sets the shim of CollectionOperator.CollectionOperator()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.CollectionOrderedConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.#ctor(NUnit.Framework.Constraints.CollectionOrderedConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.UsingOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Comparison{``0},NUnit.Framework.Constraints.CollectionOrderedConstraint})">
            <summary>Sets the shim of CollectionOrderedConstraint.Using(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.UsingOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.CollectionOrderedConstraint})">
            <summary>Sets the shim of CollectionOrderedConstraint.Using(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AscendingGet">
            <summary>Sets the shim of CollectionOrderedConstraint.get_Ascending()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.ByString">
            <summary>Sets the shim of CollectionOrderedConstraint.By(String propertyName)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.Constructor">
            <summary>Sets the shim of CollectionOrderedConstraint.CollectionOrderedConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.CreateNextStepString">
            <summary>Sets the shim of CollectionOrderedConstraint.CreateNextStep(String propertyName)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.DescendingGet">
            <summary>Sets the shim of CollectionOrderedConstraint.get_Descending()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.DescriptionGet">
            <summary>Sets the shim of CollectionOrderedConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.DisplayNameGet">
            <summary>Sets the shim of CollectionOrderedConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.GetStringRepresentation">
            <summary>Sets the shim of CollectionOrderedConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.MatchesIEnumerable">
            <summary>Sets the shim of CollectionOrderedConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.ThenGet">
            <summary>Sets the shim of CollectionOrderedConstraint.get_Then()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.UsingIComparer">
            <summary>Sets the shim of CollectionOrderedConstraint.Using(IComparer comparer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AllInstances.UsingOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.CollectionOrderedConstraint,System.Comparison{``0},NUnit.Framework.Constraints.CollectionOrderedConstraint})">
            <summary>Sets the shim of CollectionOrderedConstraint.Using(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AllInstances.UsingOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.CollectionOrderedConstraint,System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.CollectionOrderedConstraint})">
            <summary>Sets the shim of CollectionOrderedConstraint.Using(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AllInstances.AscendingGet">
            <summary>Sets the shim of CollectionOrderedConstraint.get_Ascending()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AllInstances.ByString">
            <summary>Sets the shim of CollectionOrderedConstraint.By(String propertyName)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AllInstances.CreateNextStepString">
            <summary>Sets the shim of CollectionOrderedConstraint.CreateNextStep(String propertyName)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AllInstances.DescendingGet">
            <summary>Sets the shim of CollectionOrderedConstraint.get_Descending()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of CollectionOrderedConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AllInstances.DisplayNameGet">
            <summary>Sets the shim of CollectionOrderedConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AllInstances.GetStringRepresentation">
            <summary>Sets the shim of CollectionOrderedConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AllInstances.MatchesIEnumerable">
            <summary>Sets the shim of CollectionOrderedConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AllInstances.ThenGet">
            <summary>Sets the shim of CollectionOrderedConstraint.get_Then()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionOrderedConstraint.AllInstances.UsingIComparer">
            <summary>Sets the shim of CollectionOrderedConstraint.Using(IComparer comparer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.CollectionSubsetConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.#ctor(NUnit.Framework.Constraints.CollectionSubsetConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.UsingOf2FuncOfM0M1Boolean``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0,``1,System.Boolean},NUnit.Framework.Constraints.CollectionSubsetConstraint})">
            <summary>Sets the shim of CollectionSubsetConstraint.Using(Func`3&lt;!!0,!!1,Boolean&gt; comparison)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.ConstructorIEnumerable">
            <summary>Sets the shim of CollectionSubsetConstraint.CollectionSubsetConstraint(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.DescriptionGet">
            <summary>Sets the shim of CollectionSubsetConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.DisplayNameGet">
            <summary>Sets the shim of CollectionSubsetConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.MatchesIEnumerable">
            <summary>Sets the shim of CollectionSubsetConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.AllInstances.UsingOf2FuncOfM0M1Boolean``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.CollectionSubsetConstraint,System.Func{``0,``1,System.Boolean},NUnit.Framework.Constraints.CollectionSubsetConstraint})">
            <summary>Sets the shim of CollectionSubsetConstraint.Using(Func`3&lt;!!0,!!1,Boolean&gt; comparison)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of CollectionSubsetConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.AllInstances.DisplayNameGet">
            <summary>Sets the shim of CollectionSubsetConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionSubsetConstraint.AllInstances.MatchesIEnumerable">
            <summary>Sets the shim of CollectionSubsetConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionSupersetConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.CollectionSupersetConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionSupersetConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionSupersetConstraint.#ctor(NUnit.Framework.Constraints.CollectionSupersetConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionSupersetConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionSupersetConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionSupersetConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionSupersetConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionSupersetConstraint.UsingOf2FuncOfM0M1Boolean``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0,``1,System.Boolean},NUnit.Framework.Constraints.CollectionSupersetConstraint})">
            <summary>Sets the shim of CollectionSupersetConstraint.Using(Func`3&lt;!!0,!!1,Boolean&gt; comparison)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionSupersetConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionSupersetConstraint.ConstructorIEnumerable">
            <summary>Sets the shim of CollectionSupersetConstraint.CollectionSupersetConstraint(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionSupersetConstraint.DescriptionGet">
            <summary>Sets the shim of CollectionSupersetConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionSupersetConstraint.DisplayNameGet">
            <summary>Sets the shim of CollectionSupersetConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionSupersetConstraint.MatchesIEnumerable">
            <summary>Sets the shim of CollectionSupersetConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionSupersetConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionSupersetConstraint.AllInstances.UsingOf2FuncOfM0M1Boolean``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.CollectionSupersetConstraint,System.Func{``0,``1,System.Boolean},NUnit.Framework.Constraints.CollectionSupersetConstraint})">
            <summary>Sets the shim of CollectionSupersetConstraint.Using(Func`3&lt;!!0,!!1,Boolean&gt; comparison)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionSupersetConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of CollectionSupersetConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionSupersetConstraint.AllInstances.DisplayNameGet">
            <summary>Sets the shim of CollectionSupersetConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionSupersetConstraint.AllInstances.MatchesIEnumerable">
            <summary>Sets the shim of CollectionSupersetConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionTally">
            <summary>Shim type of NUnit.Framework.Constraints.CollectionTally</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.#ctor(NUnit.Framework.Constraints.CollectionTally)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.ConstructorNUnitEqualityComparerIEnumerable">
            <summary>Sets the shim of CollectionTally.CollectionTally(NUnitEqualityComparer comparer, IEnumerable c)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.CountGet">
            <summary>Sets the shim of CollectionTally.get_Count()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.ItemsEqualObjectObject">
            <summary>Sets the shim of CollectionTally.ItemsEqual(Object expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.TryRemoveIEnumerable">
            <summary>Sets the shim of CollectionTally.TryRemove(IEnumerable c)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.TryRemoveObject">
            <summary>Sets the shim of CollectionTally.TryRemove(Object o)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.AllInstances.CountGet">
            <summary>Sets the shim of CollectionTally.get_Count()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.AllInstances.ItemsEqualObjectObject">
            <summary>Sets the shim of CollectionTally.ItemsEqual(Object expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.AllInstances.TryRemoveIEnumerable">
            <summary>Sets the shim of CollectionTally.TryRemove(IEnumerable c)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimCollectionTally.AllInstances.TryRemoveObject">
            <summary>Sets the shim of CollectionTally.TryRemove(Object o)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimComparisonAdapter">
            <summary>Shim type of NUnit.Framework.Constraints.ComparisonAdapter</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonAdapter.#ctor(NUnit.Framework.Constraints.ComparisonAdapter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonAdapter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonAdapter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonAdapter.ForOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Comparison{``0},NUnit.Framework.Constraints.ComparisonAdapter})">
            <summary>Sets the shim of ComparisonAdapter.For(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonAdapter.ForOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.ComparisonAdapter})">
            <summary>Sets the shim of ComparisonAdapter.For(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimComparisonAdapter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimComparisonAdapter.Constructor">
            <summary>Sets the shim of ComparisonAdapter.ComparisonAdapter()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimComparisonAdapter.DefaultGet">
            <summary>Sets the shim of ComparisonAdapter.get_Default()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimComparisonAdapter.ForIComparer">
            <summary>Sets the shim of ComparisonAdapter.For(IComparer comparer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimComparisonAdapter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.ComparisonConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.#ctor(NUnit.Framework.Constraints.ComparisonConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of ComparisonConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.UsingOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Comparison{``0},NUnit.Framework.Constraints.ComparisonConstraint})">
            <summary>Sets the shim of ComparisonConstraint.Using(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.UsingOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.ComparisonConstraint})">
            <summary>Sets the shim of ComparisonConstraint.Using(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.ConstructorObject">
            <summary>Sets the shim of ComparisonConstraint.ComparisonConstraint(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.PercentGet">
            <summary>Sets the shim of ComparisonConstraint.get_Percent()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.UsingIComparer">
            <summary>Sets the shim of ComparisonConstraint.Using(IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.WithinObject">
            <summary>Sets the shim of ComparisonConstraint.Within(Object amount)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ComparisonConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of ComparisonConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.AllInstances.UsingOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ComparisonConstraint,System.Comparison{``0},NUnit.Framework.Constraints.ComparisonConstraint})">
            <summary>Sets the shim of ComparisonConstraint.Using(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.AllInstances.UsingOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ComparisonConstraint,System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.ComparisonConstraint})">
            <summary>Sets the shim of ComparisonConstraint.Using(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.AllInstances.PercentGet">
            <summary>Sets the shim of ComparisonConstraint.get_Percent()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.AllInstances.UsingIComparer">
            <summary>Sets the shim of ComparisonConstraint.Using(IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimComparisonConstraint.AllInstances.WithinObject">
            <summary>Sets the shim of ComparisonConstraint.Within(Object amount)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.Constraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraint.#ctor(NUnit.Framework.Constraints.Constraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets the shim of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AfterInt32">
            <summary>Sets the shim of Constraint.After(Int32 delay)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AfterInt32Int32">
            <summary>Sets the shim of Constraint.After(Int32 delayInMilliseconds, Int32 pollingInterval)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AndGet">
            <summary>Sets the shim of Constraint.get_And()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.ArgumentsGet">
            <summary>Sets the shim of Constraint.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.ArgumentsSetObjectArray">
            <summary>Sets the shim of Constraint.set_Arguments(Object[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.BitwiseAndOpConstraintConstraint">
            <summary>Sets the shim of Constraint.op_BitwiseAnd(Constraint left, Constraint right)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.BitwiseOrOpConstraintConstraint">
            <summary>Sets the shim of Constraint.op_BitwiseOr(Constraint left, Constraint right)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.BuilderGet">
            <summary>Sets the shim of Constraint.get_Builder()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.BuilderSetConstraintBuilder">
            <summary>Sets the shim of Constraint.set_Builder(ConstraintBuilder value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.ConstructorObjectArray">
            <summary>Sets the shim of Constraint.Constraint(Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.DescriptionGet">
            <summary>Sets the shim of Constraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.DescriptionSetString">
            <summary>Sets the shim of Constraint.set_Description(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.DisplayNameGet">
            <summary>Sets the shim of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.GetStringRepresentation">
            <summary>Sets the shim of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.LogicalNotOpConstraint">
            <summary>Sets the shim of Constraint.op_LogicalNot(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.NUnitFrameworkConstraintsIResolveConstraintResolve">
            <summary>Sets the shim of Constraint.NUnit.Framework.Constraints.IResolveConstraint.Resolve()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.OrGet">
            <summary>Sets the shim of Constraint.get_Or()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.ToString">
            <summary>Sets the shim of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.WithGet">
            <summary>Sets the shim of Constraint.get_With()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint._ctorb__1_0">
            <summary>Sets the shim of Constraint.&lt;.ctor&gt;b__1_0()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint._displayableObject">
            <summary>Sets the shim of Constraint._displayable(Object o)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.Constraint,NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{NUnit.Framework.Constraints.Constraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.Constraint,NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets the shim of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.AfterInt32">
            <summary>Sets the shim of Constraint.After(Int32 delay)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.AfterInt32Int32">
            <summary>Sets the shim of Constraint.After(Int32 delayInMilliseconds, Int32 pollingInterval)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.AndGet">
            <summary>Sets the shim of Constraint.get_And()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.ArgumentsGet">
            <summary>Sets the shim of Constraint.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.ArgumentsSetObjectArray">
            <summary>Sets the shim of Constraint.set_Arguments(Object[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.BuilderGet">
            <summary>Sets the shim of Constraint.get_Builder()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.BuilderSetConstraintBuilder">
            <summary>Sets the shim of Constraint.set_Builder(ConstraintBuilder value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of Constraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.DescriptionSetString">
            <summary>Sets the shim of Constraint.set_Description(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.DisplayNameGet">
            <summary>Sets the shim of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.GetStringRepresentation">
            <summary>Sets the shim of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.NUnitFrameworkConstraintsIResolveConstraintResolve">
            <summary>Sets the shim of Constraint.NUnit.Framework.Constraints.IResolveConstraint.Resolve()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.OrGet">
            <summary>Sets the shim of Constraint.get_Or()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.ToString01">
            <summary>Sets the shim of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances.WithGet">
            <summary>Sets the shim of Constraint.get_With()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraint.AllInstances._ctorb__1_0">
            <summary>Sets the shim of Constraint.&lt;.ctor&gt;b__1_0()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder">
            <summary>Shim type of NUnit.Framework.Constraints.ConstraintBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.#ctor(NUnit.Framework.Constraints.ConstraintBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.AppendConstraint">
            <summary>Sets the shim of ConstraintBuilder.Append(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.AppendConstraintOperator">
            <summary>Sets the shim of ConstraintBuilder.Append(ConstraintOperator op)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.Constructor">
            <summary>Sets the shim of ConstraintBuilder.ConstraintBuilder()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.IsResolvableGet">
            <summary>Sets the shim of ConstraintBuilder.get_IsResolvable()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ReduceOperatorStackInt32">
            <summary>Sets the shim of ConstraintBuilder.ReduceOperatorStack(Int32 targetPrecedence)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.Resolve">
            <summary>Sets the shim of ConstraintBuilder.Resolve()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.SetTopOperatorRightContextObject">
            <summary>Sets the shim of ConstraintBuilder.SetTopOperatorRightContext(Object rightContext)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.AllInstances.AppendConstraint">
            <summary>Sets the shim of ConstraintBuilder.Append(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.AllInstances.AppendConstraintOperator">
            <summary>Sets the shim of ConstraintBuilder.Append(ConstraintOperator op)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.AllInstances.IsResolvableGet">
            <summary>Sets the shim of ConstraintBuilder.get_IsResolvable()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.AllInstances.ReduceOperatorStackInt32">
            <summary>Sets the shim of ConstraintBuilder.ReduceOperatorStack(Int32 targetPrecedence)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.AllInstances.Resolve">
            <summary>Sets the shim of ConstraintBuilder.Resolve()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.AllInstances.SetTopOperatorRightContextObject">
            <summary>Sets the shim of ConstraintBuilder.SetTopOperatorRightContext(Object rightContext)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack">
            <summary>Shim type of NUnit.Framework.Constraints.ConstraintBuilder+ConstraintStack</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.#ctor(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.ConstructorConstraintBuilder">
            <summary>Sets the shim of ConstraintStack.ConstraintStack(ConstraintBuilder builder)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.EmptyGet">
            <summary>Sets the shim of ConstraintStack.get_Empty()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.Pop">
            <summary>Sets the shim of ConstraintStack.Pop()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.PushIConstraint">
            <summary>Sets the shim of ConstraintStack.Push(IConstraint constraint)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.AllInstances.EmptyGet">
            <summary>Sets the shim of ConstraintStack.get_Empty()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.AllInstances.Pop">
            <summary>Sets the shim of ConstraintStack.Pop()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimConstraintStack.AllInstances.PushIConstraint">
            <summary>Sets the shim of ConstraintStack.Push(IConstraint constraint)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack">
            <summary>Shim type of NUnit.Framework.Constraints.ConstraintBuilder+OperatorStack</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.#ctor(NUnit.Framework.Constraints.ConstraintBuilder.OperatorStack)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.ConstructorConstraintBuilder">
            <summary>Sets the shim of OperatorStack.OperatorStack(ConstraintBuilder builder)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.EmptyGet">
            <summary>Sets the shim of OperatorStack.get_Empty()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.Pop">
            <summary>Sets the shim of OperatorStack.Pop()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.PushConstraintOperator">
            <summary>Sets the shim of OperatorStack.Push(ConstraintOperator op)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.TopGet">
            <summary>Sets the shim of OperatorStack.get_Top()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.AllInstances.EmptyGet">
            <summary>Sets the shim of OperatorStack.get_Empty()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.AllInstances.Pop">
            <summary>Sets the shim of OperatorStack.Pop()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.AllInstances.PushConstraintOperator">
            <summary>Sets the shim of OperatorStack.Push(ConstraintOperator op)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintBuilder.ShimOperatorStack.AllInstances.TopGet">
            <summary>Sets the shim of OperatorStack.get_Top()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression">
            <summary>Shim type of NUnit.Framework.Constraints.ConstraintExpression</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.#ctor(NUnit.Framework.Constraints.ConstraintExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AssignableFromOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.AssignableFromConstraint})">
            <summary>Sets the shim of ConstraintExpression.AssignableFrom()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AssignableToOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.AssignableToConstraint})">
            <summary>Sets the shim of ConstraintExpression.AssignableTo()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AttributeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ResolvableConstraintExpression})">
            <summary>Sets the shim of ConstraintExpression.Attribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.InstanceOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.InstanceOfTypeConstraint})">
            <summary>Sets the shim of ConstraintExpression.InstanceOf()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.MatchesOf1PredicateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Predicate{``0},NUnit.Framework.Constraints.Constraint})">
            <summary>Sets the shim of ConstraintExpression.Matches(Predicate`1&lt;!!0&gt; predicate)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.TypeOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ExactTypeConstraint})">
            <summary>Sets the shim of ConstraintExpression.TypeOf()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllGet">
            <summary>Sets the shim of ConstraintExpression.get_All()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AppendConstraint">
            <summary>Sets the shim of ConstraintExpression.Append(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AppendConstraintOperator">
            <summary>Sets the shim of ConstraintExpression.Append(ConstraintOperator op)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AppendSelfResolvingOperator">
            <summary>Sets the shim of ConstraintExpression.Append(SelfResolvingOperator op)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AssignableFromType">
            <summary>Sets the shim of ConstraintExpression.AssignableFrom(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AssignableToType">
            <summary>Sets the shim of ConstraintExpression.AssignableTo(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AtLeastObject">
            <summary>Sets the shim of ConstraintExpression.AtLeast(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AtMostObject">
            <summary>Sets the shim of ConstraintExpression.AtMost(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AttributeType">
            <summary>Sets the shim of ConstraintExpression.Attribute(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.BinarySerializableGet">
            <summary>Sets the shim of ConstraintExpression.get_BinarySerializable()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.Constructor">
            <summary>Sets the shim of ConstraintExpression.ConstraintExpression()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.ConstructorConstraintBuilder">
            <summary>Sets the shim of ConstraintExpression.ConstraintExpression(ConstraintBuilder builder)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.ContainKeyObject">
            <summary>Sets the shim of ConstraintExpression.ContainKey(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.ContainObject">
            <summary>Sets the shim of ConstraintExpression.Contain(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.ContainString">
            <summary>Sets the shim of ConstraintExpression.Contain(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.ContainValueObject">
            <summary>Sets the shim of ConstraintExpression.ContainValue(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.ContainsObject">
            <summary>Sets the shim of ConstraintExpression.Contains(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.ContainsString">
            <summary>Sets the shim of ConstraintExpression.Contains(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.ContainsSubstringString">
            <summary>Sets the shim of ConstraintExpression.ContainsSubstring(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.CountGet">
            <summary>Sets the shim of ConstraintExpression.get_Count()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.EmptyGet">
            <summary>Sets the shim of ConstraintExpression.get_Empty()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.EndWithString">
            <summary>Sets the shim of ConstraintExpression.EndWith(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.EndsWithString">
            <summary>Sets the shim of ConstraintExpression.EndsWith(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.EqualToObject">
            <summary>Sets the shim of ConstraintExpression.EqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.EquivalentToIEnumerable">
            <summary>Sets the shim of ConstraintExpression.EquivalentTo(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.ExactlyInt32">
            <summary>Sets the shim of ConstraintExpression.Exactly(Int32 expectedCount)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.ExistGet">
            <summary>Sets the shim of ConstraintExpression.get_Exist()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.FalseGet">
            <summary>Sets the shim of ConstraintExpression.get_False()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.GreaterThanObject">
            <summary>Sets the shim of ConstraintExpression.GreaterThan(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.GreaterThanOrEqualToObject">
            <summary>Sets the shim of ConstraintExpression.GreaterThanOrEqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.InRangeIComparableIComparable">
            <summary>Sets the shim of ConstraintExpression.InRange(IComparable from, IComparable to)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.InnerExceptionGet">
            <summary>Sets the shim of ConstraintExpression.get_InnerException()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.InstanceOfType">
            <summary>Sets the shim of ConstraintExpression.InstanceOf(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.LengthGet">
            <summary>Sets the shim of ConstraintExpression.get_Length()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.LessThanObject">
            <summary>Sets the shim of ConstraintExpression.LessThan(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.LessThanOrEqualToObject">
            <summary>Sets the shim of ConstraintExpression.LessThanOrEqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.MatchString">
            <summary>Sets the shim of ConstraintExpression.Match(String pattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.MatchesIResolveConstraint">
            <summary>Sets the shim of ConstraintExpression.Matches(IResolveConstraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.MatchesString">
            <summary>Sets the shim of ConstraintExpression.Matches(String pattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.MemberObject">
            <summary>Sets the shim of ConstraintExpression.Member(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.MessageGet">
            <summary>Sets the shim of ConstraintExpression.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.NaNGet">
            <summary>Sets the shim of ConstraintExpression.get_NaN()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.NegativeGet">
            <summary>Sets the shim of ConstraintExpression.get_Negative()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.NoGet">
            <summary>Sets the shim of ConstraintExpression.get_No()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.NoneGet">
            <summary>Sets the shim of ConstraintExpression.get_None()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.NotGet">
            <summary>Sets the shim of ConstraintExpression.get_Not()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.NullGet">
            <summary>Sets the shim of ConstraintExpression.get_Null()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.OrderedGet">
            <summary>Sets the shim of ConstraintExpression.get_Ordered()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.PositiveGet">
            <summary>Sets the shim of ConstraintExpression.get_Positive()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.PropertyString">
            <summary>Sets the shim of ConstraintExpression.Property(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.SameAsObject">
            <summary>Sets the shim of ConstraintExpression.SameAs(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.SamePathOrUnderString">
            <summary>Sets the shim of ConstraintExpression.SamePathOrUnder(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.SamePathString">
            <summary>Sets the shim of ConstraintExpression.SamePath(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.SomeGet">
            <summary>Sets the shim of ConstraintExpression.get_Some()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.StartWithString">
            <summary>Sets the shim of ConstraintExpression.StartWith(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.StartsWithString">
            <summary>Sets the shim of ConstraintExpression.StartsWith(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.StringContainingString">
            <summary>Sets the shim of ConstraintExpression.StringContaining(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.StringEndingString">
            <summary>Sets the shim of ConstraintExpression.StringEnding(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.StringMatchingString">
            <summary>Sets the shim of ConstraintExpression.StringMatching(String pattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.StringStartingString">
            <summary>Sets the shim of ConstraintExpression.StringStarting(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.SubPathOfString">
            <summary>Sets the shim of ConstraintExpression.SubPathOf(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.SubsetOfIEnumerable">
            <summary>Sets the shim of ConstraintExpression.SubsetOf(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.SupersetOfIEnumerable">
            <summary>Sets the shim of ConstraintExpression.SupersetOf(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.ToString">
            <summary>Sets the shim of ConstraintExpression.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.TrueGet">
            <summary>Sets the shim of ConstraintExpression.get_True()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.TypeOfType">
            <summary>Sets the shim of ConstraintExpression.TypeOf(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.UniqueGet">
            <summary>Sets the shim of ConstraintExpression.get_Unique()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.WithGet">
            <summary>Sets the shim of ConstraintExpression.get_With()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.XmlSerializableGet">
            <summary>Sets the shim of ConstraintExpression.get_XmlSerializable()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.ZeroGet">
            <summary>Sets the shim of ConstraintExpression.get_Zero()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.AssignableFromOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ConstraintExpression,NUnit.Framework.Constraints.AssignableFromConstraint})">
            <summary>Sets the shim of ConstraintExpression.AssignableFrom()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.AssignableToOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ConstraintExpression,NUnit.Framework.Constraints.AssignableToConstraint})">
            <summary>Sets the shim of ConstraintExpression.AssignableTo()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.AttributeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ConstraintExpression,NUnit.Framework.Constraints.ResolvableConstraintExpression})">
            <summary>Sets the shim of ConstraintExpression.Attribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.InstanceOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ConstraintExpression,NUnit.Framework.Constraints.InstanceOfTypeConstraint})">
            <summary>Sets the shim of ConstraintExpression.InstanceOf()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.MatchesOf1PredicateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ConstraintExpression,System.Predicate{``0},NUnit.Framework.Constraints.Constraint})">
            <summary>Sets the shim of ConstraintExpression.Matches(Predicate`1&lt;!!0&gt; predicate)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.TypeOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ConstraintExpression,NUnit.Framework.Constraints.ExactTypeConstraint})">
            <summary>Sets the shim of ConstraintExpression.TypeOf()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.AllGet">
            <summary>Sets the shim of ConstraintExpression.get_All()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.AppendConstraint">
            <summary>Sets the shim of ConstraintExpression.Append(Constraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.AppendConstraintOperator">
            <summary>Sets the shim of ConstraintExpression.Append(ConstraintOperator op)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.AppendSelfResolvingOperator">
            <summary>Sets the shim of ConstraintExpression.Append(SelfResolvingOperator op)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.AssignableFromType">
            <summary>Sets the shim of ConstraintExpression.AssignableFrom(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.AssignableToType">
            <summary>Sets the shim of ConstraintExpression.AssignableTo(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.AtLeastObject">
            <summary>Sets the shim of ConstraintExpression.AtLeast(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.AtMostObject">
            <summary>Sets the shim of ConstraintExpression.AtMost(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.AttributeType">
            <summary>Sets the shim of ConstraintExpression.Attribute(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.BinarySerializableGet">
            <summary>Sets the shim of ConstraintExpression.get_BinarySerializable()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.ContainKeyObject">
            <summary>Sets the shim of ConstraintExpression.ContainKey(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.ContainObject">
            <summary>Sets the shim of ConstraintExpression.Contain(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.ContainString">
            <summary>Sets the shim of ConstraintExpression.Contain(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.ContainValueObject">
            <summary>Sets the shim of ConstraintExpression.ContainValue(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.ContainsObject">
            <summary>Sets the shim of ConstraintExpression.Contains(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.ContainsString">
            <summary>Sets the shim of ConstraintExpression.Contains(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.ContainsSubstringString">
            <summary>Sets the shim of ConstraintExpression.ContainsSubstring(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.CountGet">
            <summary>Sets the shim of ConstraintExpression.get_Count()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.EmptyGet">
            <summary>Sets the shim of ConstraintExpression.get_Empty()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.EndWithString">
            <summary>Sets the shim of ConstraintExpression.EndWith(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.EndsWithString">
            <summary>Sets the shim of ConstraintExpression.EndsWith(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.EqualToObject">
            <summary>Sets the shim of ConstraintExpression.EqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.EquivalentToIEnumerable">
            <summary>Sets the shim of ConstraintExpression.EquivalentTo(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.ExactlyInt32">
            <summary>Sets the shim of ConstraintExpression.Exactly(Int32 expectedCount)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.ExistGet">
            <summary>Sets the shim of ConstraintExpression.get_Exist()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.FalseGet">
            <summary>Sets the shim of ConstraintExpression.get_False()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.GreaterThanObject">
            <summary>Sets the shim of ConstraintExpression.GreaterThan(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.GreaterThanOrEqualToObject">
            <summary>Sets the shim of ConstraintExpression.GreaterThanOrEqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.InRangeIComparableIComparable">
            <summary>Sets the shim of ConstraintExpression.InRange(IComparable from, IComparable to)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.InnerExceptionGet">
            <summary>Sets the shim of ConstraintExpression.get_InnerException()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.InstanceOfType">
            <summary>Sets the shim of ConstraintExpression.InstanceOf(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.LengthGet">
            <summary>Sets the shim of ConstraintExpression.get_Length()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.LessThanObject">
            <summary>Sets the shim of ConstraintExpression.LessThan(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.LessThanOrEqualToObject">
            <summary>Sets the shim of ConstraintExpression.LessThanOrEqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.MatchString">
            <summary>Sets the shim of ConstraintExpression.Match(String pattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.MatchesIResolveConstraint">
            <summary>Sets the shim of ConstraintExpression.Matches(IResolveConstraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.MatchesString">
            <summary>Sets the shim of ConstraintExpression.Matches(String pattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.MemberObject">
            <summary>Sets the shim of ConstraintExpression.Member(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.MessageGet">
            <summary>Sets the shim of ConstraintExpression.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.NaNGet">
            <summary>Sets the shim of ConstraintExpression.get_NaN()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.NegativeGet">
            <summary>Sets the shim of ConstraintExpression.get_Negative()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.NoGet">
            <summary>Sets the shim of ConstraintExpression.get_No()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.NoneGet">
            <summary>Sets the shim of ConstraintExpression.get_None()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.NotGet">
            <summary>Sets the shim of ConstraintExpression.get_Not()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.NullGet">
            <summary>Sets the shim of ConstraintExpression.get_Null()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.OrderedGet">
            <summary>Sets the shim of ConstraintExpression.get_Ordered()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.PositiveGet">
            <summary>Sets the shim of ConstraintExpression.get_Positive()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.PropertyString">
            <summary>Sets the shim of ConstraintExpression.Property(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.SameAsObject">
            <summary>Sets the shim of ConstraintExpression.SameAs(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.SamePathOrUnderString">
            <summary>Sets the shim of ConstraintExpression.SamePathOrUnder(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.SamePathString">
            <summary>Sets the shim of ConstraintExpression.SamePath(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.SomeGet">
            <summary>Sets the shim of ConstraintExpression.get_Some()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.StartWithString">
            <summary>Sets the shim of ConstraintExpression.StartWith(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.StartsWithString">
            <summary>Sets the shim of ConstraintExpression.StartsWith(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.StringContainingString">
            <summary>Sets the shim of ConstraintExpression.StringContaining(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.StringEndingString">
            <summary>Sets the shim of ConstraintExpression.StringEnding(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.StringMatchingString">
            <summary>Sets the shim of ConstraintExpression.StringMatching(String pattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.StringStartingString">
            <summary>Sets the shim of ConstraintExpression.StringStarting(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.SubPathOfString">
            <summary>Sets the shim of ConstraintExpression.SubPathOf(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.SubsetOfIEnumerable">
            <summary>Sets the shim of ConstraintExpression.SubsetOf(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.SupersetOfIEnumerable">
            <summary>Sets the shim of ConstraintExpression.SupersetOf(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.ToString01">
            <summary>Sets the shim of ConstraintExpression.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.TrueGet">
            <summary>Sets the shim of ConstraintExpression.get_True()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.TypeOfType">
            <summary>Sets the shim of ConstraintExpression.TypeOf(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.UniqueGet">
            <summary>Sets the shim of ConstraintExpression.get_Unique()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.WithGet">
            <summary>Sets the shim of ConstraintExpression.get_With()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.XmlSerializableGet">
            <summary>Sets the shim of ConstraintExpression.get_XmlSerializable()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintExpression.AllInstances.ZeroGet">
            <summary>Sets the shim of ConstraintExpression.get_Zero()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator">
            <summary>Shim type of NUnit.Framework.Constraints.ConstraintOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.#ctor(NUnit.Framework.Constraints.ConstraintOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.Constructor">
            <summary>Sets the shim of ConstraintOperator.ConstraintOperator()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.LeftContextGet">
            <summary>Sets the shim of ConstraintOperator.get_LeftContext()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.LeftContextSetObject">
            <summary>Sets the shim of ConstraintOperator.set_LeftContext(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.LeftPrecedenceGet">
            <summary>Sets the shim of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.RightContextGet">
            <summary>Sets the shim of ConstraintOperator.get_RightContext()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.RightContextSetObject">
            <summary>Sets the shim of ConstraintOperator.set_RightContext(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.RightPrecedenceGet">
            <summary>Sets the shim of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.AllInstances.LeftContextGet">
            <summary>Sets the shim of ConstraintOperator.get_LeftContext()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.AllInstances.LeftContextSetObject">
            <summary>Sets the shim of ConstraintOperator.set_LeftContext(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.AllInstances.LeftPrecedenceGet">
            <summary>Sets the shim of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.AllInstances.RightContextGet">
            <summary>Sets the shim of ConstraintOperator.get_RightContext()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.AllInstances.RightContextSetObject">
            <summary>Sets the shim of ConstraintOperator.set_RightContext(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintOperator.AllInstances.RightPrecedenceGet">
            <summary>Sets the shim of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintResult">
            <summary>Shim type of NUnit.Framework.Constraints.ConstraintResult</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.#ctor(NUnit.Framework.Constraints.ConstraintResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.ActualValueGet">
            <summary>Sets the shim of ConstraintResult.get_ActualValue()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.ActualValueSetObject">
            <summary>Sets the shim of ConstraintResult.set_ActualValue(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.ConstructorIConstraintObject">
            <summary>Sets the shim of ConstraintResult.ConstraintResult(IConstraint constraint, Object actualValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.ConstructorIConstraintObjectBoolean">
            <summary>Sets the shim of ConstraintResult.ConstraintResult(IConstraint constraint, Object actualValue, Boolean isSuccess)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.ConstructorIConstraintObjectConstraintStatus">
            <summary>Sets the shim of ConstraintResult.ConstraintResult(IConstraint constraint, Object actualValue, ConstraintStatus status)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.DescriptionGet">
            <summary>Sets the shim of ConstraintResult.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.IsSuccessGet">
            <summary>Sets the shim of ConstraintResult.get_IsSuccess()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.NameGet">
            <summary>Sets the shim of ConstraintResult.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.StatusGet">
            <summary>Sets the shim of ConstraintResult.get_Status()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.StatusSetConstraintStatus">
            <summary>Sets the shim of ConstraintResult.set_Status(ConstraintStatus value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.WriteActualValueToMessageWriter">
            <summary>Sets the shim of ConstraintResult.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.WriteMessageToMessageWriter">
            <summary>Sets the shim of ConstraintResult.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.AllInstances.ActualValueGet">
            <summary>Sets the shim of ConstraintResult.get_ActualValue()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.AllInstances.ActualValueSetObject">
            <summary>Sets the shim of ConstraintResult.set_ActualValue(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.AllInstances.DescriptionGet">
            <summary>Sets the shim of ConstraintResult.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.AllInstances.IsSuccessGet">
            <summary>Sets the shim of ConstraintResult.get_IsSuccess()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.AllInstances.NameGet">
            <summary>Sets the shim of ConstraintResult.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.AllInstances.StatusGet">
            <summary>Sets the shim of ConstraintResult.get_Status()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.AllInstances.StatusSetConstraintStatus">
            <summary>Sets the shim of ConstraintResult.set_Status(ConstraintStatus value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.AllInstances.WriteActualValueToMessageWriter">
            <summary>Sets the shim of ConstraintResult.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimConstraintResult.AllInstances.WriteMessageToMessageWriter">
            <summary>Sets the shim of ConstraintResult.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.ContainsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.#ctor(NUnit.Framework.Constraints.ContainsConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of ContainsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.ConstructorObject">
            <summary>Sets the shim of ContainsConstraint.ContainsConstraint(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.DescriptionGet">
            <summary>Sets the shim of ContainsConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.IgnoreCaseGet">
            <summary>Sets the shim of ContainsConstraint.get_IgnoreCase()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ContainsConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of ContainsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of ContainsConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimContainsConstraint.AllInstances.IgnoreCaseGet">
            <summary>Sets the shim of ContainsConstraint.get_IgnoreCase()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.DelayedConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.#ctor(NUnit.Framework.Constraints.DelayedConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of DelayedConstraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of DelayedConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of DelayedConstraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.InvokeDelegateOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets the shim of DelayedConstraint.InvokeDelegate(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ConstructorIConstraintInt32">
            <summary>Sets the shim of DelayedConstraint.DelayedConstraint(IConstraint baseConstraint, Int32 delayInMilliseconds)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ConstructorIConstraintInt32Int32">
            <summary>Sets the shim of DelayedConstraint.DelayedConstraint(IConstraint baseConstraint, Int32 delayInMilliseconds, Int32 pollingIntervalInMilliseconds)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ConstructorIConstraintIntervalInterval">
            <summary>Sets the shim of DelayedConstraint.DelayedConstraint(IConstraint baseConstraint, Interval delayInterval, Interval pollingInterval)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.DelayIntervalGet">
            <summary>Sets the shim of DelayedConstraint.get_DelayInterval()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.DelayIntervalSetInterval">
            <summary>Sets the shim of DelayedConstraint.set_DelayInterval(Interval value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.DescriptionGet">
            <summary>Sets the shim of DelayedConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.GetStringRepresentation">
            <summary>Sets the shim of DelayedConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.PollingIntervalGet">
            <summary>Sets the shim of DelayedConstraint.get_PollingInterval()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.PollingIntervalSetInterval">
            <summary>Sets the shim of DelayedConstraint.set_PollingInterval(Interval value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.TimestampDiffInt64Int64">
            <summary>Sets the shim of DelayedConstraint.TimestampDiff(Int64 timestamp1, Int64 timestamp2)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.TimestampOffsetInt64TimeSpan">
            <summary>Sets the shim of DelayedConstraint.TimestampOffset(Int64 timestamp, TimeSpan offset)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.AllInstances.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.DelayedConstraint,NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of DelayedConstraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.DelayedConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of DelayedConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.AllInstances.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{NUnit.Framework.Constraints.DelayedConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of DelayedConstraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.AllInstances.DelayIntervalGet">
            <summary>Sets the shim of DelayedConstraint.get_DelayInterval()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.AllInstances.DelayIntervalSetInterval">
            <summary>Sets the shim of DelayedConstraint.set_DelayInterval(Interval value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of DelayedConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.AllInstances.GetStringRepresentation">
            <summary>Sets the shim of DelayedConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.AllInstances.PollingIntervalGet">
            <summary>Sets the shim of DelayedConstraint.get_PollingInterval()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.AllInstances.PollingIntervalSetInterval">
            <summary>Sets the shim of DelayedConstraint.set_PollingInterval(Interval value)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithDimensionedDelayInterval">
            <summary>Shim type of NUnit.Framework.Constraints.DelayedConstraint+WithDimensionedDelayInterval</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithDimensionedDelayInterval.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithDimensionedDelayInterval.#ctor(NUnit.Framework.Constraints.DelayedConstraint.WithDimensionedDelayInterval)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithDimensionedDelayInterval.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithDimensionedDelayInterval.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithDimensionedDelayInterval.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithDimensionedDelayInterval.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithDimensionedDelayInterval.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithDimensionedDelayInterval.ConstructorDelayedConstraint">
            <summary>Sets the shim of WithDimensionedDelayInterval.WithDimensionedDelayInterval(DelayedConstraint parent)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithDimensionedDelayInterval.PollEveryInt32">
            <summary>Sets the shim of WithDimensionedDelayInterval.PollEvery(Int32 milliSeconds)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithDimensionedDelayInterval.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithDimensionedDelayInterval.AllInstances.PollEveryInt32">
            <summary>Sets the shim of WithDimensionedDelayInterval.PollEvery(Int32 milliSeconds)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawDelayInterval">
            <summary>Shim type of NUnit.Framework.Constraints.DelayedConstraint+WithRawDelayInterval</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawDelayInterval.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawDelayInterval.#ctor(NUnit.Framework.Constraints.DelayedConstraint.WithRawDelayInterval)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawDelayInterval.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawDelayInterval.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawDelayInterval.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawDelayInterval.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawDelayInterval.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawDelayInterval.ConstructorDelayedConstraint">
            <summary>Sets the shim of WithRawDelayInterval.WithRawDelayInterval(DelayedConstraint parent)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawDelayInterval.MilliSecondsGet">
            <summary>Sets the shim of WithRawDelayInterval.get_MilliSeconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawDelayInterval.MinutesGet">
            <summary>Sets the shim of WithRawDelayInterval.get_Minutes()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawDelayInterval.PollEveryInt32">
            <summary>Sets the shim of WithRawDelayInterval.PollEvery(Int32 milliSeconds)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawDelayInterval.SecondsGet">
            <summary>Sets the shim of WithRawDelayInterval.get_Seconds()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawDelayInterval.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawDelayInterval.AllInstances.MilliSecondsGet">
            <summary>Sets the shim of WithRawDelayInterval.get_MilliSeconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawDelayInterval.AllInstances.MinutesGet">
            <summary>Sets the shim of WithRawDelayInterval.get_Minutes()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawDelayInterval.AllInstances.PollEveryInt32">
            <summary>Sets the shim of WithRawDelayInterval.PollEvery(Int32 milliSeconds)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawDelayInterval.AllInstances.SecondsGet">
            <summary>Sets the shim of WithRawDelayInterval.get_Seconds()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawPollingInterval">
            <summary>Shim type of NUnit.Framework.Constraints.DelayedConstraint+WithRawPollingInterval</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawPollingInterval.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawPollingInterval.#ctor(NUnit.Framework.Constraints.DelayedConstraint.WithRawPollingInterval)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawPollingInterval.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawPollingInterval.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawPollingInterval.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawPollingInterval.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawPollingInterval.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawPollingInterval.ConstructorDelayedConstraint">
            <summary>Sets the shim of WithRawPollingInterval.WithRawPollingInterval(DelayedConstraint parent)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawPollingInterval.MilliSecondsGet">
            <summary>Sets the shim of WithRawPollingInterval.get_MilliSeconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawPollingInterval.MinutesGet">
            <summary>Sets the shim of WithRawPollingInterval.get_Minutes()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawPollingInterval.SecondsGet">
            <summary>Sets the shim of WithRawPollingInterval.get_Seconds()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawPollingInterval.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawPollingInterval.AllInstances.MilliSecondsGet">
            <summary>Sets the shim of WithRawPollingInterval.get_MilliSeconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawPollingInterval.AllInstances.MinutesGet">
            <summary>Sets the shim of WithRawPollingInterval.get_Minutes()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDelayedConstraint.ShimWithRawPollingInterval.AllInstances.SecondsGet">
            <summary>Sets the shim of WithRawPollingInterval.get_Seconds()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsKeyConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.DictionaryContainsKeyConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsKeyConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsKeyConstraint.#ctor(NUnit.Framework.Constraints.DictionaryContainsKeyConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsKeyConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsKeyConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsKeyConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsKeyConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsKeyConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsKeyConstraint.ConstructorObject">
            <summary>Sets the shim of DictionaryContainsKeyConstraint.DictionaryContainsKeyConstraint(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsKeyConstraint.DescriptionGet">
            <summary>Sets the shim of DictionaryContainsKeyConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsKeyConstraint.DisplayNameGet">
            <summary>Sets the shim of DictionaryContainsKeyConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsKeyConstraint.MatchesIEnumerable">
            <summary>Sets the shim of DictionaryContainsKeyConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsKeyConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsKeyConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of DictionaryContainsKeyConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsKeyConstraint.AllInstances.DisplayNameGet">
            <summary>Sets the shim of DictionaryContainsKeyConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsKeyConstraint.AllInstances.MatchesIEnumerable">
            <summary>Sets the shim of DictionaryContainsKeyConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsValueConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.DictionaryContainsValueConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsValueConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsValueConstraint.#ctor(NUnit.Framework.Constraints.DictionaryContainsValueConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsValueConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsValueConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsValueConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsValueConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsValueConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsValueConstraint.ConstructorObject">
            <summary>Sets the shim of DictionaryContainsValueConstraint.DictionaryContainsValueConstraint(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsValueConstraint.DescriptionGet">
            <summary>Sets the shim of DictionaryContainsValueConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsValueConstraint.DisplayNameGet">
            <summary>Sets the shim of DictionaryContainsValueConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsValueConstraint.MatchesIEnumerable">
            <summary>Sets the shim of DictionaryContainsValueConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsValueConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsValueConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of DictionaryContainsValueConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsValueConstraint.AllInstances.DisplayNameGet">
            <summary>Sets the shim of DictionaryContainsValueConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimDictionaryContainsValueConstraint.AllInstances.MatchesIEnumerable">
            <summary>Sets the shim of DictionaryContainsValueConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.EmptyCollectionConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.#ctor(NUnit.Framework.Constraints.EmptyCollectionConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.Constructor">
            <summary>Sets the shim of EmptyCollectionConstraint.EmptyCollectionConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.DescriptionGet">
            <summary>Sets the shim of EmptyCollectionConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.MatchesIEnumerable">
            <summary>Sets the shim of EmptyCollectionConstraint.Matches(IEnumerable collection)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of EmptyCollectionConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyCollectionConstraint.AllInstances.MatchesIEnumerable">
            <summary>Sets the shim of EmptyCollectionConstraint.Matches(IEnumerable collection)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.EmptyConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.#ctor(NUnit.Framework.Constraints.EmptyConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of EmptyConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.Constructor">
            <summary>Sets the shim of EmptyConstraint.EmptyConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.DescriptionGet">
            <summary>Sets the shim of EmptyConstraint.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.EmptyConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of EmptyConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of EmptyConstraint.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.EmptyDirectoryConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.#ctor(NUnit.Framework.Constraints.EmptyDirectoryConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of EmptyDirectoryConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.Constructor">
            <summary>Sets the shim of EmptyDirectoryConstraint.EmptyDirectoryConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.DescriptionGet">
            <summary>Sets the shim of EmptyDirectoryConstraint.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.EmptyDirectoryConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of EmptyDirectoryConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyDirectoryConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of EmptyDirectoryConstraint.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.EmptyStringConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.#ctor(NUnit.Framework.Constraints.EmptyStringConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.Constructor">
            <summary>Sets the shim of EmptyStringConstraint.EmptyStringConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.DescriptionGet">
            <summary>Sets the shim of EmptyStringConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.MatchesString">
            <summary>Sets the shim of EmptyStringConstraint.Matches(String actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of EmptyStringConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEmptyStringConstraint.AllInstances.MatchesString">
            <summary>Sets the shim of EmptyStringConstraint.Matches(String actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.EndsWithConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.#ctor(NUnit.Framework.Constraints.EndsWithConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.ConstructorString">
            <summary>Sets the shim of EndsWithConstraint.EndsWithConstraint(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.MatchesString">
            <summary>Sets the shim of EndsWithConstraint.Matches(String actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEndsWithConstraint.AllInstances.MatchesString">
            <summary>Sets the shim of EndsWithConstraint.Matches(String actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.EqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.#ctor(NUnit.Framework.Constraints.EqualConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AdjustArgumentIfNeededOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefAction{``0})">
            <summary>Sets the shim of EqualConstraint.AdjustArgumentIfNeeded(!!0&amp; arg)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of EqualConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.UsingOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Comparison{``0},NUnit.Framework.Constraints.EqualConstraint})">
            <summary>Sets the shim of EqualConstraint.Using(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.UsingOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.EqualConstraint})">
            <summary>Sets the shim of EqualConstraint.Using(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.UsingOf1IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEqualityComparer{``0},NUnit.Framework.Constraints.EqualConstraint})">
            <summary>Sets the shim of EqualConstraint.Using(IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AsCollectionGet">
            <summary>Sets the shim of EqualConstraint.get_AsCollection()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.CaseInsensitiveGet">
            <summary>Sets the shim of EqualConstraint.get_CaseInsensitive()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.ClipStringsGet">
            <summary>Sets the shim of EqualConstraint.get_ClipStrings()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.ClipStringsSetBoolean">
            <summary>Sets the shim of EqualConstraint.set_ClipStrings(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.ConstructorObject">
            <summary>Sets the shim of EqualConstraint.EqualConstraint(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.DaysGet">
            <summary>Sets the shim of EqualConstraint.get_Days()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.DescriptionGet">
            <summary>Sets the shim of EqualConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.FailurePointsGet">
            <summary>Sets the shim of EqualConstraint.get_FailurePoints()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.HoursGet">
            <summary>Sets the shim of EqualConstraint.get_Hours()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.IgnoreCaseGet">
            <summary>Sets the shim of EqualConstraint.get_IgnoreCase()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.MillisecondsGet">
            <summary>Sets the shim of EqualConstraint.get_Milliseconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.MinutesGet">
            <summary>Sets the shim of EqualConstraint.get_Minutes()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.NoClipGet">
            <summary>Sets the shim of EqualConstraint.get_NoClip()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.PercentGet">
            <summary>Sets the shim of EqualConstraint.get_Percent()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.SecondsGet">
            <summary>Sets the shim of EqualConstraint.get_Seconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.TicksGet">
            <summary>Sets the shim of EqualConstraint.get_Ticks()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.ToleranceGet">
            <summary>Sets the shim of EqualConstraint.get_Tolerance()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.UlpsGet">
            <summary>Sets the shim of EqualConstraint.get_Ulps()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.UsingIComparer">
            <summary>Sets the shim of EqualConstraint.Using(IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.UsingIEqualityComparer">
            <summary>Sets the shim of EqualConstraint.Using(IEqualityComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.WithSameOffsetGet">
            <summary>Sets the shim of EqualConstraint.get_WithSameOffset()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.WithinObject">
            <summary>Sets the shim of EqualConstraint.Within(Object amount)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.AdjustArgumentIfNeededOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefAction{NUnit.Framework.Constraints.EqualConstraint,``0})">
            <summary>Sets the shim of EqualConstraint.AdjustArgumentIfNeeded(!!0&amp; arg)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.EqualConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of EqualConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.UsingOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.EqualConstraint,System.Comparison{``0},NUnit.Framework.Constraints.EqualConstraint})">
            <summary>Sets the shim of EqualConstraint.Using(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.UsingOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.EqualConstraint,System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.EqualConstraint})">
            <summary>Sets the shim of EqualConstraint.Using(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.UsingOf1IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.EqualConstraint,System.Collections.Generic.IEqualityComparer{``0},NUnit.Framework.Constraints.EqualConstraint})">
            <summary>Sets the shim of EqualConstraint.Using(IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.AsCollectionGet">
            <summary>Sets the shim of EqualConstraint.get_AsCollection()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.CaseInsensitiveGet">
            <summary>Sets the shim of EqualConstraint.get_CaseInsensitive()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.ClipStringsGet">
            <summary>Sets the shim of EqualConstraint.get_ClipStrings()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.ClipStringsSetBoolean">
            <summary>Sets the shim of EqualConstraint.set_ClipStrings(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.DaysGet">
            <summary>Sets the shim of EqualConstraint.get_Days()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of EqualConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.FailurePointsGet">
            <summary>Sets the shim of EqualConstraint.get_FailurePoints()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.HoursGet">
            <summary>Sets the shim of EqualConstraint.get_Hours()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.IgnoreCaseGet">
            <summary>Sets the shim of EqualConstraint.get_IgnoreCase()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.MillisecondsGet">
            <summary>Sets the shim of EqualConstraint.get_Milliseconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.MinutesGet">
            <summary>Sets the shim of EqualConstraint.get_Minutes()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.NoClipGet">
            <summary>Sets the shim of EqualConstraint.get_NoClip()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.PercentGet">
            <summary>Sets the shim of EqualConstraint.get_Percent()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.SecondsGet">
            <summary>Sets the shim of EqualConstraint.get_Seconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.TicksGet">
            <summary>Sets the shim of EqualConstraint.get_Ticks()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.ToleranceGet">
            <summary>Sets the shim of EqualConstraint.get_Tolerance()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.UlpsGet">
            <summary>Sets the shim of EqualConstraint.get_Ulps()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.UsingIComparer">
            <summary>Sets the shim of EqualConstraint.Using(IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.UsingIEqualityComparer">
            <summary>Sets the shim of EqualConstraint.Using(IEqualityComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.WithSameOffsetGet">
            <summary>Sets the shim of EqualConstraint.get_WithSameOffset()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraint.AllInstances.WithinObject">
            <summary>Sets the shim of EqualConstraint.Within(Object amount)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult">
            <summary>Shim type of NUnit.Framework.Constraints.EqualConstraintResult</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.#ctor(NUnit.Framework.Constraints.EqualConstraintResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.ConstructorEqualConstraintObjectBoolean">
            <summary>Sets the shim of EqualConstraintResult.EqualConstraintResult(EqualConstraint constraint, Object actual, Boolean hasSucceeded)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.DisplayCollectionDifferencesMessageWriterICollectionICollectionInt32">
            <summary>Sets the shim of EqualConstraintResult.DisplayCollectionDifferences(MessageWriter writer, ICollection expected, ICollection actual, Int32 depth)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.DisplayDifferencesMessageWriterObjectObjectInt32">
            <summary>Sets the shim of EqualConstraintResult.DisplayDifferences(MessageWriter writer, Object expected, Object actual, Int32 depth)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.DisplayEnumerableDifferencesMessageWriterIEnumerableIEnumerableInt32">
            <summary>Sets the shim of EqualConstraintResult.DisplayEnumerableDifferences(MessageWriter writer, IEnumerable expected, IEnumerable actual, Int32 depth)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.DisplayFailurePointMessageWriterIEnumerableIEnumerableNUnitEqualityComparerFailurePointInt32">
            <summary>Sets the shim of EqualConstraintResult.DisplayFailurePoint(MessageWriter writer, IEnumerable expected, IEnumerable actual, FailurePoint failurePoint, Int32 indent)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.DisplayStreamDifferencesMessageWriterStreamStreamInt32">
            <summary>Sets the shim of EqualConstraintResult.DisplayStreamDifferences(MessageWriter writer, Stream expected, Stream actual, Int32 depth)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.DisplayStringDifferencesMessageWriterStringString">
            <summary>Sets the shim of EqualConstraintResult.DisplayStringDifferences(MessageWriter writer, String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.DisplayTypesAndSizesMessageWriterIEnumerableIEnumerableInt32">
            <summary>Sets the shim of EqualConstraintResult.DisplayTypesAndSizes(MessageWriter writer, IEnumerable expected, IEnumerable actual, Int32 indent)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.GetValueFromCollectionICollectionInt32">
            <summary>Sets the shim of EqualConstraintResult.GetValueFromCollection(ICollection collection, Int32 index)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.StaticConstructor">
            <summary>Sets the shim of EqualConstraintResult.EqualConstraintResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.WriteMessageToMessageWriter">
            <summary>Sets the shim of EqualConstraintResult.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.AllInstances.DisplayCollectionDifferencesMessageWriterICollectionICollectionInt32">
            <summary>Sets the shim of EqualConstraintResult.DisplayCollectionDifferences(MessageWriter writer, ICollection expected, ICollection actual, Int32 depth)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.AllInstances.DisplayDifferencesMessageWriterObjectObjectInt32">
            <summary>Sets the shim of EqualConstraintResult.DisplayDifferences(MessageWriter writer, Object expected, Object actual, Int32 depth)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.AllInstances.DisplayEnumerableDifferencesMessageWriterIEnumerableIEnumerableInt32">
            <summary>Sets the shim of EqualConstraintResult.DisplayEnumerableDifferences(MessageWriter writer, IEnumerable expected, IEnumerable actual, Int32 depth)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.AllInstances.DisplayFailurePointMessageWriterIEnumerableIEnumerableNUnitEqualityComparerFailurePointInt32">
            <summary>Sets the shim of EqualConstraintResult.DisplayFailurePoint(MessageWriter writer, IEnumerable expected, IEnumerable actual, FailurePoint failurePoint, Int32 indent)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.AllInstances.DisplayStreamDifferencesMessageWriterStreamStreamInt32">
            <summary>Sets the shim of EqualConstraintResult.DisplayStreamDifferences(MessageWriter writer, Stream expected, Stream actual, Int32 depth)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.AllInstances.DisplayStringDifferencesMessageWriterStringString">
            <summary>Sets the shim of EqualConstraintResult.DisplayStringDifferences(MessageWriter writer, String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.AllInstances.DisplayTypesAndSizesMessageWriterIEnumerableIEnumerableInt32">
            <summary>Sets the shim of EqualConstraintResult.DisplayTypesAndSizes(MessageWriter writer, IEnumerable expected, IEnumerable actual, Int32 indent)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualConstraintResult.AllInstances.WriteMessageToMessageWriter">
            <summary>Sets the shim of EqualConstraintResult.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter">
            <summary>Shim type of NUnit.Framework.Constraints.EqualityAdapter</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.#ctor(NUnit.Framework.Constraints.EqualityAdapter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.ForOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Comparison{``0},NUnit.Framework.Constraints.EqualityAdapter})">
            <summary>Sets the shim of EqualityAdapter.For(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.ForOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.EqualityAdapter})">
            <summary>Sets the shim of EqualityAdapter.For(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.ForOf1IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEqualityComparer{``0},NUnit.Framework.Constraints.EqualityAdapter})">
            <summary>Sets the shim of EqualityAdapter.For(IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.ForOf2FuncOfM0M1Boolean``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Func{``0,``1,System.Boolean},NUnit.Framework.Constraints.EqualityAdapter})">
            <summary>Sets the shim of EqualityAdapter.For(Func`3&lt;!!0,!!1,Boolean&gt; comparison)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.CanCompareObjectObject">
            <summary>Sets the shim of EqualityAdapter.CanCompare(Object x, Object y)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.Constructor">
            <summary>Sets the shim of EqualityAdapter.EqualityAdapter()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.ForIComparer">
            <summary>Sets the shim of EqualityAdapter.For(IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.ForIEqualityComparer">
            <summary>Sets the shim of EqualityAdapter.For(IEqualityComparer comparer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimEqualityAdapter.AllInstances.CanCompareObjectObject">
            <summary>Sets the shim of EqualityAdapter.CanCompare(Object x, Object y)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.ExactCountConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.#ctor(NUnit.Framework.Constraints.ExactCountConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of ExactCountConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.ConstructorInt32">
            <summary>Sets the shim of ExactCountConstraint.ExactCountConstraint(Int32 expectedCount)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.ConstructorInt32IConstraint">
            <summary>Sets the shim of ExactCountConstraint.ExactCountConstraint(Int32 expectedCount, IConstraint itemConstraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.DescriptionGet">
            <summary>Sets the shim of ExactCountConstraint.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ExactCountConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of ExactCountConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactCountConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of ExactCountConstraint.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimExactCountOperator">
            <summary>Shim type of NUnit.Framework.Constraints.ExactCountOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactCountOperator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactCountOperator.#ctor(NUnit.Framework.Constraints.ExactCountOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactCountOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactCountOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactCountOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactCountOperator.ConstructorInt32">
            <summary>Sets the shim of ExactCountOperator.ExactCountOperator(Int32 expectedCount)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactCountOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the shim of ExactCountOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimExactCountOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactCountOperator.AllInstances.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the shim of ExactCountOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.ExactTypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.#ctor(NUnit.Framework.Constraints.ExactTypeConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.ConstructorType">
            <summary>Sets the shim of ExactTypeConstraint.ExactTypeConstraint(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.DisplayNameGet">
            <summary>Sets the shim of ExactTypeConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.MatchesObject">
            <summary>Sets the shim of ExactTypeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.AllInstances.DisplayNameGet">
            <summary>Sets the shim of ExactTypeConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExactTypeConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of ExactTypeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.ExceptionTypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint.#ctor(NUnit.Framework.Constraints.ExceptionTypeConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of ExceptionTypeConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint.ConstructorType">
            <summary>Sets the shim of ExceptionTypeConstraint.ExceptionTypeConstraint(Type type)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimExceptionTypeConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ExceptionTypeConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of ExceptionTypeConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimFalseConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.FalseConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFalseConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFalseConstraint.#ctor(NUnit.Framework.Constraints.FalseConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFalseConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of FalseConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFalseConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFalseConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFalseConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFalseConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFalseConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFalseConstraint.Constructor">
            <summary>Sets the shim of FalseConstraint.FalseConstraint()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimFalseConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFalseConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.FalseConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of FalseConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.FileOrDirectoryExistsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint.#ctor(NUnit.Framework.Constraints.FileOrDirectoryExistsConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of FileOrDirectoryExistsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint.CheckStringOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of FileOrDirectoryExistsConstraint.CheckString(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint.Constructor">
            <summary>Sets the shim of FileOrDirectoryExistsConstraint.FileOrDirectoryExistsConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint.ConstructorBoolean">
            <summary>Sets the shim of FileOrDirectoryExistsConstraint.FileOrDirectoryExistsConstraint(Boolean ignoreDirectories)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint.DescriptionGet">
            <summary>Sets the shim of FileOrDirectoryExistsConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint.ErrorSubstringGet">
            <summary>Sets the shim of FileOrDirectoryExistsConstraint.get_ErrorSubstring()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint.IgnoreDirectoriesGet">
            <summary>Sets the shim of FileOrDirectoryExistsConstraint.get_IgnoreDirectories()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint.IgnoreFilesGet">
            <summary>Sets the shim of FileOrDirectoryExistsConstraint.get_IgnoreFiles()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.FileOrDirectoryExistsConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of FileOrDirectoryExistsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint.AllInstances.CheckStringOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.FileOrDirectoryExistsConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of FileOrDirectoryExistsConstraint.CheckString(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of FileOrDirectoryExistsConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint.AllInstances.ErrorSubstringGet">
            <summary>Sets the shim of FileOrDirectoryExistsConstraint.get_ErrorSubstring()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint.AllInstances.IgnoreDirectoriesGet">
            <summary>Sets the shim of FileOrDirectoryExistsConstraint.get_IgnoreDirectories()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFileOrDirectoryExistsConstraint.AllInstances.IgnoreFilesGet">
            <summary>Sets the shim of FileOrDirectoryExistsConstraint.get_IgnoreFiles()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics">
            <summary>Shim type of NUnit.Framework.Constraints.FloatingPointNumerics</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.#ctor(NUnit.Framework.Constraints.FloatingPointNumerics)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.AreAlmostEqualUlpsDoubleDoubleInt64">
            <summary>Sets the shim of FloatingPointNumerics.AreAlmostEqualUlps(Double left, Double right, Int64 maxUlps)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.AreAlmostEqualUlpsSingleSingleInt32">
            <summary>Sets the shim of FloatingPointNumerics.AreAlmostEqualUlps(Single left, Single right, Int32 maxUlps)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.Constructor">
            <summary>Sets the shim of FloatingPointNumerics.FloatingPointNumerics()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.ReinterpretAsDoubleInt64">
            <summary>Sets the shim of FloatingPointNumerics.ReinterpretAsDouble(Int64 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.ReinterpretAsFloatInt32">
            <summary>Sets the shim of FloatingPointNumerics.ReinterpretAsFloat(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.ReinterpretAsIntSingle">
            <summary>Sets the shim of FloatingPointNumerics.ReinterpretAsInt(Single value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.ReinterpretAsLongDouble">
            <summary>Sets the shim of FloatingPointNumerics.ReinterpretAsLong(Double value)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimFloatingPointNumerics.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.GreaterThanConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.#ctor(NUnit.Framework.Constraints.GreaterThanConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.ConstructorObject">
            <summary>Sets the shim of GreaterThanConstraint.GreaterThanConstraint(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.PerformComparisonComparisonAdapterObjectObjectTolerance">
            <summary>Sets the shim of GreaterThanConstraint.PerformComparison(ComparisonAdapter comparer, Object actual, Object expected, Tolerance tolerance)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimGreaterThanConstraint.AllInstances.PerformComparisonComparisonAdapterObjectObjectTolerance">
            <summary>Sets the shim of GreaterThanConstraint.PerformComparison(ComparisonAdapter comparer, Object actual, Object expected, Tolerance tolerance)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.GreaterThanOrEqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.#ctor(NUnit.Framework.Constraints.GreaterThanOrEqualConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.ConstructorObject">
            <summary>Sets the shim of GreaterThanOrEqualConstraint.GreaterThanOrEqualConstraint(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.PerformComparisonComparisonAdapterObjectObjectTolerance">
            <summary>Sets the shim of GreaterThanOrEqualConstraint.PerformComparison(ComparisonAdapter comparer, Object actual, Object expected, Tolerance tolerance)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimGreaterThanOrEqualConstraint.AllInstances.PerformComparisonComparisonAdapterObjectObjectTolerance">
            <summary>Sets the shim of GreaterThanOrEqualConstraint.PerformComparison(ComparisonAdapter comparer, Object actual, Object expected, Tolerance tolerance)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.InstanceOfTypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.#ctor(NUnit.Framework.Constraints.InstanceOfTypeConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.ConstructorType">
            <summary>Sets the shim of InstanceOfTypeConstraint.InstanceOfTypeConstraint(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.DisplayNameGet">
            <summary>Sets the shim of InstanceOfTypeConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.MatchesObject">
            <summary>Sets the shim of InstanceOfTypeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.AllInstances.DisplayNameGet">
            <summary>Sets the shim of InstanceOfTypeConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInstanceOfTypeConstraint.AllInstances.MatchesObject">
            <summary>Sets the shim of InstanceOfTypeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimInterval">
            <summary>Shim type of NUnit.Framework.Constraints.Interval</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimInterval.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimInterval.#ctor(NUnit.Framework.Constraints.Interval)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimInterval.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimInterval.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInterval.AsTimeSpanGet">
            <summary>Sets the shim of Interval.get_AsTimeSpan()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInterval.AsTimeSpanSetTimeSpan">
            <summary>Sets the shim of Interval.set_AsTimeSpan(TimeSpan value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInterval.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInterval.ConstructorInt32">
            <summary>Sets the shim of Interval.Interval(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInterval.InMillisecondsGet">
            <summary>Sets the shim of Interval.get_InMilliseconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInterval.InMinutesGet">
            <summary>Sets the shim of Interval.get_InMinutes()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInterval.InSecondsGet">
            <summary>Sets the shim of Interval.get_InSeconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInterval.IsNotZeroGet">
            <summary>Sets the shim of Interval.get_IsNotZero()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInterval.ToString">
            <summary>Sets the shim of Interval.ToString()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimInterval.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInterval.AllInstances.AsTimeSpanGet">
            <summary>Sets the shim of Interval.get_AsTimeSpan()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInterval.AllInstances.AsTimeSpanSetTimeSpan">
            <summary>Sets the shim of Interval.set_AsTimeSpan(TimeSpan value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInterval.AllInstances.InMillisecondsGet">
            <summary>Sets the shim of Interval.get_InMilliseconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInterval.AllInstances.InMinutesGet">
            <summary>Sets the shim of Interval.get_InMinutes()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInterval.AllInstances.InSecondsGet">
            <summary>Sets the shim of Interval.get_InSeconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInterval.AllInstances.IsNotZeroGet">
            <summary>Sets the shim of Interval.get_IsNotZero()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimInterval.AllInstances.ToString01">
            <summary>Sets the shim of Interval.ToString()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimItemsConstraintExpression">
            <summary>Shim type of NUnit.Framework.Constraints.ItemsConstraintExpression</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimItemsConstraintExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimItemsConstraintExpression.#ctor(NUnit.Framework.Constraints.ItemsConstraintExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimItemsConstraintExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimItemsConstraintExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimItemsConstraintExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimItemsConstraintExpression.Constructor">
            <summary>Sets the shim of ItemsConstraintExpression.ItemsConstraintExpression()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimItemsConstraintExpression.ConstructorConstraintBuilder">
            <summary>Sets the shim of ItemsConstraintExpression.ItemsConstraintExpression(ConstraintBuilder builder)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimItemsConstraintExpression.ItemsGet">
            <summary>Sets the shim of ItemsConstraintExpression.get_Items()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimItemsConstraintExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimItemsConstraintExpression.AllInstances.ItemsGet">
            <summary>Sets the shim of ItemsConstraintExpression.get_Items()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.LessThanConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.#ctor(NUnit.Framework.Constraints.LessThanConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.ConstructorObject">
            <summary>Sets the shim of LessThanConstraint.LessThanConstraint(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.PerformComparisonComparisonAdapterObjectObjectTolerance">
            <summary>Sets the shim of LessThanConstraint.PerformComparison(ComparisonAdapter comparer, Object actual, Object expected, Tolerance tolerance)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimLessThanConstraint.AllInstances.PerformComparisonComparisonAdapterObjectObjectTolerance">
            <summary>Sets the shim of LessThanConstraint.PerformComparison(ComparisonAdapter comparer, Object actual, Object expected, Tolerance tolerance)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.LessThanOrEqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.#ctor(NUnit.Framework.Constraints.LessThanOrEqualConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.ConstructorObject">
            <summary>Sets the shim of LessThanOrEqualConstraint.LessThanOrEqualConstraint(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.PerformComparisonComparisonAdapterObjectObjectTolerance">
            <summary>Sets the shim of LessThanOrEqualConstraint.PerformComparison(ComparisonAdapter comparer, Object actual, Object expected, Tolerance tolerance)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimLessThanOrEqualConstraint.AllInstances.PerformComparisonComparisonAdapterObjectObjectTolerance">
            <summary>Sets the shim of LessThanOrEqualConstraint.PerformComparison(ComparisonAdapter comparer, Object actual, Object expected, Tolerance tolerance)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimMessageWriter">
            <summary>Shim type of NUnit.Framework.Constraints.MessageWriter</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimMessageWriter.#ctor(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimMessageWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimMessageWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimMessageWriter.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimMessageWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimMessageWriter.Constructor">
            <summary>Sets the shim of MessageWriter.MessageWriter()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimMessageWriter.WriteMessageLineStringObjectArray">
            <summary>Sets the shim of MessageWriter.WriteMessageLine(String message, Object[] args)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimMessageWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimMessageWriter.AllInstances.WriteMessageLineStringObjectArray">
            <summary>Sets the shim of MessageWriter.WriteMessageLine(String message, Object[] args)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer">
            <summary>Shim type of NUnit.Framework.Constraints.NUnitComparer</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer.#ctor(NUnit.Framework.Constraints.NUnitComparer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer.Bind(System.Collections.IComparer)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer.CompareObjectObject">
            <summary>Sets the shim of NUnitComparer.Compare(Object x, Object y)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer.Constructor">
            <summary>Sets the shim of NUnitComparer.NUnitComparer()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer.DefaultGet">
            <summary>Sets the shim of NUnitComparer.get_Default()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitComparer.AllInstances.CompareObjectObject">
            <summary>Sets the shim of NUnitComparer.Compare(Object x, Object y)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer">
            <summary>Shim type of NUnit.Framework.Constraints.NUnitEqualityComparer</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.#ctor(NUnit.Framework.Constraints.NUnitEqualityComparer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AreEqualObjectObjectToleranceRef">
            <summary>Sets the shim of NUnitEqualityComparer.AreEqual(Object x, Object y, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.ArraysEqualArrayArrayToleranceRef">
            <summary>Sets the shim of NUnitEqualityComparer.ArraysEqual(Array x, Array y, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.CharsEqualCharChar">
            <summary>Sets the shim of NUnitEqualityComparer.CharsEqual(Char x, Char y)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.CompareAsCollectionGet">
            <summary>Sets the shim of NUnitEqualityComparer.get_CompareAsCollection()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.CompareAsCollectionSetBoolean">
            <summary>Sets the shim of NUnitEqualityComparer.set_CompareAsCollection(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.Constructor">
            <summary>Sets the shim of NUnitEqualityComparer.NUnitEqualityComparer()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.DefaultGet">
            <summary>Sets the shim of NUnitEqualityComparer.get_Default()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.DictionariesEqualIDictionaryIDictionaryToleranceRef">
            <summary>Sets the shim of NUnitEqualityComparer.DictionariesEqual(IDictionary x, IDictionary y, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.DictionaryEntriesEqualDictionaryEntryDictionaryEntryToleranceRef">
            <summary>Sets the shim of NUnitEqualityComparer.DictionaryEntriesEqual(DictionaryEntry x, DictionaryEntry y, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.DirectoriesEqualDirectoryInfoDirectoryInfo">
            <summary>Sets the shim of NUnitEqualityComparer.DirectoriesEqual(DirectoryInfo x, DirectoryInfo y)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.EnumerablesEqualIEnumerableIEnumerableToleranceRef">
            <summary>Sets the shim of NUnitEqualityComparer.EnumerablesEqual(IEnumerable x, IEnumerable y, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.ExternalComparersGet">
            <summary>Sets the shim of NUnitEqualityComparer.get_ExternalComparers()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.FailurePointsGet">
            <summary>Sets the shim of NUnitEqualityComparer.get_FailurePoints()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.FirstImplementsIEquatableOfSecondTypeType">
            <summary>Sets the shim of NUnitEqualityComparer.FirstImplementsIEquatableOfSecond(Type first, Type second)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.GetEquatableGenericArgumentsType">
            <summary>Sets the shim of NUnitEqualityComparer.GetEquatableGenericArguments(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.GetExternalComparerObjectObject">
            <summary>Sets the shim of NUnitEqualityComparer.GetExternalComparer(Object x, Object y)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.IgnoreCaseGet">
            <summary>Sets the shim of NUnitEqualityComparer.get_IgnoreCase()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.IgnoreCaseSetBoolean">
            <summary>Sets the shim of NUnitEqualityComparer.set_IgnoreCase(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.InvokeFirstIEquatableEqualsSecondObjectObjectMethodInfo">
            <summary>Sets the shim of NUnitEqualityComparer.InvokeFirstIEquatableEqualsSecond(Object first, Object second, MethodInfo equals)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.StaticConstructor">
            <summary>Sets the shim of NUnitEqualityComparer.NUnitEqualityComparer()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.StreamsEqualStreamStream">
            <summary>Sets the shim of NUnitEqualityComparer.StreamsEqual(Stream x, Stream y)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.StringsEqualStringString">
            <summary>Sets the shim of NUnitEqualityComparer.StringsEqual(String x, String y)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.WithSameOffsetGet">
            <summary>Sets the shim of NUnitEqualityComparer.get_WithSameOffset()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.WithSameOffsetSetBoolean">
            <summary>Sets the shim of NUnitEqualityComparer.set_WithSameOffset(Boolean value)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.AreEqualObjectObjectToleranceRef">
            <summary>Sets the shim of NUnitEqualityComparer.AreEqual(Object x, Object y, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.ArraysEqualArrayArrayToleranceRef">
            <summary>Sets the shim of NUnitEqualityComparer.ArraysEqual(Array x, Array y, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.CharsEqualCharChar">
            <summary>Sets the shim of NUnitEqualityComparer.CharsEqual(Char x, Char y)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.CompareAsCollectionGet">
            <summary>Sets the shim of NUnitEqualityComparer.get_CompareAsCollection()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.CompareAsCollectionSetBoolean">
            <summary>Sets the shim of NUnitEqualityComparer.set_CompareAsCollection(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.DictionariesEqualIDictionaryIDictionaryToleranceRef">
            <summary>Sets the shim of NUnitEqualityComparer.DictionariesEqual(IDictionary x, IDictionary y, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.DictionaryEntriesEqualDictionaryEntryDictionaryEntryToleranceRef">
            <summary>Sets the shim of NUnitEqualityComparer.DictionaryEntriesEqual(DictionaryEntry x, DictionaryEntry y, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.EnumerablesEqualIEnumerableIEnumerableToleranceRef">
            <summary>Sets the shim of NUnitEqualityComparer.EnumerablesEqual(IEnumerable x, IEnumerable y, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.ExternalComparersGet">
            <summary>Sets the shim of NUnitEqualityComparer.get_ExternalComparers()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.FailurePointsGet">
            <summary>Sets the shim of NUnitEqualityComparer.get_FailurePoints()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.GetExternalComparerObjectObject">
            <summary>Sets the shim of NUnitEqualityComparer.GetExternalComparer(Object x, Object y)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.IgnoreCaseGet">
            <summary>Sets the shim of NUnitEqualityComparer.get_IgnoreCase()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.IgnoreCaseSetBoolean">
            <summary>Sets the shim of NUnitEqualityComparer.set_IgnoreCase(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.StreamsEqualStreamStream">
            <summary>Sets the shim of NUnitEqualityComparer.StreamsEqual(Stream x, Stream y)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.StringsEqualStringString">
            <summary>Sets the shim of NUnitEqualityComparer.StringsEqual(String x, String y)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.WithSameOffsetGet">
            <summary>Sets the shim of NUnitEqualityComparer.get_WithSameOffset()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.AllInstances.WithSameOffsetSetBoolean">
            <summary>Sets the shim of NUnitEqualityComparer.set_WithSameOffset(Boolean value)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.ShimFailurePoint">
            <summary>Shim type of NUnit.Framework.Constraints.NUnitEqualityComparer+FailurePoint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.ShimFailurePoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.ShimFailurePoint.#ctor(NUnit.Framework.Constraints.NUnitEqualityComparer.FailurePoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.ShimFailurePoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.ShimFailurePoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.ShimFailurePoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.ShimFailurePoint.Constructor">
            <summary>Sets the shim of FailurePoint.FailurePoint()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNUnitEqualityComparer.ShimFailurePoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.NaNConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.#ctor(NUnit.Framework.Constraints.NaNConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of NaNConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.Constructor">
            <summary>Sets the shim of NaNConstraint.NaNConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.DescriptionGet">
            <summary>Sets the shim of NaNConstraint.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.NaNConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of NaNConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNaNConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of NaNConstraint.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.NoItemConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.#ctor(NUnit.Framework.Constraints.NoItemConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of NoItemConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.ConstructorIConstraint">
            <summary>Sets the shim of NoItemConstraint.NoItemConstraint(IConstraint itemConstraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.DisplayNameGet">
            <summary>Sets the shim of NoItemConstraint.get_DisplayName()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.NoItemConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of NoItemConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNoItemConstraint.AllInstances.DisplayNameGet">
            <summary>Sets the shim of NoItemConstraint.get_DisplayName()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNoneOperator">
            <summary>Shim type of NUnit.Framework.Constraints.NoneOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNoneOperator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNoneOperator.#ctor(NUnit.Framework.Constraints.NoneOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNoneOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNoneOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNoneOperator.ApplyPrefixIConstraint">
            <summary>Sets the shim of NoneOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNoneOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNoneOperator.Constructor">
            <summary>Sets the shim of NoneOperator.NoneOperator()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNoneOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNoneOperator.AllInstances.ApplyPrefixIConstraint">
            <summary>Sets the shim of NoneOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNotConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.NotConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.#ctor(NUnit.Framework.Constraints.NotConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of NotConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.ConstructorIConstraint">
            <summary>Sets the shim of NotConstraint.NotConstraint(IConstraint baseConstraint)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNotConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.NotConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of NotConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNotOperator">
            <summary>Shim type of NUnit.Framework.Constraints.NotOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNotOperator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNotOperator.#ctor(NUnit.Framework.Constraints.NotOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNotOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNotOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNotOperator.ApplyPrefixIConstraint">
            <summary>Sets the shim of NotOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNotOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNotOperator.Constructor">
            <summary>Sets the shim of NotOperator.NotOperator()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNotOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNotOperator.AllInstances.ApplyPrefixIConstraint">
            <summary>Sets the shim of NotOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNullConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.NullConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNullConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNullConstraint.#ctor(NUnit.Framework.Constraints.NullConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNullConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of NullConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNullConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNullConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNullConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNullConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNullConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNullConstraint.Constructor">
            <summary>Sets the shim of NullConstraint.NullConstraint()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNullConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNullConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.NullConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of NullConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimNumerics">
            <summary>Shim type of NUnit.Framework.Constraints.Numerics</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNumerics.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNumerics.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimNumerics.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.AreEqualDecimalDecimalTolerance">
            <summary>Sets the shim of Numerics.AreEqual(Decimal expected, Decimal actual, Tolerance tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.AreEqualDoubleDoubleToleranceRef">
            <summary>Sets the shim of Numerics.AreEqual(Double expected, Double actual, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.AreEqualInt32Int32Tolerance">
            <summary>Sets the shim of Numerics.AreEqual(Int32 expected, Int32 actual, Tolerance tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.AreEqualInt64Int64Tolerance">
            <summary>Sets the shim of Numerics.AreEqual(Int64 expected, Int64 actual, Tolerance tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.AreEqualObjectObjectToleranceRef">
            <summary>Sets the shim of Numerics.AreEqual(Object expected, Object actual, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.AreEqualSingleSingleToleranceRef">
            <summary>Sets the shim of Numerics.AreEqual(Single expected, Single actual, Tolerance&amp; tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.AreEqualUInt32UInt32Tolerance">
            <summary>Sets the shim of Numerics.AreEqual(UInt32 expected, UInt32 actual, Tolerance tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.AreEqualUInt64UInt64Tolerance">
            <summary>Sets the shim of Numerics.AreEqual(UInt64 expected, UInt64 actual, Tolerance tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.CompareObjectObject">
            <summary>Sets the shim of Numerics.Compare(Object expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.IsFixedPointNumericObject">
            <summary>Sets the shim of Numerics.IsFixedPointNumeric(Object obj)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.IsFloatingPointNumericObject">
            <summary>Sets the shim of Numerics.IsFloatingPointNumeric(Object obj)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimNumerics.IsNumericTypeObject">
            <summary>Sets the shim of Numerics.IsNumericType(Object obj)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimOrConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.OrConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.#ctor(NUnit.Framework.Constraints.OrConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of OrConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.ConstructorIConstraintIConstraint">
            <summary>Sets the shim of OrConstraint.OrConstraint(IConstraint left, IConstraint right)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.DescriptionGet">
            <summary>Sets the shim of OrConstraint.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.OrConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of OrConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimOrConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of OrConstraint.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimOrOperator">
            <summary>Shim type of NUnit.Framework.Constraints.OrOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimOrOperator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimOrOperator.#ctor(NUnit.Framework.Constraints.OrOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimOrOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimOrOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimOrOperator.ApplyOperatorIConstraintIConstraint">
            <summary>Sets the shim of OrOperator.ApplyOperator(IConstraint left, IConstraint right)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimOrOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimOrOperator.Constructor">
            <summary>Sets the shim of OrOperator.OrOperator()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimOrOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimOrOperator.AllInstances.ApplyOperatorIConstraintIConstraint">
            <summary>Sets the shim of OrOperator.ApplyOperator(IConstraint left, IConstraint right)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPathConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.PathConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.#ctor(NUnit.Framework.Constraints.PathConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.CanonicalizeString">
            <summary>Sets the shim of PathConstraint.Canonicalize(String path)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.ConstructorString">
            <summary>Sets the shim of PathConstraint.PathConstraint(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.GetStringRepresentation">
            <summary>Sets the shim of PathConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.IsSubPathStringString">
            <summary>Sets the shim of PathConstraint.IsSubPath(String path1, String path2)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.RespectCaseGet">
            <summary>Sets the shim of PathConstraint.get_RespectCase()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.StaticConstructor">
            <summary>Sets the shim of PathConstraint.PathConstraint()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.AllInstances.CanonicalizeString">
            <summary>Sets the shim of PathConstraint.Canonicalize(String path)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.AllInstances.GetStringRepresentation">
            <summary>Sets the shim of PathConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.AllInstances.IsSubPathStringString">
            <summary>Sets the shim of PathConstraint.IsSubPath(String path1, String path2)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPathConstraint.AllInstances.RespectCaseGet">
            <summary>Sets the shim of PathConstraint.get_RespectCase()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1">
            <summary>Shim type of NUnit.Framework.Constraints.PredicateConstraint`1</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.#ctor(NUnit.Framework.Constraints.PredicateConstraint{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of PredicateConstraint`1.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.ConstructorPredicateOfT0">
            <summary>Sets the shim of PredicateConstraint`1.PredicateConstraint`1(Predicate`1&lt;!0&gt; predicate)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.DescriptionGet">
            <summary>Sets the shim of PredicateConstraint`1.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.PredicateConstraint{`0},``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of PredicateConstraint`1.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPredicateConstraint`1.AllInstances.DescriptionGet">
            <summary>Sets the shim of PredicateConstraint`1.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.PrefixConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.#ctor(NUnit.Framework.Constraints.PrefixConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.BaseConstraintGet">
            <summary>Sets the shim of PrefixConstraint.get_BaseConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.BaseConstraintSetIConstraint">
            <summary>Sets the shim of PrefixConstraint.set_BaseConstraint(IConstraint value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.ConstructorIResolveConstraint">
            <summary>Sets the shim of PrefixConstraint.PrefixConstraint(IResolveConstraint baseConstraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.DescriptionGet">
            <summary>Sets the shim of PrefixConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.DescriptionPrefixGet">
            <summary>Sets the shim of PrefixConstraint.get_DescriptionPrefix()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.DescriptionPrefixSetString">
            <summary>Sets the shim of PrefixConstraint.set_DescriptionPrefix(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.FormatDescriptionStringIConstraint">
            <summary>Sets the shim of PrefixConstraint.FormatDescription(String descriptionPrefix, IConstraint baseConstraint)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.AllInstances.BaseConstraintGet">
            <summary>Sets the shim of PrefixConstraint.get_BaseConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.AllInstances.BaseConstraintSetIConstraint">
            <summary>Sets the shim of PrefixConstraint.set_BaseConstraint(IConstraint value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of PrefixConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.AllInstances.DescriptionPrefixGet">
            <summary>Sets the shim of PrefixConstraint.get_DescriptionPrefix()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixConstraint.AllInstances.DescriptionPrefixSetString">
            <summary>Sets the shim of PrefixConstraint.set_DescriptionPrefix(String value)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPrefixOperator">
            <summary>Shim type of NUnit.Framework.Constraints.PrefixOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPrefixOperator.#ctor(NUnit.Framework.Constraints.PrefixOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPrefixOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPrefixOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixOperator.Constructor">
            <summary>Sets the shim of PrefixOperator.PrefixOperator()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the shim of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPrefixOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPrefixOperator.AllInstances.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the shim of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPropOperator">
            <summary>Shim type of NUnit.Framework.Constraints.PropOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropOperator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropOperator.#ctor(NUnit.Framework.Constraints.PropOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropOperator.ConstructorString">
            <summary>Sets the shim of PropOperator.PropOperator(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropOperator.NameGet">
            <summary>Sets the shim of PropOperator.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the shim of PropOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPropOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropOperator.AllInstances.NameGet">
            <summary>Sets the shim of PropOperator.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropOperator.AllInstances.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the shim of PropOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.PropertyConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.#ctor(NUnit.Framework.Constraints.PropertyConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of PropertyConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.ConstructorStringIConstraint">
            <summary>Sets the shim of PropertyConstraint.PropertyConstraint(String name, IConstraint baseConstraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.GetStringRepresentation">
            <summary>Sets the shim of PropertyConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.PropertyConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of PropertyConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyConstraint.AllInstances.GetStringRepresentation">
            <summary>Sets the shim of PropertyConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.PropertyExistsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.#ctor(NUnit.Framework.Constraints.PropertyExistsConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of PropertyExistsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.ConstructorString">
            <summary>Sets the shim of PropertyExistsConstraint.PropertyExistsConstraint(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.DescriptionGet">
            <summary>Sets the shim of PropertyExistsConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.GetStringRepresentation">
            <summary>Sets the shim of PropertyExistsConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.PropertyExistsConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of PropertyExistsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of PropertyExistsConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimPropertyExistsConstraint.AllInstances.GetStringRepresentation">
            <summary>Sets the shim of PropertyExistsConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.RangeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint.#ctor(NUnit.Framework.Constraints.RangeConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of RangeConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint.UsingOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Comparison{``0},NUnit.Framework.Constraints.RangeConstraint})">
            <summary>Sets the shim of RangeConstraint.Using(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint.UsingOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.RangeConstraint})">
            <summary>Sets the shim of RangeConstraint.Using(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint.ConstructorIComparableIComparable">
            <summary>Sets the shim of RangeConstraint.RangeConstraint(IComparable from, IComparable to)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint.DescriptionGet">
            <summary>Sets the shim of RangeConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint.UsingIComparer">
            <summary>Sets the shim of RangeConstraint.Using(IComparer comparer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.RangeConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of RangeConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint.AllInstances.UsingOf1ComparisonOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.RangeConstraint,System.Comparison{``0},NUnit.Framework.Constraints.RangeConstraint})">
            <summary>Sets the shim of RangeConstraint.Using(Comparison`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint.AllInstances.UsingOf1IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.RangeConstraint,System.Collections.Generic.IComparer{``0},NUnit.Framework.Constraints.RangeConstraint})">
            <summary>Sets the shim of RangeConstraint.Using(IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of RangeConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimRangeConstraint.AllInstances.UsingIComparer">
            <summary>Sets the shim of RangeConstraint.Using(IComparer comparer)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.RegexConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.#ctor(NUnit.Framework.Constraints.RegexConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.ConstructorString">
            <summary>Sets the shim of RegexConstraint.RegexConstraint(String pattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.MatchesString">
            <summary>Sets the shim of RegexConstraint.Matches(String actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimRegexConstraint.AllInstances.MatchesString">
            <summary>Sets the shim of RegexConstraint.Matches(String actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression">
            <summary>Shim type of NUnit.Framework.Constraints.ResolvableConstraintExpression</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.#ctor(NUnit.Framework.Constraints.ResolvableConstraintExpression)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.AndGet">
            <summary>Sets the shim of ResolvableConstraintExpression.get_And()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.Constructor">
            <summary>Sets the shim of ResolvableConstraintExpression.ResolvableConstraintExpression()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.ConstructorConstraintBuilder">
            <summary>Sets the shim of ResolvableConstraintExpression.ResolvableConstraintExpression(ConstraintBuilder builder)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.NUnitFrameworkConstraintsIResolveConstraintResolve">
            <summary>Sets the shim of ResolvableConstraintExpression.NUnit.Framework.Constraints.IResolveConstraint.Resolve()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.OrGet">
            <summary>Sets the shim of ResolvableConstraintExpression.get_Or()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.AllInstances.AndGet">
            <summary>Sets the shim of ResolvableConstraintExpression.get_And()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.AllInstances.NUnitFrameworkConstraintsIResolveConstraintResolve">
            <summary>Sets the shim of ResolvableConstraintExpression.NUnit.Framework.Constraints.IResolveConstraint.Resolve()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimResolvableConstraintExpression.AllInstances.OrGet">
            <summary>Sets the shim of ResolvableConstraintExpression.get_Or()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.ReusableConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.#ctor(NUnit.Framework.Constraints.ReusableConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.ConstructorIResolveConstraint">
            <summary>Sets the shim of ReusableConstraint.ReusableConstraint(IResolveConstraint c)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.ImplicitOpConstraintReusableConstraint">
            <summary>Sets the shim of ReusableConstraint.op_Implicit(Constraint c)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.Resolve">
            <summary>Sets the shim of ReusableConstraint.Resolve()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.ToString">
            <summary>Sets the shim of ReusableConstraint.ToString()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.AllInstances.Resolve">
            <summary>Sets the shim of ReusableConstraint.Resolve()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimReusableConstraint.AllInstances.ToString01">
            <summary>Sets the shim of ReusableConstraint.ToString()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.SameAsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.#ctor(NUnit.Framework.Constraints.SameAsConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of SameAsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.ConstructorObject">
            <summary>Sets the shim of SameAsConstraint.SameAsConstraint(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.DescriptionGet">
            <summary>Sets the shim of SameAsConstraint.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.SameAsConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of SameAsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSameAsConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of SameAsConstraint.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.SamePathConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.#ctor(NUnit.Framework.Constraints.SamePathConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.ConstructorString">
            <summary>Sets the shim of SamePathConstraint.SamePathConstraint(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.DescriptionGet">
            <summary>Sets the shim of SamePathConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.MatchesString">
            <summary>Sets the shim of SamePathConstraint.Matches(String actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of SamePathConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathConstraint.AllInstances.MatchesString">
            <summary>Sets the shim of SamePathConstraint.Matches(String actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.SamePathOrUnderConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.#ctor(NUnit.Framework.Constraints.SamePathOrUnderConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.ConstructorString">
            <summary>Sets the shim of SamePathOrUnderConstraint.SamePathOrUnderConstraint(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.DescriptionGet">
            <summary>Sets the shim of SamePathOrUnderConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.MatchesString">
            <summary>Sets the shim of SamePathOrUnderConstraint.Matches(String actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of SamePathOrUnderConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSamePathOrUnderConstraint.AllInstances.MatchesString">
            <summary>Sets the shim of SamePathOrUnderConstraint.Matches(String actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSelfResolvingOperator">
            <summary>Shim type of NUnit.Framework.Constraints.SelfResolvingOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSelfResolvingOperator.#ctor(NUnit.Framework.Constraints.SelfResolvingOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSelfResolvingOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSelfResolvingOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSelfResolvingOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSelfResolvingOperator.Constructor">
            <summary>Sets the shim of SelfResolvingOperator.SelfResolvingOperator()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSelfResolvingOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.SomeItemsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.#ctor(NUnit.Framework.Constraints.SomeItemsConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of SomeItemsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.ConstructorIConstraint">
            <summary>Sets the shim of SomeItemsConstraint.SomeItemsConstraint(IConstraint itemConstraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.DisplayNameGet">
            <summary>Sets the shim of SomeItemsConstraint.get_DisplayName()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.SomeItemsConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of SomeItemsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSomeItemsConstraint.AllInstances.DisplayNameGet">
            <summary>Sets the shim of SomeItemsConstraint.get_DisplayName()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSomeOperator">
            <summary>Shim type of NUnit.Framework.Constraints.SomeOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSomeOperator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSomeOperator.#ctor(NUnit.Framework.Constraints.SomeOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSomeOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSomeOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSomeOperator.ApplyPrefixIConstraint">
            <summary>Sets the shim of SomeOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSomeOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSomeOperator.Constructor">
            <summary>Sets the shim of SomeOperator.SomeOperator()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSomeOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSomeOperator.AllInstances.ApplyPrefixIConstraint">
            <summary>Sets the shim of SomeOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.StartsWithConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.#ctor(NUnit.Framework.Constraints.StartsWithConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.ConstructorString">
            <summary>Sets the shim of StartsWithConstraint.StartsWithConstraint(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.MatchesString">
            <summary>Sets the shim of StartsWithConstraint.Matches(String actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStartsWithConstraint.AllInstances.MatchesString">
            <summary>Sets the shim of StartsWithConstraint.Matches(String actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimStringConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.StringConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.#ctor(NUnit.Framework.Constraints.StringConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of StringConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.Constructor">
            <summary>Sets the shim of StringConstraint.StringConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.ConstructorString">
            <summary>Sets the shim of StringConstraint.StringConstraint(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.DescriptionGet">
            <summary>Sets the shim of StringConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.IgnoreCaseGet">
            <summary>Sets the shim of StringConstraint.get_IgnoreCase()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.StringConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of StringConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of StringConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimStringConstraint.AllInstances.IgnoreCaseGet">
            <summary>Sets the shim of StringConstraint.get_IgnoreCase()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.SubPathConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.#ctor(NUnit.Framework.Constraints.SubPathConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.ConstructorString">
            <summary>Sets the shim of SubPathConstraint.SubPathConstraint(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.DescriptionGet">
            <summary>Sets the shim of SubPathConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.MatchesString">
            <summary>Sets the shim of SubPathConstraint.Matches(String actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of SubPathConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSubPathConstraint.AllInstances.MatchesString">
            <summary>Sets the shim of SubPathConstraint.Matches(String actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.SubstringConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.#ctor(NUnit.Framework.Constraints.SubstringConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.ConstructorString">
            <summary>Sets the shim of SubstringConstraint.SubstringConstraint(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.MatchesString">
            <summary>Sets the shim of SubstringConstraint.Matches(String actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimSubstringConstraint.AllInstances.MatchesString">
            <summary>Sets the shim of SubstringConstraint.Matches(String actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.ThrowsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.#ctor(NUnit.Framework.Constraints.ThrowsConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of ThrowsConstraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of ThrowsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.ActualExceptionGet">
            <summary>Sets the shim of ThrowsConstraint.get_ActualException()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.ConstructorIConstraint">
            <summary>Sets the shim of ThrowsConstraint.ThrowsConstraint(IConstraint baseConstraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.DescriptionGet">
            <summary>Sets the shim of ThrowsConstraint.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.AllInstances.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ThrowsConstraint,NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of ThrowsConstraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ThrowsConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of ThrowsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.AllInstances.ActualExceptionGet">
            <summary>Sets the shim of ThrowsConstraint.get_ActualException()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of ThrowsConstraint.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimThrowsExceptionConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.ThrowsExceptionConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsExceptionConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsExceptionConstraint.#ctor(NUnit.Framework.Constraints.ThrowsExceptionConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsExceptionConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of ThrowsExceptionConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsExceptionConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsExceptionConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsExceptionConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsExceptionConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsExceptionConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets the shim of ThrowsExceptionConstraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsExceptionConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsExceptionConstraint.Constructor">
            <summary>Sets the shim of ThrowsExceptionConstraint.ThrowsExceptionConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsExceptionConstraint.DescriptionGet">
            <summary>Sets the shim of ThrowsExceptionConstraint.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimThrowsExceptionConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsExceptionConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ThrowsExceptionConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of ThrowsExceptionConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsExceptionConstraint.AllInstances.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ThrowsExceptionConstraint,NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets the shim of ThrowsExceptionConstraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsExceptionConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of ThrowsExceptionConstraint.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.ThrowsNothingConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.#ctor(NUnit.Framework.Constraints.ThrowsNothingConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of ThrowsNothingConstraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of ThrowsNothingConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.Constructor">
            <summary>Sets the shim of ThrowsNothingConstraint.ThrowsNothingConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.DescriptionGet">
            <summary>Sets the shim of ThrowsNothingConstraint.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.AllInstances.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ThrowsNothingConstraint,NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of ThrowsNothingConstraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ThrowsNothingConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of ThrowsNothingConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsNothingConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of ThrowsNothingConstraint.get_Description()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimThrowsOperator">
            <summary>Shim type of NUnit.Framework.Constraints.ThrowsOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsOperator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsOperator.#ctor(NUnit.Framework.Constraints.ThrowsOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimThrowsOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsOperator.Constructor">
            <summary>Sets the shim of ThrowsOperator.ThrowsOperator()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the shim of ThrowsOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimThrowsOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimThrowsOperator.AllInstances.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the shim of ThrowsOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimTolerance">
            <summary>Shim type of NUnit.Framework.Constraints.Tolerance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTolerance.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTolerance.#ctor(NUnit.Framework.Constraints.Tolerance)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTolerance.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTolerance.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AmountGet">
            <summary>Sets the shim of Tolerance.get_Amount()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.ApplyToValueObject">
            <summary>Sets the shim of Tolerance.ApplyToValue(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.CheckLinearAndNumeric">
            <summary>Sets the shim of Tolerance.CheckLinearAndNumeric()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.ConstructorObject">
            <summary>Sets the shim of Tolerance.Tolerance(Object amount)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.ConstructorObjectToleranceMode">
            <summary>Sets the shim of Tolerance.Tolerance(Object amount, ToleranceMode mode)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.DaysGet">
            <summary>Sets the shim of Tolerance.get_Days()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.DefaultGet">
            <summary>Sets the shim of Tolerance.get_Default()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.ExactGet">
            <summary>Sets the shim of Tolerance.get_Exact()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.HoursGet">
            <summary>Sets the shim of Tolerance.get_Hours()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.IsUnsetOrDefaultGet">
            <summary>Sets the shim of Tolerance.get_IsUnsetOrDefault()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.LinearRangeObject">
            <summary>Sets the shim of Tolerance.LinearRange(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.MillisecondsGet">
            <summary>Sets the shim of Tolerance.get_Milliseconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.MinutesGet">
            <summary>Sets the shim of Tolerance.get_Minutes()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.ModeGet">
            <summary>Sets the shim of Tolerance.get_Mode()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.PercentGet">
            <summary>Sets the shim of Tolerance.get_Percent()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.PercentRangeObject">
            <summary>Sets the shim of Tolerance.PercentRange(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.SecondsGet">
            <summary>Sets the shim of Tolerance.get_Seconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.TicksGet">
            <summary>Sets the shim of Tolerance.get_Ticks()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.UlpsGet">
            <summary>Sets the shim of Tolerance.get_Ulps()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.AmountGet">
            <summary>Sets the shim of Tolerance.get_Amount()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.ApplyToValueObject">
            <summary>Sets the shim of Tolerance.ApplyToValue(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.CheckLinearAndNumeric">
            <summary>Sets the shim of Tolerance.CheckLinearAndNumeric()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.DaysGet">
            <summary>Sets the shim of Tolerance.get_Days()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.HoursGet">
            <summary>Sets the shim of Tolerance.get_Hours()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.IsUnsetOrDefaultGet">
            <summary>Sets the shim of Tolerance.get_IsUnsetOrDefault()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.LinearRangeObject">
            <summary>Sets the shim of Tolerance.LinearRange(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.MillisecondsGet">
            <summary>Sets the shim of Tolerance.get_Milliseconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.MinutesGet">
            <summary>Sets the shim of Tolerance.get_Minutes()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.ModeGet">
            <summary>Sets the shim of Tolerance.get_Mode()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.PercentGet">
            <summary>Sets the shim of Tolerance.get_Percent()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.PercentRangeObject">
            <summary>Sets the shim of Tolerance.PercentRange(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.SecondsGet">
            <summary>Sets the shim of Tolerance.get_Seconds()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.TicksGet">
            <summary>Sets the shim of Tolerance.get_Ticks()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.AllInstances.UlpsGet">
            <summary>Sets the shim of Tolerance.get_Ulps()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimTolerance.ShimRange">
            <summary>Shim type of NUnit.Framework.Constraints.Tolerance+Range</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTolerance.ShimRange.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTolerance.ShimRange.#ctor(NUnit.Framework.Constraints.Tolerance.Range)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTolerance.ShimRange.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTolerance.ShimRange.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.ShimRange.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTolerance.ShimRange.ConstructorObjectObject">
            <summary>Sets the shim of Range.Range(Object lowerBound, Object upperBound)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimTolerance.ShimRange.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimTrueConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.TrueConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTrueConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTrueConstraint.#ctor(NUnit.Framework.Constraints.TrueConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTrueConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of TrueConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTrueConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTrueConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTrueConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTrueConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTrueConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTrueConstraint.Constructor">
            <summary>Sets the shim of TrueConstraint.TrueConstraint()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimTrueConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTrueConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.TrueConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of TrueConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimTypeConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.TypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTypeConstraint.#ctor(NUnit.Framework.Constraints.TypeConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTypeConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of TypeConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTypeConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTypeConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTypeConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTypeConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTypeConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimTypeConstraint.ConstructorTypeString">
            <summary>Sets the shim of TypeConstraint.TypeConstraint(Type type, String descriptionPrefix)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimTypeConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimTypeConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.TypeConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of TypeConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.UniqueItemsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.#ctor(NUnit.Framework.Constraints.UniqueItemsConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.Constructor">
            <summary>Sets the shim of UniqueItemsConstraint.UniqueItemsConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.DescriptionGet">
            <summary>Sets the shim of UniqueItemsConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.MatchesIEnumerable">
            <summary>Sets the shim of UniqueItemsConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of UniqueItemsConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimUniqueItemsConstraint.AllInstances.MatchesIEnumerable">
            <summary>Sets the shim of UniqueItemsConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimWithOperator">
            <summary>Shim type of NUnit.Framework.Constraints.WithOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimWithOperator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimWithOperator.#ctor(NUnit.Framework.Constraints.WithOperator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimWithOperator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimWithOperator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimWithOperator.ApplyPrefixIConstraint">
            <summary>Sets the shim of WithOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimWithOperator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimWithOperator.Constructor">
            <summary>Sets the shim of WithOperator.WithOperator()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimWithOperator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimWithOperator.AllInstances.ApplyPrefixIConstraint">
            <summary>Sets the shim of WithOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint">
            <summary>Shim type of NUnit.Framework.Constraints.XmlSerializableConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.#ctor(NUnit.Framework.Constraints.XmlSerializableConstraint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of XmlSerializableConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.Bind(NUnit.Framework.Constraints.IConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.Bind(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.Constructor">
            <summary>Sets the shim of XmlSerializableConstraint.XmlSerializableConstraint()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.DescriptionGet">
            <summary>Sets the shim of XmlSerializableConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.GetStringRepresentation">
            <summary>Sets the shim of XmlSerializableConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.AllInstances.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.XmlSerializableConstraint,``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets the shim of XmlSerializableConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.AllInstances.DescriptionGet">
            <summary>Sets the shim of XmlSerializableConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.ShimXmlSerializableConstraint.AllInstances.GetStringRepresentation">
            <summary>Sets the shim of XmlSerializableConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.AllItemsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.#ctor(NUnit.Framework.Constraints.IConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of AllItemsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.DescriptionGet">
            <summary>Sets the stub of PrefixConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.DisplayNameGet">
            <summary>Sets the stub of AllItemsConstraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubAllItemsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.Description">
            <summary>Sets the stub of PrefixConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.DisplayName">
            <summary>Sets the stub of AllItemsConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAllItemsConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubAllOperator">
            <summary>Stub type of NUnit.Framework.Constraints.AllOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllOperator.ApplyPrefix(NUnit.Framework.Constraints.IConstraint)">
            <summary>Sets the stub of AllOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAllOperator.ApplyPrefixIConstraint">
            <summary>Sets the stub of AllOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllOperator.InitializeStub">
            <summary>Initializes a new instance of type StubAllOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAllOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAllOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAllOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAllOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAllOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAllOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAllOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAllOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAllOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubAndConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.AndConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.#ctor(NUnit.Framework.Constraints.IConstraint,NUnit.Framework.Constraints.IConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of AndConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAndConstraint.DescriptionGet">
            <summary>Sets the stub of AndConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAndConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAndConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubAndConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAndConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAndConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAndConstraint.Description">
            <summary>Sets the stub of AndConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAndConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAndConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAndConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubAndOperator">
            <summary>Stub type of NUnit.Framework.Constraints.AndOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndOperator.ApplyOperator(NUnit.Framework.Constraints.IConstraint,NUnit.Framework.Constraints.IConstraint)">
            <summary>Sets the stub of AndOperator.ApplyOperator(IConstraint left, IConstraint right)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAndOperator.ApplyOperatorIConstraintIConstraint">
            <summary>Sets the stub of AndOperator.ApplyOperator(IConstraint left, IConstraint right)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndOperator.InitializeStub">
            <summary>Initializes a new instance of type StubAndOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAndOperator.LeftPrecedenceGet">
            <summary>Sets the stub of BinaryOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAndOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of BinaryOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAndOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of BinaryOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAndOperator.RightPrecedenceGet">
            <summary>Sets the stub of BinaryOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAndOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAndOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAndOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAndOperator.LeftPrecedence">
            <summary>Sets the stub of BinaryOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAndOperator.RightPrecedence">
            <summary>Sets the stub of BinaryOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.AssignableFromConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of TypeConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubAssignableFromConstraint.Description as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.DescriptionGet">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.DescriptionSetString">
            <summary>Sets the stub of Constraint.set_Description(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubAssignableFromConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.Matches(System.Object)">
            <summary>Sets the stub of AssignableFromConstraint.Matches(Object actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.MatchesObject">
            <summary>Sets the stub of AssignableFromConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.Description">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAssignableFromConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.AssignableToConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of TypeConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubAssignableToConstraint.Description as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.DescriptionGet">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.DescriptionSetString">
            <summary>Sets the stub of Constraint.set_Description(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubAssignableToConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.Matches(System.Object)">
            <summary>Sets the stub of AssignableToConstraint.Matches(Object actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.MatchesObject">
            <summary>Sets the stub of AssignableToConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.Description">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAssignableToConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.AttributeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.#ctor(System.Type,NUnit.Framework.Constraints.IConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of AttributeConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.DescriptionGet">
            <summary>Sets the stub of PrefixConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.GetStringRepresentation">
            <summary>Sets the stub of AttributeConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.GetStringRepresentation01">
            <summary>Sets the stub of AttributeConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubAttributeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.Description">
            <summary>Sets the stub of PrefixConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.AttributeExistsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of AttributeExistsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.DescriptionGet">
            <summary>Sets the stub of AttributeExistsConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubAttributeExistsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.Description">
            <summary>Sets the stub of AttributeExistsConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeExistsConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubAttributeOperator">
            <summary>Stub type of NUnit.Framework.Constraints.AttributeOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeOperator.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeOperator.InitializeStub">
            <summary>Initializes a new instance of type StubAttributeOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubAttributeOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of AttributeOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of AttributeOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubAttributeOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubAttributeOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.BinaryConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.#ctor(NUnit.Framework.Constraints.IConstraint,NUnit.Framework.Constraints.IConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubBinaryConstraint.Description as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.DescriptionGet">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.DescriptionSetString">
            <summary>Sets the stub of Constraint.set_Description(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubBinaryConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.Description">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinaryConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubBinaryOperator">
            <summary>Stub type of NUnit.Framework.Constraints.BinaryOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.ApplyOperator(NUnit.Framework.Constraints.IConstraint,NUnit.Framework.Constraints.IConstraint)">
            <summary>Sets the stub of BinaryOperator.ApplyOperator(IConstraint left, IConstraint right)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.ApplyOperatorIConstraintIConstraint">
            <summary>Sets the stub of BinaryOperator.ApplyOperator(IConstraint left, IConstraint right)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.InitializeStub">
            <summary>Initializes a new instance of type StubBinaryOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.LeftPrecedenceGet">
            <summary>Sets the stub of BinaryOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of BinaryOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of BinaryOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.RightPrecedenceGet">
            <summary>Sets the stub of BinaryOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.LeftPrecedence">
            <summary>Sets the stub of BinaryOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinaryOperator.RightPrecedence">
            <summary>Sets the stub of BinaryOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.BinarySerializableConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of BinarySerializableConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.DescriptionGet">
            <summary>Sets the stub of BinarySerializableConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.GetStringRepresentation">
            <summary>Sets the stub of BinarySerializableConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.GetStringRepresentation01">
            <summary>Sets the stub of BinarySerializableConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubBinarySerializableConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.Description">
            <summary>Sets the stub of BinarySerializableConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubBinarySerializableConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.CollectionConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of CollectionConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubCollectionConstraint.Description as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.DescriptionGet">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.DescriptionSetString">
            <summary>Sets the stub of Constraint.set_Description(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubCollectionConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.Matches(System.Collections.IEnumerable)">
            <summary>Sets the stub of CollectionConstraint.Matches(IEnumerable collection)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.MatchesIEnumerable">
            <summary>Sets the stub of CollectionConstraint.Matches(IEnumerable collection)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.Description">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.CollectionContainsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of CollectionConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.DescriptionGet">
            <summary>Sets the stub of CollectionContainsConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.DisplayNameGet">
            <summary>Sets the stub of CollectionContainsConstraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubCollectionContainsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.Matches(System.Collections.IEnumerable)">
            <summary>Sets the stub of CollectionContainsConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.MatchesIEnumerable">
            <summary>Sets the stub of CollectionContainsConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.Description">
            <summary>Sets the stub of CollectionContainsConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.DisplayName">
            <summary>Sets the stub of CollectionContainsConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionContainsConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.CollectionEquivalentConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.#ctor(System.Collections.IEnumerable)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of CollectionConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.DescriptionGet">
            <summary>Sets the stub of CollectionEquivalentConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.DisplayNameGet">
            <summary>Sets the stub of CollectionEquivalentConstraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubCollectionEquivalentConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.Matches(System.Collections.IEnumerable)">
            <summary>Sets the stub of CollectionEquivalentConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.MatchesIEnumerable">
            <summary>Sets the stub of CollectionEquivalentConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.Description">
            <summary>Sets the stub of CollectionEquivalentConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.DisplayName">
            <summary>Sets the stub of CollectionEquivalentConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionEquivalentConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.CollectionItemsEqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of CollectionConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubCollectionItemsEqualConstraint.Description as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.DescriptionGet">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.DescriptionSetString">
            <summary>Sets the stub of Constraint.set_Description(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubCollectionItemsEqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.Matches(System.Collections.IEnumerable)">
            <summary>Sets the stub of CollectionConstraint.Matches(IEnumerable collection)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.MatchesIEnumerable">
            <summary>Sets the stub of CollectionConstraint.Matches(IEnumerable collection)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.Description">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionItemsEqualConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubCollectionOperator">
            <summary>Stub type of NUnit.Framework.Constraints.CollectionOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.ApplyPrefix(NUnit.Framework.Constraints.IConstraint)">
            <summary>Sets the stub of PrefixOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.ApplyPrefixIConstraint">
            <summary>Sets the stub of PrefixOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.InitializeStub">
            <summary>Initializes a new instance of type StubCollectionOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.CollectionOrderedConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of CollectionConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.DescriptionGet">
            <summary>Sets the stub of CollectionOrderedConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.DisplayNameGet">
            <summary>Sets the stub of CollectionOrderedConstraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.GetStringRepresentation">
            <summary>Sets the stub of CollectionOrderedConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.GetStringRepresentation01">
            <summary>Sets the stub of CollectionOrderedConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubCollectionOrderedConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.Matches(System.Collections.IEnumerable)">
            <summary>Sets the stub of CollectionOrderedConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.MatchesIEnumerable">
            <summary>Sets the stub of CollectionOrderedConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.Description">
            <summary>Sets the stub of CollectionOrderedConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.DisplayName">
            <summary>Sets the stub of CollectionOrderedConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionOrderedConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.CollectionSubsetConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.#ctor(System.Collections.IEnumerable)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of CollectionConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.DescriptionGet">
            <summary>Sets the stub of CollectionSubsetConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.DisplayNameGet">
            <summary>Sets the stub of CollectionSubsetConstraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubCollectionSubsetConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.Matches(System.Collections.IEnumerable)">
            <summary>Sets the stub of CollectionSubsetConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.MatchesIEnumerable">
            <summary>Sets the stub of CollectionSubsetConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.Description">
            <summary>Sets the stub of CollectionSubsetConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.DisplayName">
            <summary>Sets the stub of CollectionSubsetConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionSubsetConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.CollectionSupersetConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.#ctor(System.Collections.IEnumerable)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of CollectionConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.DescriptionGet">
            <summary>Sets the stub of CollectionSupersetConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.DisplayNameGet">
            <summary>Sets the stub of CollectionSupersetConstraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubCollectionSupersetConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.Matches(System.Collections.IEnumerable)">
            <summary>Sets the stub of CollectionSupersetConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.MatchesIEnumerable">
            <summary>Sets the stub of CollectionSupersetConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.Description">
            <summary>Sets the stub of CollectionSupersetConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.DisplayName">
            <summary>Sets the stub of CollectionSupersetConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionSupersetConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubCollectionTally">
            <summary>Stub type of NUnit.Framework.Constraints.CollectionTally</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionTally.#ctor(NUnit.Framework.Constraints.NUnitEqualityComparer,System.Collections.IEnumerable)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubCollectionTally.InitializeStub">
            <summary>Initializes a new instance of type StubCollectionTally</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionTally.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionTally.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubCollectionTally.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubComparisonAdapter">
            <summary>Stub type of NUnit.Framework.Constraints.ComparisonAdapter</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonAdapter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonAdapter.Compare(System.Object,System.Object)">
            <summary>Sets the stub of ComparisonAdapter.Compare(Object expected, Object actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubComparisonAdapter.CompareObjectObject">
            <summary>Sets the stub of ComparisonAdapter.Compare(Object expected, Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonAdapter.InitializeStub">
            <summary>Initializes a new instance of type StubComparisonAdapter</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubComparisonAdapter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubComparisonAdapter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubComparisonAdapter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.ComparisonConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of ComparisonConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubComparisonConstraint.Description as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.DescriptionGet">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.DescriptionSetString">
            <summary>Sets the stub of Constraint.set_Description(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubComparisonConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.PerformComparison(NUnit.Framework.Constraints.ComparisonAdapter,System.Object,System.Object,NUnit.Framework.Constraints.Tolerance)">
            <summary>Sets the stub of ComparisonConstraint.PerformComparison(ComparisonAdapter comparer, Object actual, Object expected, Tolerance tolerance)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.PerformComparisonComparisonAdapterObjectObjectTolerance">
            <summary>Sets the stub of ComparisonConstraint.PerformComparison(ComparisonAdapter comparer, Object actual, Object expected, Tolerance tolerance)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.Description">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubComparisonConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.Constraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.#ctor(System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubConstraint.Description as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraint.DescriptionGet">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraint.DescriptionSetString">
            <summary>Sets the stub of Constraint.set_Description(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraint.Description">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubConstraintBuilder">
            <summary>Stub type of NUnit.Framework.Constraints.ConstraintBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintBuilder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubConstraintBuilder</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubConstraintExpression">
            <summary>Stub type of NUnit.Framework.Constraints.ConstraintExpression</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintExpression.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintExpression.#ctor(NUnit.Framework.Constraints.ConstraintBuilder)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintExpression.InitializeStub">
            <summary>Initializes a new instance of type StubConstraintExpression</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintExpression.ToString">
            <summary>Sets the stub of ConstraintExpression.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraintExpression.ToString01">
            <summary>Sets the stub of ConstraintExpression.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubConstraintOperator">
            <summary>Stub type of NUnit.Framework.Constraints.ConstraintOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintOperator.InitializeStub">
            <summary>Initializes a new instance of type StubConstraintOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraintOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of ConstraintOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraintOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of ConstraintOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraintOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubConstraintResult">
            <summary>Stub type of NUnit.Framework.Constraints.ConstraintResult</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintResult.#ctor(NUnit.Framework.Constraints.IConstraint,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintResult.#ctor(NUnit.Framework.Constraints.IConstraint,System.Object,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintResult.#ctor(NUnit.Framework.Constraints.IConstraint,System.Object,NUnit.Framework.Constraints.ConstraintStatus)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintResult.InitializeStub">
            <summary>Initializes a new instance of type StubConstraintResult</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraintResult.IsSuccessGet">
            <summary>Sets the stub of ConstraintResult.get_IsSuccess()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintResult.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of ConstraintResult.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraintResult.WriteActualValueToMessageWriter">
            <summary>Sets the stub of ConstraintResult.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubConstraintResult.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of ConstraintResult.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubConstraintResult.WriteMessageToMessageWriter">
            <summary>Sets the stub of ConstraintResult.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubConstraintResult.IsSuccess">
            <summary>Sets the stub of ConstraintResult.get_IsSuccess()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubContainsConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.ContainsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of ContainsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.DescriptionGet">
            <summary>Sets the stub of ContainsConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubContainsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.Description">
            <summary>Sets the stub of ContainsConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubContainsConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.DelayedConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.#ctor(NUnit.Framework.Constraints.IConstraint,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.#ctor(NUnit.Framework.Constraints.IConstraint,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of DelayedConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of DelayedConstraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of DelayedConstraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.DescriptionGet">
            <summary>Sets the stub of DelayedConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.GetStringRepresentation">
            <summary>Sets the stub of DelayedConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.GetStringRepresentation01">
            <summary>Sets the stub of DelayedConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubDelayedConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.Description">
            <summary>Sets the stub of DelayedConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubDelayedConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.DictionaryContainsKeyConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of CollectionConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.DescriptionGet">
            <summary>Sets the stub of DictionaryContainsKeyConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.DisplayNameGet">
            <summary>Sets the stub of DictionaryContainsKeyConstraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubDictionaryContainsKeyConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.Matches(System.Collections.IEnumerable)">
            <summary>Sets the stub of DictionaryContainsKeyConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.MatchesIEnumerable">
            <summary>Sets the stub of DictionaryContainsKeyConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.Description">
            <summary>Sets the stub of DictionaryContainsKeyConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.DisplayName">
            <summary>Sets the stub of DictionaryContainsKeyConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsKeyConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.DictionaryContainsValueConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of CollectionConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.DescriptionGet">
            <summary>Sets the stub of DictionaryContainsValueConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.DisplayNameGet">
            <summary>Sets the stub of DictionaryContainsValueConstraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubDictionaryContainsValueConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.Matches(System.Collections.IEnumerable)">
            <summary>Sets the stub of DictionaryContainsValueConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.MatchesIEnumerable">
            <summary>Sets the stub of DictionaryContainsValueConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.Description">
            <summary>Sets the stub of DictionaryContainsValueConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.DisplayName">
            <summary>Sets the stub of DictionaryContainsValueConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubDictionaryContainsValueConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.EmptyCollectionConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of CollectionConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.DescriptionGet">
            <summary>Sets the stub of EmptyCollectionConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubEmptyCollectionConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.Matches(System.Collections.IEnumerable)">
            <summary>Sets the stub of EmptyCollectionConstraint.Matches(IEnumerable collection)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.MatchesIEnumerable">
            <summary>Sets the stub of EmptyCollectionConstraint.Matches(IEnumerable collection)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.Description">
            <summary>Sets the stub of EmptyCollectionConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyCollectionConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.EmptyConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of EmptyConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.DescriptionGet">
            <summary>Sets the stub of EmptyConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubEmptyConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.Description">
            <summary>Sets the stub of EmptyConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.EmptyDirectoryConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of EmptyDirectoryConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.DescriptionGet">
            <summary>Sets the stub of EmptyDirectoryConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubEmptyDirectoryConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.Description">
            <summary>Sets the stub of EmptyDirectoryConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyDirectoryConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.EmptyStringConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of StringConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.DescriptionGet">
            <summary>Sets the stub of EmptyStringConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubEmptyStringConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.Matches(System.String)">
            <summary>Sets the stub of EmptyStringConstraint.Matches(String actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.MatchesString">
            <summary>Sets the stub of EmptyStringConstraint.Matches(String actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.Description">
            <summary>Sets the stub of EmptyStringConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEmptyStringConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.EndsWithConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of StringConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.DescriptionGet">
            <summary>Sets the stub of StringConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubEndsWithConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.Matches(System.String)">
            <summary>Sets the stub of EndsWithConstraint.Matches(String actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.MatchesString">
            <summary>Sets the stub of EndsWithConstraint.Matches(String actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.Description">
            <summary>Sets the stub of StringConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEndsWithConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubEqualConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.EqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of EqualConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.DescriptionGet">
            <summary>Sets the stub of EqualConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubEqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.Description">
            <summary>Sets the stub of EqualConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEqualConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubEqualConstraintResult">
            <summary>Stub type of NUnit.Framework.Constraints.EqualConstraintResult</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraintResult.#ctor(NUnit.Framework.Constraints.EqualConstraint,System.Object,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraintResult.InitializeStub">
            <summary>Initializes a new instance of type StubEqualConstraintResult</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEqualConstraintResult.IsSuccessGet">
            <summary>Sets the stub of ConstraintResult.get_IsSuccess()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraintResult.WriteActualValueTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of ConstraintResult.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEqualConstraintResult.WriteActualValueToMessageWriter">
            <summary>Sets the stub of ConstraintResult.WriteActualValueTo(MessageWriter writer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualConstraintResult.WriteMessageTo(NUnit.Framework.Constraints.MessageWriter)">
            <summary>Sets the stub of EqualConstraintResult.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEqualConstraintResult.WriteMessageToMessageWriter">
            <summary>Sets the stub of EqualConstraintResult.WriteMessageTo(MessageWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEqualConstraintResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEqualConstraintResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEqualConstraintResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEqualConstraintResult.IsSuccess">
            <summary>Sets the stub of ConstraintResult.get_IsSuccess()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubEqualityAdapter">
            <summary>Stub type of NUnit.Framework.Constraints.EqualityAdapter</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualityAdapter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualityAdapter.AreEqual(System.Object,System.Object)">
            <summary>Sets the stub of EqualityAdapter.AreEqual(Object x, Object y)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEqualityAdapter.AreEqualObjectObject">
            <summary>Sets the stub of EqualityAdapter.AreEqual(Object x, Object y)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualityAdapter.CanCompare(System.Object,System.Object)">
            <summary>Sets the stub of EqualityAdapter.CanCompare(Object x, Object y)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubEqualityAdapter.CanCompareObjectObject">
            <summary>Sets the stub of EqualityAdapter.CanCompare(Object x, Object y)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubEqualityAdapter.InitializeStub">
            <summary>Initializes a new instance of type StubEqualityAdapter</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEqualityAdapter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEqualityAdapter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubEqualityAdapter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.ExactCountConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.#ctor(System.Int32,NUnit.Framework.Constraints.IConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of ExactCountConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.DescriptionGet">
            <summary>Sets the stub of ExactCountConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubExactCountConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.Description">
            <summary>Sets the stub of ExactCountConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactCountConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubExactCountOperator">
            <summary>Stub type of NUnit.Framework.Constraints.ExactCountOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.InitializeStub">
            <summary>Initializes a new instance of type StubExactCountOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of ExactCountOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of ExactCountOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactCountOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.ExactTypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of TypeConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubExactTypeConstraint.Description as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.DescriptionGet">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.DescriptionSetString">
            <summary>Sets the stub of Constraint.set_Description(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.DisplayNameGet">
            <summary>Sets the stub of ExactTypeConstraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubExactTypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.Matches(System.Object)">
            <summary>Sets the stub of ExactTypeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.MatchesObject">
            <summary>Sets the stub of ExactTypeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.Description">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.DisplayName">
            <summary>Sets the stub of ExactTypeConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExactTypeConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.ExceptionTypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of ExceptionTypeConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubExceptionTypeConstraint.Description as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.DescriptionGet">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.DescriptionSetString">
            <summary>Sets the stub of Constraint.set_Description(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.DisplayNameGet">
            <summary>Sets the stub of ExactTypeConstraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubExceptionTypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.Matches(System.Object)">
            <summary>Sets the stub of ExactTypeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.MatchesObject">
            <summary>Sets the stub of ExactTypeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.Description">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.DisplayName">
            <summary>Sets the stub of ExactTypeConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubExceptionTypeConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubFalseConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.FalseConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of FalseConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubFalseConstraint.Description as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.DescriptionGet">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.DescriptionSetString">
            <summary>Sets the stub of Constraint.set_Description(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubFalseConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.Description">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubFalseConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.FileOrDirectoryExistsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint.#ctor(System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of FileOrDirectoryExistsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint.DescriptionGet">
            <summary>Sets the stub of FileOrDirectoryExistsConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubFileOrDirectoryExistsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint.Description">
            <summary>Sets the stub of FileOrDirectoryExistsConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubFileOrDirectoryExistsConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.GreaterThanConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of ComparisonConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubGreaterThanConstraint.Description as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.DescriptionGet">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.DescriptionSetString">
            <summary>Sets the stub of Constraint.set_Description(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubGreaterThanConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.PerformComparison(NUnit.Framework.Constraints.ComparisonAdapter,System.Object,System.Object,NUnit.Framework.Constraints.Tolerance)">
            <summary>Sets the stub of GreaterThanConstraint.PerformComparison(ComparisonAdapter comparer, Object actual, Object expected, Tolerance tolerance)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.PerformComparisonComparisonAdapterObjectObjectTolerance">
            <summary>Sets the stub of GreaterThanConstraint.PerformComparison(ComparisonAdapter comparer, Object actual, Object expected, Tolerance tolerance)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.Description">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubGreaterThanConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.GreaterThanOrEqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of ComparisonConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubGreaterThanOrEqualConstraint.Description as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.DescriptionGet">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.DescriptionSetString">
            <summary>Sets the stub of Constraint.set_Description(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubGreaterThanOrEqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.PerformComparison(NUnit.Framework.Constraints.ComparisonAdapter,System.Object,System.Object,NUnit.Framework.Constraints.Tolerance)">
            <summary>Sets the stub of GreaterThanOrEqualConstraint.PerformComparison(ComparisonAdapter comparer, Object actual, Object expected, Tolerance tolerance)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.PerformComparisonComparisonAdapterObjectObjectTolerance">
            <summary>Sets the stub of GreaterThanOrEqualConstraint.PerformComparison(ComparisonAdapter comparer, Object actual, Object expected, Tolerance tolerance)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.Description">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubGreaterThanOrEqualConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubIConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.IConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubIConstraint.#ctor">
            <summary>Initializes a new instance of type StubIConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubIConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubIConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubIConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubIConstraint.ArgumentsGet">
            <summary>Sets the stub of IConstraint.get_Arguments()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubIConstraint.AttachBackingFieldToBuilder">
            <summary>Attaches delegates to emulate StubIConstraint.Builder as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubIConstraint.BuilderGet">
            <summary>Sets the stub of IConstraint.get_Builder()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubIConstraint.BuilderSetConstraintBuilder">
            <summary>Sets the stub of IConstraint.set_Builder(ConstraintBuilder value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubIConstraint.DescriptionGet">
            <summary>Sets the stub of IConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubIConstraint.DisplayNameGet">
            <summary>Sets the stub of IConstraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubIConstraint.n::NUnit#Framework#Constraints#IConstraint#ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of IConstraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubIConstraint.n::NUnit#Framework#Constraints#IConstraint#ApplyTo``1(``0)">
            <summary>Sets the stub of IConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubIConstraint.n::NUnit#Framework#Constraints#IConstraint#ApplyTo``1(``0@)">
            <summary>Sets the stub of IConstraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubIConstraint.n::NUnit#Framework#Constraints#IResolveConstraint#Resolve">
            <summary>Sets the stub of IResolveConstraint.Resolve()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubIConstraint.Resolve">
            <summary>Sets the stub of IResolveConstraint.Resolve()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubIConstraint.n::NUnit#Framework#Constraints#IConstraint#Arguments">
            <summary>Sets the stub of IConstraint.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubIConstraint.n::NUnit#Framework#Constraints#IConstraint#Builder">
            <summary>Sets the stub of IConstraint.get_Builder()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubIConstraint.n::NUnit#Framework#Constraints#IConstraint#Description">
            <summary>Sets the stub of IConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubIConstraint.n::NUnit#Framework#Constraints#IConstraint#DisplayName">
            <summary>Sets the stub of IConstraint.get_DisplayName()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubIResolveConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.IResolveConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubIResolveConstraint.#ctor">
            <summary>Initializes a new instance of type StubIResolveConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubIResolveConstraint.n::NUnit#Framework#Constraints#IResolveConstraint#Resolve">
            <summary>Sets the stub of IResolveConstraint.Resolve()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubIResolveConstraint.Resolve">
            <summary>Sets the stub of IResolveConstraint.Resolve()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.InstanceOfTypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of TypeConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubInstanceOfTypeConstraint.Description as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.DescriptionGet">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.DescriptionSetString">
            <summary>Sets the stub of Constraint.set_Description(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.DisplayNameGet">
            <summary>Sets the stub of InstanceOfTypeConstraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubInstanceOfTypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.Matches(System.Object)">
            <summary>Sets the stub of InstanceOfTypeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.MatchesObject">
            <summary>Sets the stub of InstanceOfTypeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.Description">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.DisplayName">
            <summary>Sets the stub of InstanceOfTypeConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubInstanceOfTypeConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubInterval">
            <summary>Stub type of NUnit.Framework.Constraints.Interval</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInterval.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInterval.InitializeStub">
            <summary>Initializes a new instance of type StubInterval</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubInterval.ToString">
            <summary>Sets the stub of Interval.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubInterval.ToString01">
            <summary>Sets the stub of Interval.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubInterval.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubInterval.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubInterval.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.LessThanConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of ComparisonConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubLessThanConstraint.Description as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.DescriptionGet">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.DescriptionSetString">
            <summary>Sets the stub of Constraint.set_Description(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubLessThanConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.PerformComparison(NUnit.Framework.Constraints.ComparisonAdapter,System.Object,System.Object,NUnit.Framework.Constraints.Tolerance)">
            <summary>Sets the stub of LessThanConstraint.PerformComparison(ComparisonAdapter comparer, Object actual, Object expected, Tolerance tolerance)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.PerformComparisonComparisonAdapterObjectObjectTolerance">
            <summary>Sets the stub of LessThanConstraint.PerformComparison(ComparisonAdapter comparer, Object actual, Object expected, Tolerance tolerance)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.Description">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubLessThanConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.LessThanOrEqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of ComparisonConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubLessThanOrEqualConstraint.Description as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.DescriptionGet">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.DescriptionSetString">
            <summary>Sets the stub of Constraint.set_Description(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubLessThanOrEqualConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.PerformComparison(NUnit.Framework.Constraints.ComparisonAdapter,System.Object,System.Object,NUnit.Framework.Constraints.Tolerance)">
            <summary>Sets the stub of LessThanOrEqualConstraint.PerformComparison(ComparisonAdapter comparer, Object actual, Object expected, Tolerance tolerance)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.PerformComparisonComparisonAdapterObjectObjectTolerance">
            <summary>Sets the stub of LessThanOrEqualConstraint.PerformComparison(ComparisonAdapter comparer, Object actual, Object expected, Tolerance tolerance)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.Description">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubLessThanOrEqualConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubMessageWriter">
            <summary>Stub type of NUnit.Framework.Constraints.MessageWriter</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.AttachBackingFieldToMaxLineLength">
            <summary>Attaches delegates to emulate StubMessageWriter.MaxLineLength as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.AttachBackingFieldToNewLine">
            <summary>Attaches delegates to emulate StubMessageWriter.NewLine as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Close">
            <summary>Sets the stub of StringWriter.Close()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Close01">
            <summary>Sets the stub of StringWriter.Close()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.DisplayDifferences(NUnit.Framework.Constraints.ConstraintResult)">
            <summary>Sets the stub of MessageWriter.DisplayDifferences(ConstraintResult result)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.DisplayDifferences(System.Object,System.Object)">
            <summary>Sets the stub of MessageWriter.DisplayDifferences(Object expected, Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.DisplayDifferences(System.Object,System.Object,NUnit.Framework.Constraints.Tolerance)">
            <summary>Sets the stub of MessageWriter.DisplayDifferences(Object expected, Object actual, Tolerance tolerance)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.DisplayDifferencesConstraintResult">
            <summary>Sets the stub of MessageWriter.DisplayDifferences(ConstraintResult result)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.DisplayDifferencesObjectObject">
            <summary>Sets the stub of MessageWriter.DisplayDifferences(Object expected, Object actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.DisplayDifferencesObjectObjectTolerance">
            <summary>Sets the stub of MessageWriter.DisplayDifferences(Object expected, Object actual, Tolerance tolerance)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.DisplayStringDifferences(System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>Sets the stub of MessageWriter.DisplayStringDifferences(String expected, String actual, Int32 mismatch, Boolean ignoreCase, Boolean clipping)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.DisplayStringDifferencesStringStringInt32BooleanBoolean">
            <summary>Sets the stub of MessageWriter.DisplayStringDifferences(String expected, String actual, Int32 mismatch, Boolean ignoreCase, Boolean clipping)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Dispose(System.Boolean)">
            <summary>Sets the stub of StringWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.DisposeBoolean">
            <summary>Sets the stub of StringWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.EncodingGet">
            <summary>Sets the stub of StringWriter.get_Encoding()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Flush">
            <summary>Sets the stub of TextWriter.Flush()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Flush01">
            <summary>Sets the stub of TextWriter.Flush()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.FlushAsync">
            <summary>Sets the stub of StringWriter.FlushAsync()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.FlushAsync01">
            <summary>Sets the stub of StringWriter.FlushAsync()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.FormatProviderGet">
            <summary>Sets the stub of TextWriter.get_FormatProvider()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.GetStringBuilder">
            <summary>Sets the stub of StringWriter.GetStringBuilder()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.GetStringBuilder01">
            <summary>Sets the stub of StringWriter.GetStringBuilder()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.InitializeStub">
            <summary>Initializes a new instance of type StubMessageWriter</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.MaxLineLengthGet">
            <summary>Sets the stub of MessageWriter.get_MaxLineLength()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.MaxLineLengthSetInt32">
            <summary>Sets the stub of MessageWriter.set_MaxLineLength(Int32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.NewLineGet">
            <summary>Sets the stub of TextWriter.get_NewLine()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.NewLineSetString">
            <summary>Sets the stub of TextWriter.set_NewLine(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.ToString">
            <summary>Sets the stub of StringWriter.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.ToString01">
            <summary>Sets the stub of StringWriter.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.Boolean)">
            <summary>Sets the stub of TextWriter.Write(Boolean value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.Char)">
            <summary>Sets the stub of StringWriter.Write(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.Decimal)">
            <summary>Sets the stub of TextWriter.Write(Decimal value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.Char[])">
            <summary>Sets the stub of TextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.Double)">
            <summary>Sets the stub of TextWriter.Write(Double value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.String)">
            <summary>Sets the stub of StringWriter.Write(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.Int32)">
            <summary>Sets the stub of TextWriter.Write(Int32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.Int64)">
            <summary>Sets the stub of TextWriter.Write(Int64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.Single)">
            <summary>Sets the stub of TextWriter.Write(Single value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.UInt32)">
            <summary>Sets the stub of TextWriter.Write(UInt32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.UInt64)">
            <summary>Sets the stub of TextWriter.Write(UInt64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.Object)">
            <summary>Sets the stub of TextWriter.Write(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.String,System.Object)">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.String,System.Object[])">
            <summary>Sets the stub of TextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of StringWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.String,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteActualValue(System.Object)">
            <summary>Sets the stub of MessageWriter.WriteActualValue(Object actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteActualValueObject">
            <summary>Sets the stub of MessageWriter.WriteActualValue(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteAsync(System.Char)">
            <summary>Sets the stub of StringWriter.WriteAsync(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteAsync(System.String)">
            <summary>Sets the stub of StringWriter.WriteAsync(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of StringWriter.WriteAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteAsyncChar">
            <summary>Sets the stub of StringWriter.WriteAsync(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteAsyncCharArrayInt32Int32">
            <summary>Sets the stub of StringWriter.WriteAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteAsyncString">
            <summary>Sets the stub of StringWriter.WriteAsync(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteBoolean">
            <summary>Sets the stub of TextWriter.Write(Boolean value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteChar">
            <summary>Sets the stub of StringWriter.Write(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteCharArray">
            <summary>Sets the stub of TextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteCharArrayInt32Int32">
            <summary>Sets the stub of StringWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteCollectionElements(System.Collections.IEnumerable,System.Int64,System.Int32)">
            <summary>Sets the stub of MessageWriter.WriteCollectionElements(IEnumerable collection, Int64 start, Int32 max)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteCollectionElementsIEnumerableInt64Int32">
            <summary>Sets the stub of MessageWriter.WriteCollectionElements(IEnumerable collection, Int64 start, Int32 max)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteDecimal">
            <summary>Sets the stub of TextWriter.Write(Decimal value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteDouble">
            <summary>Sets the stub of TextWriter.Write(Double value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteInt32">
            <summary>Sets the stub of TextWriter.Write(Int32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteInt64">
            <summary>Sets the stub of TextWriter.Write(Int64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine">
            <summary>Sets the stub of TextWriter.WriteLine()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.Boolean)">
            <summary>Sets the stub of TextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.Char[])">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.Char)">
            <summary>Sets the stub of TextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.Single)">
            <summary>Sets the stub of TextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.Decimal)">
            <summary>Sets the stub of TextWriter.WriteLine(Decimal value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.String)">
            <summary>Sets the stub of TextWriter.WriteLine(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.Double)">
            <summary>Sets the stub of TextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.Int32)">
            <summary>Sets the stub of TextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.Int64)">
            <summary>Sets the stub of TextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.UInt32)">
            <summary>Sets the stub of TextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.UInt64)">
            <summary>Sets the stub of TextWriter.WriteLine(UInt64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.String,System.Object[])">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.String,System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.String,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLine01">
            <summary>Sets the stub of TextWriter.WriteLine()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineAsync">
            <summary>Sets the stub of TextWriter.WriteLineAsync()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineAsync(System.Char)">
            <summary>Sets the stub of StringWriter.WriteLineAsync(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineAsync(System.String)">
            <summary>Sets the stub of StringWriter.WriteLineAsync(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of StringWriter.WriteLineAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineAsync01">
            <summary>Sets the stub of TextWriter.WriteLineAsync()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineAsyncChar">
            <summary>Sets the stub of StringWriter.WriteLineAsync(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineAsyncCharArrayInt32Int32">
            <summary>Sets the stub of StringWriter.WriteLineAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineAsyncString">
            <summary>Sets the stub of StringWriter.WriteLineAsync(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineBoolean">
            <summary>Sets the stub of TextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineChar">
            <summary>Sets the stub of TextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineCharArray">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineCharArrayInt32Int32">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineDecimal">
            <summary>Sets the stub of TextWriter.WriteLine(Decimal value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineDouble">
            <summary>Sets the stub of TextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineInt32">
            <summary>Sets the stub of TextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineInt64">
            <summary>Sets the stub of TextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineObject">
            <summary>Sets the stub of TextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineSingle">
            <summary>Sets the stub of TextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineString">
            <summary>Sets the stub of TextWriter.WriteLine(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineStringObject">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineStringObjectArray">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineStringObjectObject">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineStringObjectObjectObject">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineUInt32">
            <summary>Sets the stub of TextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteLineUInt64">
            <summary>Sets the stub of TextWriter.WriteLine(UInt64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteMessageLine(System.Int32,System.String,System.Object[])">
            <summary>Sets the stub of MessageWriter.WriteMessageLine(Int32 level, String message, Object[] args)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteMessageLineInt32StringObjectArray">
            <summary>Sets the stub of MessageWriter.WriteMessageLine(Int32 level, String message, Object[] args)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteObject">
            <summary>Sets the stub of TextWriter.Write(Object value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteSingle">
            <summary>Sets the stub of TextWriter.Write(Single value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteString">
            <summary>Sets the stub of StringWriter.Write(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteStringObject">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteStringObjectArray">
            <summary>Sets the stub of TextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteStringObjectObject">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteStringObjectObjectObject">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteUInt32">
            <summary>Sets the stub of TextWriter.Write(UInt32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteUInt64">
            <summary>Sets the stub of TextWriter.Write(UInt64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteValue(System.Object)">
            <summary>Sets the stub of MessageWriter.WriteValue(Object val)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubMessageWriter.WriteValueObject">
            <summary>Sets the stub of MessageWriter.WriteValue(Object val)</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubMessageWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubMessageWriter.Encoding">
            <summary>Sets the stub of StringWriter.get_Encoding()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubMessageWriter.FormatProvider">
            <summary>Sets the stub of TextWriter.get_FormatProvider()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubMessageWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubMessageWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubMessageWriter.MaxLineLength">
            <summary>Sets the stub of MessageWriter.get_MaxLineLength()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubMessageWriter.NewLine">
            <summary>Sets the stub of TextWriter.get_NewLine()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubNUnitComparer">
            <summary>Stub type of NUnit.Framework.Constraints.NUnitComparer</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNUnitComparer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNUnitComparer.InitializeStub">
            <summary>Initializes a new instance of type StubNUnitComparer</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNUnitComparer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNUnitComparer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNUnitComparer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubNUnitEqualityComparer">
            <summary>Stub type of NUnit.Framework.Constraints.NUnitEqualityComparer</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNUnitEqualityComparer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNUnitEqualityComparer.InitializeStub">
            <summary>Initializes a new instance of type StubNUnitEqualityComparer</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNUnitEqualityComparer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNUnitEqualityComparer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNUnitEqualityComparer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubNaNConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.NaNConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of NaNConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.DescriptionGet">
            <summary>Sets the stub of NaNConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubNaNConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.Description">
            <summary>Sets the stub of NaNConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNaNConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.NoItemConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.#ctor(NUnit.Framework.Constraints.IConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of NoItemConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.DescriptionGet">
            <summary>Sets the stub of PrefixConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.DisplayNameGet">
            <summary>Sets the stub of NoItemConstraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubNoItemConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.Description">
            <summary>Sets the stub of PrefixConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.DisplayName">
            <summary>Sets the stub of NoItemConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNoItemConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubNoneOperator">
            <summary>Stub type of NUnit.Framework.Constraints.NoneOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoneOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoneOperator.ApplyPrefix(NUnit.Framework.Constraints.IConstraint)">
            <summary>Sets the stub of NoneOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNoneOperator.ApplyPrefixIConstraint">
            <summary>Sets the stub of NoneOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoneOperator.InitializeStub">
            <summary>Initializes a new instance of type StubNoneOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNoneOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNoneOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNoneOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNoneOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNoneOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNoneOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNoneOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNoneOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNoneOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubNotConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.NotConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.#ctor(NUnit.Framework.Constraints.IConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of NotConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNotConstraint.DescriptionGet">
            <summary>Sets the stub of PrefixConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNotConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNotConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubNotConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNotConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNotConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNotConstraint.Description">
            <summary>Sets the stub of PrefixConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNotConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNotConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNotConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubNotOperator">
            <summary>Stub type of NUnit.Framework.Constraints.NotOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotOperator.ApplyPrefix(NUnit.Framework.Constraints.IConstraint)">
            <summary>Sets the stub of NotOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNotOperator.ApplyPrefixIConstraint">
            <summary>Sets the stub of NotOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotOperator.InitializeStub">
            <summary>Initializes a new instance of type StubNotOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNotOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNotOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNotOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNotOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNotOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNotOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNotOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNotOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNotOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubNullConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.NullConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of NullConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubNullConstraint.Description as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNullConstraint.DescriptionGet">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNullConstraint.DescriptionSetString">
            <summary>Sets the stub of Constraint.set_Description(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNullConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNullConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubNullConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubNullConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubNullConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNullConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNullConstraint.Description">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNullConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNullConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubNullConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubOrConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.OrConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.#ctor(NUnit.Framework.Constraints.IConstraint,NUnit.Framework.Constraints.IConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of OrConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubOrConstraint.DescriptionGet">
            <summary>Sets the stub of OrConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubOrConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubOrConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubOrConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubOrConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubOrConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubOrConstraint.Description">
            <summary>Sets the stub of OrConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubOrConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubOrConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubOrConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubOrOperator">
            <summary>Stub type of NUnit.Framework.Constraints.OrOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrOperator.ApplyOperator(NUnit.Framework.Constraints.IConstraint,NUnit.Framework.Constraints.IConstraint)">
            <summary>Sets the stub of OrOperator.ApplyOperator(IConstraint left, IConstraint right)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubOrOperator.ApplyOperatorIConstraintIConstraint">
            <summary>Sets the stub of OrOperator.ApplyOperator(IConstraint left, IConstraint right)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrOperator.InitializeStub">
            <summary>Initializes a new instance of type StubOrOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubOrOperator.LeftPrecedenceGet">
            <summary>Sets the stub of BinaryOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubOrOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of BinaryOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubOrOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of BinaryOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubOrOperator.RightPrecedenceGet">
            <summary>Sets the stub of BinaryOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubOrOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubOrOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubOrOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubOrOperator.LeftPrecedence">
            <summary>Sets the stub of BinaryOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubOrOperator.RightPrecedence">
            <summary>Sets the stub of BinaryOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubPathConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.PathConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of StringConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPathConstraint.DescriptionGet">
            <summary>Sets the stub of StringConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPathConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.GetStringRepresentation">
            <summary>Sets the stub of PathConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPathConstraint.GetStringRepresentation01">
            <summary>Sets the stub of PathConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubPathConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.Matches(System.String)">
            <summary>Sets the stub of StringConstraint.Matches(String actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPathConstraint.MatchesString">
            <summary>Sets the stub of StringConstraint.Matches(String actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPathConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPathConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPathConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPathConstraint.Description">
            <summary>Sets the stub of StringConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPathConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPathConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPathConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1">
            <summary>Stub type of NUnit.Framework.Constraints.PredicateConstraint`1</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.#ctor(System.Predicate{`0})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.ApplyTo``1(``0)">
            <summary>Sets the stub of PredicateConstraint`1.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.DescriptionGet">
            <summary>Sets the stub of PredicateConstraint`1.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.InitializeStub">
            <summary>Initializes a new instance of type StubPredicateConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.Description">
            <summary>Sets the stub of PredicateConstraint`1.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPredicateConstraint`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.PrefixConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.#ctor(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.DescriptionGet">
            <summary>Sets the stub of PrefixConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubPrefixConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.Description">
            <summary>Sets the stub of PrefixConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPrefixConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubPrefixOperator">
            <summary>Stub type of NUnit.Framework.Constraints.PrefixOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.ApplyPrefix(NUnit.Framework.Constraints.IConstraint)">
            <summary>Sets the stub of PrefixOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.ApplyPrefixIConstraint">
            <summary>Sets the stub of PrefixOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.InitializeStub">
            <summary>Initializes a new instance of type StubPrefixOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPrefixOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubPropOperator">
            <summary>Stub type of NUnit.Framework.Constraints.PropOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropOperator.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropOperator.InitializeStub">
            <summary>Initializes a new instance of type StubPropOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of PropOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of PropOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.PropertyConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.#ctor(System.String,NUnit.Framework.Constraints.IConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of PropertyConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.DescriptionGet">
            <summary>Sets the stub of PrefixConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.GetStringRepresentation">
            <summary>Sets the stub of PropertyConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.GetStringRepresentation01">
            <summary>Sets the stub of PropertyConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubPropertyConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.Description">
            <summary>Sets the stub of PrefixConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropertyConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.PropertyExistsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of PropertyExistsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.DescriptionGet">
            <summary>Sets the stub of PropertyExistsConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.GetStringRepresentation">
            <summary>Sets the stub of PropertyExistsConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.GetStringRepresentation01">
            <summary>Sets the stub of PropertyExistsConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubPropertyExistsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.Description">
            <summary>Sets the stub of PropertyExistsConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubPropertyExistsConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubRangeConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.RangeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint.#ctor(System.IComparable,System.IComparable)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of RangeConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubRangeConstraint.DescriptionGet">
            <summary>Sets the stub of RangeConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubRangeConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubRangeConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubRangeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRangeConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubRangeConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubRangeConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubRangeConstraint.Description">
            <summary>Sets the stub of RangeConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubRangeConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubRangeConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubRangeConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubRegexConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.RegexConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of StringConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.DescriptionGet">
            <summary>Sets the stub of StringConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubRegexConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.Matches(System.String)">
            <summary>Sets the stub of RegexConstraint.Matches(String actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.MatchesString">
            <summary>Sets the stub of RegexConstraint.Matches(String actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.Description">
            <summary>Sets the stub of StringConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubRegexConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubResolvableConstraintExpression">
            <summary>Stub type of NUnit.Framework.Constraints.ResolvableConstraintExpression</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubResolvableConstraintExpression.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubResolvableConstraintExpression.#ctor(NUnit.Framework.Constraints.ConstraintBuilder)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubResolvableConstraintExpression.InitializeStub">
            <summary>Initializes a new instance of type StubResolvableConstraintExpression</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubResolvableConstraintExpression.ToString">
            <summary>Sets the stub of ConstraintExpression.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubResolvableConstraintExpression.ToString01">
            <summary>Sets the stub of ConstraintExpression.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubResolvableConstraintExpression.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubResolvableConstraintExpression.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubResolvableConstraintExpression.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubReusableConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.ReusableConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubReusableConstraint.#ctor(NUnit.Framework.Constraints.IResolveConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubReusableConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubReusableConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubReusableConstraint.ToString">
            <summary>Sets the stub of ReusableConstraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubReusableConstraint.ToString01">
            <summary>Sets the stub of ReusableConstraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubReusableConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubReusableConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubReusableConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.SameAsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of SameAsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.DescriptionGet">
            <summary>Sets the stub of SameAsConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubSameAsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.Description">
            <summary>Sets the stub of SameAsConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSameAsConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.SamePathConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of StringConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.DescriptionGet">
            <summary>Sets the stub of SamePathConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.GetStringRepresentation">
            <summary>Sets the stub of PathConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.GetStringRepresentation01">
            <summary>Sets the stub of PathConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubSamePathConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.Matches(System.String)">
            <summary>Sets the stub of SamePathConstraint.Matches(String actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.MatchesString">
            <summary>Sets the stub of SamePathConstraint.Matches(String actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.Description">
            <summary>Sets the stub of SamePathConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSamePathConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.SamePathOrUnderConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of StringConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.DescriptionGet">
            <summary>Sets the stub of SamePathOrUnderConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.GetStringRepresentation">
            <summary>Sets the stub of PathConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.GetStringRepresentation01">
            <summary>Sets the stub of PathConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubSamePathOrUnderConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.Matches(System.String)">
            <summary>Sets the stub of SamePathOrUnderConstraint.Matches(String actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.MatchesString">
            <summary>Sets the stub of SamePathOrUnderConstraint.Matches(String actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.Description">
            <summary>Sets the stub of SamePathOrUnderConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSamePathOrUnderConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator">
            <summary>Stub type of NUnit.Framework.Constraints.SelfResolvingOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator.InitializeStub">
            <summary>Initializes a new instance of type StubSelfResolvingOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of ConstraintOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of ConstraintOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSelfResolvingOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.SomeItemsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.#ctor(NUnit.Framework.Constraints.IConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of SomeItemsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.DescriptionGet">
            <summary>Sets the stub of PrefixConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.DisplayNameGet">
            <summary>Sets the stub of SomeItemsConstraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubSomeItemsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.Description">
            <summary>Sets the stub of PrefixConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.DisplayName">
            <summary>Sets the stub of SomeItemsConstraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSomeItemsConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubSomeOperator">
            <summary>Stub type of NUnit.Framework.Constraints.SomeOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeOperator.ApplyPrefix(NUnit.Framework.Constraints.IConstraint)">
            <summary>Sets the stub of SomeOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSomeOperator.ApplyPrefixIConstraint">
            <summary>Sets the stub of SomeOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeOperator.InitializeStub">
            <summary>Initializes a new instance of type StubSomeOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSomeOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSomeOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSomeOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSomeOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSomeOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSomeOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSomeOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSomeOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSomeOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.StartsWithConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of StringConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.DescriptionGet">
            <summary>Sets the stub of StringConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubStartsWithConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.Matches(System.String)">
            <summary>Sets the stub of StartsWithConstraint.Matches(String actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.MatchesString">
            <summary>Sets the stub of StartsWithConstraint.Matches(String actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.Description">
            <summary>Sets the stub of StringConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubStartsWithConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubStringConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.StringConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of StringConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStringConstraint.DescriptionGet">
            <summary>Sets the stub of StringConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStringConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStringConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubStringConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.Matches(System.String)">
            <summary>Sets the stub of StringConstraint.Matches(String actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStringConstraint.MatchesString">
            <summary>Sets the stub of StringConstraint.Matches(String actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubStringConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubStringConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubStringConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubStringConstraint.Description">
            <summary>Sets the stub of StringConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubStringConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubStringConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubStringConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.SubPathConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of StringConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.DescriptionGet">
            <summary>Sets the stub of SubPathConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.GetStringRepresentation">
            <summary>Sets the stub of PathConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.GetStringRepresentation01">
            <summary>Sets the stub of PathConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubSubPathConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.Matches(System.String)">
            <summary>Sets the stub of SubPathConstraint.Matches(String actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.MatchesString">
            <summary>Sets the stub of SubPathConstraint.Matches(String actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.Description">
            <summary>Sets the stub of SubPathConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSubPathConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.SubstringConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of StringConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.DescriptionGet">
            <summary>Sets the stub of StringConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubSubstringConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.Matches(System.String)">
            <summary>Sets the stub of SubstringConstraint.Matches(String actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.MatchesString">
            <summary>Sets the stub of SubstringConstraint.Matches(String actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.Description">
            <summary>Sets the stub of StringConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubSubstringConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.ThrowsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.#ctor(NUnit.Framework.Constraints.IConstraint)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of ThrowsConstraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of ThrowsConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.DescriptionGet">
            <summary>Sets the stub of ThrowsConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubThrowsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.Description">
            <summary>Sets the stub of ThrowsConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubThrowsExceptionConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.ThrowsExceptionConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsExceptionConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsExceptionConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsExceptionConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsExceptionConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of ThrowsExceptionConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsExceptionConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsExceptionConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsExceptionConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsExceptionConstraint.DescriptionGet">
            <summary>Sets the stub of ThrowsExceptionConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsExceptionConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsExceptionConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsExceptionConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsExceptionConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of ThrowsExceptionConstraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsExceptionConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsExceptionConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubThrowsExceptionConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsExceptionConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsExceptionConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsExceptionConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsExceptionConstraint.Description">
            <summary>Sets the stub of ThrowsExceptionConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsExceptionConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsExceptionConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsExceptionConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.ThrowsNothingConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of ThrowsNothingConstraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of ThrowsNothingConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.DescriptionGet">
            <summary>Sets the stub of ThrowsNothingConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubThrowsNothingConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.Description">
            <summary>Sets the stub of ThrowsNothingConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsNothingConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubThrowsOperator">
            <summary>Stub type of NUnit.Framework.Constraints.ThrowsOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsOperator.InitializeStub">
            <summary>Initializes a new instance of type StubThrowsOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubThrowsOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of ThrowsOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of ThrowsOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubThrowsOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubThrowsOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubTolerance">
            <summary>Stub type of NUnit.Framework.Constraints.Tolerance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTolerance.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTolerance.InitializeStub">
            <summary>Initializes a new instance of type StubTolerance</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubTolerance.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubTolerance.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubTolerance.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubTrueConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.TrueConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of TrueConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubTrueConstraint.Description as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.DescriptionGet">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.DescriptionSetString">
            <summary>Sets the stub of Constraint.set_Description(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubTrueConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.Description">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubTrueConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubTypeConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.TypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.#ctor(System.Type,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of TypeConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.AttachBackingFieldToDescription">
            <summary>Attaches delegates to emulate StubTypeConstraint.Description as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.DescriptionGet">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.DescriptionSetString">
            <summary>Sets the stub of Constraint.set_Description(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubTypeConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.Matches(System.Object)">
            <summary>Sets the stub of TypeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.MatchesObject">
            <summary>Sets the stub of TypeConstraint.Matches(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.Description">
            <summary>Sets the stub of Constraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubTypeConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.UniqueItemsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of CollectionConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.DescriptionGet">
            <summary>Sets the stub of UniqueItemsConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.GetStringRepresentation">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.GetStringRepresentation01">
            <summary>Sets the stub of Constraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubUniqueItemsConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.Matches(System.Collections.IEnumerable)">
            <summary>Sets the stub of UniqueItemsConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.MatchesIEnumerable">
            <summary>Sets the stub of UniqueItemsConstraint.Matches(IEnumerable actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.Description">
            <summary>Sets the stub of UniqueItemsConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubUniqueItemsConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubWithOperator">
            <summary>Stub type of NUnit.Framework.Constraints.WithOperator</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubWithOperator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubWithOperator.ApplyPrefix(NUnit.Framework.Constraints.IConstraint)">
            <summary>Sets the stub of WithOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubWithOperator.ApplyPrefixIConstraint">
            <summary>Sets the stub of WithOperator.ApplyPrefix(IConstraint constraint)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubWithOperator.InitializeStub">
            <summary>Initializes a new instance of type StubWithOperator</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubWithOperator.LeftPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubWithOperator.Reduce(NUnit.Framework.Constraints.ConstraintBuilder.ConstraintStack)">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubWithOperator.ReduceConstraintBuilderConstraintStack">
            <summary>Sets the stub of PrefixOperator.Reduce(ConstraintStack stack)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubWithOperator.RightPrecedenceGet">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubWithOperator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubWithOperator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubWithOperator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubWithOperator.LeftPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_LeftPrecedence()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubWithOperator.RightPrecedence">
            <summary>Sets the stub of ConstraintOperator.get_RightPrecedence()</summary>
        </member>
        <member name="T:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint">
            <summary>Stub type of NUnit.Framework.Constraints.XmlSerializableConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.ApplyTo``1(``0)">
            <summary>Sets the stub of XmlSerializableConstraint.ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.ApplyTo``1(``0@)">
            <summary>Sets the stub of Constraint.ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.ApplyTo``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.ApplyToOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.ApplyToOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0 actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.ApplyToOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefFunc{``0,NUnit.Framework.Constraints.ConstraintResult})">
            <summary>Sets stubs of ApplyTo(!!0&amp; actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.DescriptionGet">
            <summary>Sets the stub of XmlSerializableConstraint.get_Description()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.DisplayNameGet">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.GetStringRepresentation">
            <summary>Sets the stub of XmlSerializableConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.GetStringRepresentation01">
            <summary>Sets the stub of XmlSerializableConstraint.GetStringRepresentation()</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.GetTestObject``1(NUnit.Framework.Constraints.ActualValueDelegate{``0})">
            <summary>Sets the stub of Constraint.GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.GetTestObjectOf1ActualValueDelegateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ActualValueDelegate{``0},System.Object})">
            <summary>Sets stubs of GetTestObject(ActualValueDelegate`1&lt;!!0&gt; del)</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.InitializeStub">
            <summary>Initializes a new instance of type StubXmlSerializableConstraint</summary>
        </member>
        <member name="M:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.ToString">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.ToString01">
            <summary>Sets the stub of Constraint.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.Description">
            <summary>Sets the stub of XmlSerializableConstraint.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.DisplayName">
            <summary>Sets the stub of Constraint.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Constraints.Fakes.StubXmlSerializableConstraint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimApartmentAttribute">
            <summary>Shim type of NUnit.Framework.ApartmentAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimApartmentAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimApartmentAttribute.#ctor(NUnit.Framework.ApartmentAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimApartmentAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimApartmentAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimApartmentAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimApartmentAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimApartmentAttribute.ConstructorApartmentState">
            <summary>Sets the shim of ApartmentAttribute.ApartmentAttribute(ApartmentState apartmentState)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimApartmentAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimAssert">
            <summary>Shim type of NUnit.Framework.Assert</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.#ctor(NUnit.Framework.Assert)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.CatchAsyncOf1AsyncTestDelegate``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.AsyncTestDelegate,``0})">
            <summary>Sets the shim of Assert.CatchAsync(AsyncTestDelegate code)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.CatchAsyncOf1AsyncTestDelegateStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.AsyncTestDelegate,System.String,System.Object[],``0})">
            <summary>Sets the shim of Assert.CatchAsync(AsyncTestDelegate code, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.CatchOf1TestDelegate``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.TestDelegate,``0})">
            <summary>Sets the shim of Assert.Catch(TestDelegate code)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.CatchOf1TestDelegateStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.TestDelegate,System.String,System.Object[],``0})">
            <summary>Sets the shim of Assert.Catch(TestDelegate code, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.IsAssignableFromOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object})">
            <summary>Sets the shim of Assert.IsAssignableFrom(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.IsAssignableFromOf1ObjectStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object,System.String,System.Object[]})">
            <summary>Sets the shim of Assert.IsAssignableFrom(Object actual, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.IsInstanceOfOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object})">
            <summary>Sets the shim of Assert.IsInstanceOf(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.IsInstanceOfOf1ObjectStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object,System.String,System.Object[]})">
            <summary>Sets the shim of Assert.IsInstanceOf(Object actual, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.IsNotAssignableFromOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object})">
            <summary>Sets the shim of Assert.IsNotAssignableFrom(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.IsNotAssignableFromOf1ObjectStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object,System.String,System.Object[]})">
            <summary>Sets the shim of Assert.IsNotAssignableFrom(Object actual, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.IsNotInstanceOfOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object})">
            <summary>Sets the shim of Assert.IsNotInstanceOf(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.IsNotInstanceOfOf1ObjectStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object,System.String,System.Object[]})">
            <summary>Sets the shim of Assert.IsNotInstanceOf(Object actual, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.ThatOf1ActualValueDelegateOfM0IResolveConstraint``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint})">
            <summary>Sets the shim of Assert.That(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.ThatOf1ActualValueDelegateOfM0IResolveConstraintFuncOfString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint,System.Func{System.String}})">
            <summary>Sets the shim of Assert.That(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr, Func`1&lt;String&gt; getExceptionMessage)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.ThatOf1ActualValueDelegateOfM0IResolveConstraintStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[]})">
            <summary>Sets the shim of Assert.That(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.ThatOf1M0IResolveConstraint``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,NUnit.Framework.Constraints.IResolveConstraint})">
            <summary>Sets the shim of Assert.That(!!0 actual, IResolveConstraint expression)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.ThatOf1M0IResolveConstraintFuncOfString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,NUnit.Framework.Constraints.IResolveConstraint,System.Func{System.String}})">
            <summary>Sets the shim of Assert.That(!!0 actual, IResolveConstraint expression, Func`1&lt;String&gt; getExceptionMessage)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.ThatOf1M0IResolveConstraintStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[]})">
            <summary>Sets the shim of Assert.That(!!0 actual, IResolveConstraint expression, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.ThrowsAsyncOf1AsyncTestDelegate``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.AsyncTestDelegate,``0})">
            <summary>Sets the shim of Assert.ThrowsAsync(AsyncTestDelegate code)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.ThrowsAsyncOf1AsyncTestDelegateStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.AsyncTestDelegate,System.String,System.Object[],``0})">
            <summary>Sets the shim of Assert.ThrowsAsync(AsyncTestDelegate code, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.ThrowsOf1TestDelegate``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.TestDelegate,``0})">
            <summary>Sets the shim of Assert.Throws(TestDelegate code)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssert.ThrowsOf1TestDelegateStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.TestDelegate,System.String,System.Object[],``0})">
            <summary>Sets the shim of Assert.Throws(TestDelegate code, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualDoubleDoubleDouble">
            <summary>Sets the shim of Assert.AreEqual(Double expected, Double actual, Double delta)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualDoubleDoubleDoubleStringObjectArray">
            <summary>Sets the shim of Assert.AreEqual(Double expected, Double actual, Double delta, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualDoubleNullableOfDoubleDouble">
            <summary>Sets the shim of Assert.AreEqual(Double expected, Nullable`1&lt;Double&gt; actual, Double delta)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualDoubleNullableOfDoubleDoubleStringObjectArray">
            <summary>Sets the shim of Assert.AreEqual(Double expected, Nullable`1&lt;Double&gt; actual, Double delta, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualObjectObject">
            <summary>Sets the shim of Assert.AreEqual(Object expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreEqualObjectObjectStringObjectArray">
            <summary>Sets the shim of Assert.AreEqual(Object expected, Object actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualObjectObject">
            <summary>Sets the shim of Assert.AreNotEqual(Object expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotEqualObjectObjectStringObjectArray">
            <summary>Sets the shim of Assert.AreNotEqual(Object expected, Object actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotSameObjectObject">
            <summary>Sets the shim of Assert.AreNotSame(Object expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreNotSameObjectObjectStringObjectArray">
            <summary>Sets the shim of Assert.AreNotSame(Object expected, Object actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreSameObjectObject">
            <summary>Sets the shim of Assert.AreSame(Object expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AreSameObjectObjectStringObjectArray">
            <summary>Sets the shim of Assert.AreSame(Object expected, Object actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.AssertDoublesAreEqualDoubleDoubleDoubleStringObjectArray">
            <summary>Sets the shim of Assert.AssertDoublesAreEqual(Double expected, Double actual, Double delta, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ByValObjectIResolveConstraint">
            <summary>Sets the shim of Assert.ByVal(Object actual, IResolveConstraint expression)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ByValObjectIResolveConstraintStringObjectArray">
            <summary>Sets the shim of Assert.ByVal(Object actual, IResolveConstraint expression, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.CatchAsyncAsyncTestDelegate">
            <summary>Sets the shim of Assert.CatchAsync(AsyncTestDelegate code)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.CatchAsyncAsyncTestDelegateStringObjectArray">
            <summary>Sets the shim of Assert.CatchAsync(AsyncTestDelegate code, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.CatchAsyncTypeAsyncTestDelegate">
            <summary>Sets the shim of Assert.CatchAsync(Type expectedExceptionType, AsyncTestDelegate code)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.CatchAsyncTypeAsyncTestDelegateStringObjectArray">
            <summary>Sets the shim of Assert.CatchAsync(Type expectedExceptionType, AsyncTestDelegate code, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.CatchTestDelegate">
            <summary>Sets the shim of Assert.Catch(TestDelegate code)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.CatchTestDelegateStringObjectArray">
            <summary>Sets the shim of Assert.Catch(TestDelegate code, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.CatchTypeTestDelegate">
            <summary>Sets the shim of Assert.Catch(Type expectedExceptionType, TestDelegate code)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.CatchTypeTestDelegateStringObjectArray">
            <summary>Sets the shim of Assert.Catch(Type expectedExceptionType, TestDelegate code, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.Constructor">
            <summary>Sets the shim of Assert.Assert()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ContainsObjectICollection">
            <summary>Sets the shim of Assert.Contains(Object expected, ICollection actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ContainsObjectICollectionStringObjectArray">
            <summary>Sets the shim of Assert.Contains(Object expected, ICollection actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.DoesNotThrowAsyncAsyncTestDelegate">
            <summary>Sets the shim of Assert.DoesNotThrowAsync(AsyncTestDelegate code)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.DoesNotThrowAsyncAsyncTestDelegateStringObjectArray">
            <summary>Sets the shim of Assert.DoesNotThrowAsync(AsyncTestDelegate code, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.DoesNotThrowTestDelegate">
            <summary>Sets the shim of Assert.DoesNotThrow(TestDelegate code)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.DoesNotThrowTestDelegateStringObjectArray">
            <summary>Sets the shim of Assert.DoesNotThrow(TestDelegate code, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.EqualsObjectObject">
            <summary>Sets the shim of Assert.Equals(Object a, Object b)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.Fail">
            <summary>Sets the shim of Assert.Fail()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.FailString">
            <summary>Sets the shim of Assert.Fail(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.FailStringObjectArray">
            <summary>Sets the shim of Assert.Fail(String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.FalseBoolean">
            <summary>Sets the shim of Assert.False(Boolean condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.FalseBooleanStringObjectArray">
            <summary>Sets the shim of Assert.False(Boolean condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.FalseNullableOfBoolean">
            <summary>Sets the shim of Assert.False(Nullable`1&lt;Boolean&gt; condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.FalseNullableOfBooleanStringObjectArray">
            <summary>Sets the shim of Assert.False(Nullable`1&lt;Boolean&gt; condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GetStackTrace">
            <summary>Sets the shim of Assert.GetStackTrace()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterDecimalDecimal">
            <summary>Sets the shim of Assert.Greater(Decimal arg1, Decimal arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterDecimalDecimalStringObjectArray">
            <summary>Sets the shim of Assert.Greater(Decimal arg1, Decimal arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterDoubleDouble">
            <summary>Sets the shim of Assert.Greater(Double arg1, Double arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterDoubleDoubleStringObjectArray">
            <summary>Sets the shim of Assert.Greater(Double arg1, Double arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterIComparableIComparable">
            <summary>Sets the shim of Assert.Greater(IComparable arg1, IComparable arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterIComparableIComparableStringObjectArray">
            <summary>Sets the shim of Assert.Greater(IComparable arg1, IComparable arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterInt32Int32">
            <summary>Sets the shim of Assert.Greater(Int32 arg1, Int32 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterInt32Int32StringObjectArray">
            <summary>Sets the shim of Assert.Greater(Int32 arg1, Int32 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterInt64Int64">
            <summary>Sets the shim of Assert.Greater(Int64 arg1, Int64 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterInt64Int64StringObjectArray">
            <summary>Sets the shim of Assert.Greater(Int64 arg1, Int64 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualDecimalDecimal">
            <summary>Sets the shim of Assert.GreaterOrEqual(Decimal arg1, Decimal arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualDecimalDecimalStringObjectArray">
            <summary>Sets the shim of Assert.GreaterOrEqual(Decimal arg1, Decimal arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualDoubleDouble">
            <summary>Sets the shim of Assert.GreaterOrEqual(Double arg1, Double arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualDoubleDoubleStringObjectArray">
            <summary>Sets the shim of Assert.GreaterOrEqual(Double arg1, Double arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualIComparableIComparable">
            <summary>Sets the shim of Assert.GreaterOrEqual(IComparable arg1, IComparable arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualIComparableIComparableStringObjectArray">
            <summary>Sets the shim of Assert.GreaterOrEqual(IComparable arg1, IComparable arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualInt32Int32">
            <summary>Sets the shim of Assert.GreaterOrEqual(Int32 arg1, Int32 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualInt32Int32StringObjectArray">
            <summary>Sets the shim of Assert.GreaterOrEqual(Int32 arg1, Int32 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualInt64Int64">
            <summary>Sets the shim of Assert.GreaterOrEqual(Int64 arg1, Int64 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualInt64Int64StringObjectArray">
            <summary>Sets the shim of Assert.GreaterOrEqual(Int64 arg1, Int64 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualSingleSingle">
            <summary>Sets the shim of Assert.GreaterOrEqual(Single arg1, Single arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualSingleSingleStringObjectArray">
            <summary>Sets the shim of Assert.GreaterOrEqual(Single arg1, Single arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualUInt32UInt32">
            <summary>Sets the shim of Assert.GreaterOrEqual(UInt32 arg1, UInt32 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualUInt32UInt32StringObjectArray">
            <summary>Sets the shim of Assert.GreaterOrEqual(UInt32 arg1, UInt32 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualUInt64UInt64">
            <summary>Sets the shim of Assert.GreaterOrEqual(UInt64 arg1, UInt64 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterOrEqualUInt64UInt64StringObjectArray">
            <summary>Sets the shim of Assert.GreaterOrEqual(UInt64 arg1, UInt64 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterSingleSingle">
            <summary>Sets the shim of Assert.Greater(Single arg1, Single arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterSingleSingleStringObjectArray">
            <summary>Sets the shim of Assert.Greater(Single arg1, Single arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterUInt32UInt32">
            <summary>Sets the shim of Assert.Greater(UInt32 arg1, UInt32 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterUInt32UInt32StringObjectArray">
            <summary>Sets the shim of Assert.Greater(UInt32 arg1, UInt32 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterUInt64UInt64">
            <summary>Sets the shim of Assert.Greater(UInt64 arg1, UInt64 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.GreaterUInt64UInt64StringObjectArray">
            <summary>Sets the shim of Assert.Greater(UInt64 arg1, UInt64 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.Ignore">
            <summary>Sets the shim of Assert.Ignore()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IgnoreString">
            <summary>Sets the shim of Assert.Ignore(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IgnoreStringObjectArray">
            <summary>Sets the shim of Assert.Ignore(String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.Inconclusive">
            <summary>Sets the shim of Assert.Inconclusive()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.InconclusiveString">
            <summary>Sets the shim of Assert.Inconclusive(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.InconclusiveStringObjectArray">
            <summary>Sets the shim of Assert.Inconclusive(String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IncrementAssertCount">
            <summary>Sets the shim of Assert.IncrementAssertCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsAssignableFromTypeObject">
            <summary>Sets the shim of Assert.IsAssignableFrom(Type expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsAssignableFromTypeObjectStringObjectArray">
            <summary>Sets the shim of Assert.IsAssignableFrom(Type expected, Object actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsEmptyIEnumerable">
            <summary>Sets the shim of Assert.IsEmpty(IEnumerable collection)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsEmptyIEnumerableStringObjectArray">
            <summary>Sets the shim of Assert.IsEmpty(IEnumerable collection, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsEmptyString">
            <summary>Sets the shim of Assert.IsEmpty(String aString)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsEmptyStringStringObjectArray">
            <summary>Sets the shim of Assert.IsEmpty(String aString, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsFalseBoolean">
            <summary>Sets the shim of Assert.IsFalse(Boolean condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsFalseBooleanStringObjectArray">
            <summary>Sets the shim of Assert.IsFalse(Boolean condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsFalseNullableOfBoolean">
            <summary>Sets the shim of Assert.IsFalse(Nullable`1&lt;Boolean&gt; condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsFalseNullableOfBooleanStringObjectArray">
            <summary>Sets the shim of Assert.IsFalse(Nullable`1&lt;Boolean&gt; condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsInstanceOfTypeObject">
            <summary>Sets the shim of Assert.IsInstanceOf(Type expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsInstanceOfTypeObjectStringObjectArray">
            <summary>Sets the shim of Assert.IsInstanceOf(Type expected, Object actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNaNDouble">
            <summary>Sets the shim of Assert.IsNaN(Double aDouble)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNaNDoubleStringObjectArray">
            <summary>Sets the shim of Assert.IsNaN(Double aDouble, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNaNNullableOfDouble">
            <summary>Sets the shim of Assert.IsNaN(Nullable`1&lt;Double&gt; aDouble)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNaNNullableOfDoubleStringObjectArray">
            <summary>Sets the shim of Assert.IsNaN(Nullable`1&lt;Double&gt; aDouble, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotAssignableFromTypeObject">
            <summary>Sets the shim of Assert.IsNotAssignableFrom(Type expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotAssignableFromTypeObjectStringObjectArray">
            <summary>Sets the shim of Assert.IsNotAssignableFrom(Type expected, Object actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotEmptyIEnumerable">
            <summary>Sets the shim of Assert.IsNotEmpty(IEnumerable collection)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotEmptyIEnumerableStringObjectArray">
            <summary>Sets the shim of Assert.IsNotEmpty(IEnumerable collection, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotEmptyString">
            <summary>Sets the shim of Assert.IsNotEmpty(String aString)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotEmptyStringStringObjectArray">
            <summary>Sets the shim of Assert.IsNotEmpty(String aString, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotInstanceOfTypeObject">
            <summary>Sets the shim of Assert.IsNotInstanceOf(Type expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotInstanceOfTypeObjectStringObjectArray">
            <summary>Sets the shim of Assert.IsNotInstanceOf(Type expected, Object actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotNullObject">
            <summary>Sets the shim of Assert.IsNotNull(Object anObject)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNotNullObjectStringObjectArray">
            <summary>Sets the shim of Assert.IsNotNull(Object anObject, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNullObject">
            <summary>Sets the shim of Assert.IsNull(Object anObject)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsNullObjectStringObjectArray">
            <summary>Sets the shim of Assert.IsNull(Object anObject, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsTrueBoolean">
            <summary>Sets the shim of Assert.IsTrue(Boolean condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsTrueBooleanStringObjectArray">
            <summary>Sets the shim of Assert.IsTrue(Boolean condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsTrueNullableOfBoolean">
            <summary>Sets the shim of Assert.IsTrue(Nullable`1&lt;Boolean&gt; condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IsTrueNullableOfBooleanStringObjectArray">
            <summary>Sets the shim of Assert.IsTrue(Nullable`1&lt;Boolean&gt; condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.IssueWarningString">
            <summary>Sets the shim of Assert.IssueWarning(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessDecimalDecimal">
            <summary>Sets the shim of Assert.Less(Decimal arg1, Decimal arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessDecimalDecimalStringObjectArray">
            <summary>Sets the shim of Assert.Less(Decimal arg1, Decimal arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessDoubleDouble">
            <summary>Sets the shim of Assert.Less(Double arg1, Double arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessDoubleDoubleStringObjectArray">
            <summary>Sets the shim of Assert.Less(Double arg1, Double arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessIComparableIComparable">
            <summary>Sets the shim of Assert.Less(IComparable arg1, IComparable arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessIComparableIComparableStringObjectArray">
            <summary>Sets the shim of Assert.Less(IComparable arg1, IComparable arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessInt32Int32">
            <summary>Sets the shim of Assert.Less(Int32 arg1, Int32 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessInt32Int32StringObjectArray">
            <summary>Sets the shim of Assert.Less(Int32 arg1, Int32 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessInt64Int64">
            <summary>Sets the shim of Assert.Less(Int64 arg1, Int64 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessInt64Int64StringObjectArray">
            <summary>Sets the shim of Assert.Less(Int64 arg1, Int64 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualDecimalDecimal">
            <summary>Sets the shim of Assert.LessOrEqual(Decimal arg1, Decimal arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualDecimalDecimalStringObjectArray">
            <summary>Sets the shim of Assert.LessOrEqual(Decimal arg1, Decimal arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualDoubleDouble">
            <summary>Sets the shim of Assert.LessOrEqual(Double arg1, Double arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualDoubleDoubleStringObjectArray">
            <summary>Sets the shim of Assert.LessOrEqual(Double arg1, Double arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualIComparableIComparable">
            <summary>Sets the shim of Assert.LessOrEqual(IComparable arg1, IComparable arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualIComparableIComparableStringObjectArray">
            <summary>Sets the shim of Assert.LessOrEqual(IComparable arg1, IComparable arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualInt32Int32">
            <summary>Sets the shim of Assert.LessOrEqual(Int32 arg1, Int32 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualInt32Int32StringObjectArray">
            <summary>Sets the shim of Assert.LessOrEqual(Int32 arg1, Int32 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualInt64Int64">
            <summary>Sets the shim of Assert.LessOrEqual(Int64 arg1, Int64 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualInt64Int64StringObjectArray">
            <summary>Sets the shim of Assert.LessOrEqual(Int64 arg1, Int64 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualSingleSingle">
            <summary>Sets the shim of Assert.LessOrEqual(Single arg1, Single arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualSingleSingleStringObjectArray">
            <summary>Sets the shim of Assert.LessOrEqual(Single arg1, Single arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualUInt32UInt32">
            <summary>Sets the shim of Assert.LessOrEqual(UInt32 arg1, UInt32 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualUInt32UInt32StringObjectArray">
            <summary>Sets the shim of Assert.LessOrEqual(UInt32 arg1, UInt32 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualUInt64UInt64">
            <summary>Sets the shim of Assert.LessOrEqual(UInt64 arg1, UInt64 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessOrEqualUInt64UInt64StringObjectArray">
            <summary>Sets the shim of Assert.LessOrEqual(UInt64 arg1, UInt64 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessSingleSingle">
            <summary>Sets the shim of Assert.Less(Single arg1, Single arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessSingleSingleStringObjectArray">
            <summary>Sets the shim of Assert.Less(Single arg1, Single arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessUInt32UInt32">
            <summary>Sets the shim of Assert.Less(UInt32 arg1, UInt32 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessUInt32UInt32StringObjectArray">
            <summary>Sets the shim of Assert.Less(UInt32 arg1, UInt32 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessUInt64UInt64">
            <summary>Sets the shim of Assert.Less(UInt64 arg1, UInt64 arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.LessUInt64UInt64StringObjectArray">
            <summary>Sets the shim of Assert.Less(UInt64 arg1, UInt64 arg2, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.MultipleTestDelegate">
            <summary>Sets the shim of Assert.Multiple(TestDelegate testDelegate)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NegativeDecimal">
            <summary>Sets the shim of Assert.Negative(Decimal actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NegativeDecimalStringObjectArray">
            <summary>Sets the shim of Assert.Negative(Decimal actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NegativeDouble">
            <summary>Sets the shim of Assert.Negative(Double actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NegativeDoubleStringObjectArray">
            <summary>Sets the shim of Assert.Negative(Double actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NegativeInt32">
            <summary>Sets the shim of Assert.Negative(Int32 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NegativeInt32StringObjectArray">
            <summary>Sets the shim of Assert.Negative(Int32 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NegativeInt64">
            <summary>Sets the shim of Assert.Negative(Int64 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NegativeInt64StringObjectArray">
            <summary>Sets the shim of Assert.Negative(Int64 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NegativeSingle">
            <summary>Sets the shim of Assert.Negative(Single actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NegativeSingleStringObjectArray">
            <summary>Sets the shim of Assert.Negative(Single actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NegativeUInt32">
            <summary>Sets the shim of Assert.Negative(UInt32 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NegativeUInt32StringObjectArray">
            <summary>Sets the shim of Assert.Negative(UInt32 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NegativeUInt64">
            <summary>Sets the shim of Assert.Negative(UInt64 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NegativeUInt64StringObjectArray">
            <summary>Sets the shim of Assert.Negative(UInt64 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NotNullObject">
            <summary>Sets the shim of Assert.NotNull(Object anObject)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NotNullObjectStringObjectArray">
            <summary>Sets the shim of Assert.NotNull(Object anObject, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NotZeroDecimal">
            <summary>Sets the shim of Assert.NotZero(Decimal actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NotZeroDecimalStringObjectArray">
            <summary>Sets the shim of Assert.NotZero(Decimal actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NotZeroDouble">
            <summary>Sets the shim of Assert.NotZero(Double actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NotZeroDoubleStringObjectArray">
            <summary>Sets the shim of Assert.NotZero(Double actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NotZeroInt32">
            <summary>Sets the shim of Assert.NotZero(Int32 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NotZeroInt32StringObjectArray">
            <summary>Sets the shim of Assert.NotZero(Int32 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NotZeroInt64">
            <summary>Sets the shim of Assert.NotZero(Int64 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NotZeroInt64StringObjectArray">
            <summary>Sets the shim of Assert.NotZero(Int64 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NotZeroSingle">
            <summary>Sets the shim of Assert.NotZero(Single actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NotZeroSingleStringObjectArray">
            <summary>Sets the shim of Assert.NotZero(Single actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NotZeroUInt32">
            <summary>Sets the shim of Assert.NotZero(UInt32 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NotZeroUInt32StringObjectArray">
            <summary>Sets the shim of Assert.NotZero(UInt32 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NotZeroUInt64">
            <summary>Sets the shim of Assert.NotZero(UInt64 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NotZeroUInt64StringObjectArray">
            <summary>Sets the shim of Assert.NotZero(UInt64 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NullObject">
            <summary>Sets the shim of Assert.Null(Object anObject)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.NullObjectStringObjectArray">
            <summary>Sets the shim of Assert.Null(Object anObject, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.Pass">
            <summary>Sets the shim of Assert.Pass()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.PassString">
            <summary>Sets the shim of Assert.Pass(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.PassStringObjectArray">
            <summary>Sets the shim of Assert.Pass(String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.PositiveDecimal">
            <summary>Sets the shim of Assert.Positive(Decimal actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.PositiveDecimalStringObjectArray">
            <summary>Sets the shim of Assert.Positive(Decimal actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.PositiveDouble">
            <summary>Sets the shim of Assert.Positive(Double actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.PositiveDoubleStringObjectArray">
            <summary>Sets the shim of Assert.Positive(Double actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.PositiveInt32">
            <summary>Sets the shim of Assert.Positive(Int32 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.PositiveInt32StringObjectArray">
            <summary>Sets the shim of Assert.Positive(Int32 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.PositiveInt64">
            <summary>Sets the shim of Assert.Positive(Int64 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.PositiveInt64StringObjectArray">
            <summary>Sets the shim of Assert.Positive(Int64 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.PositiveSingle">
            <summary>Sets the shim of Assert.Positive(Single actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.PositiveSingleStringObjectArray">
            <summary>Sets the shim of Assert.Positive(Single actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.PositiveUInt32">
            <summary>Sets the shim of Assert.Positive(UInt32 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.PositiveUInt32StringObjectArray">
            <summary>Sets the shim of Assert.Positive(UInt32 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.PositiveUInt64">
            <summary>Sets the shim of Assert.Positive(UInt64 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.PositiveUInt64StringObjectArray">
            <summary>Sets the shim of Assert.Positive(UInt64 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ReferenceEqualsObjectObject">
            <summary>Sets the shim of Assert.ReferenceEquals(Object a, Object b)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ReportFailureConstraintResultString">
            <summary>Sets the shim of Assert.ReportFailure(ConstraintResult result, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ReportFailureConstraintResultStringObjectArray">
            <summary>Sets the shim of Assert.ReportFailure(ConstraintResult result, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ReportFailureString">
            <summary>Sets the shim of Assert.ReportFailure(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.StaticConstructor">
            <summary>Sets the shim of Assert.Assert()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThatBoolean">
            <summary>Sets the shim of Assert.That(Boolean condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThatBooleanFuncOfString">
            <summary>Sets the shim of Assert.That(Boolean condition, Func`1&lt;String&gt; getExceptionMessage)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThatBooleanStringObjectArray">
            <summary>Sets the shim of Assert.That(Boolean condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThatFuncOfBoolean">
            <summary>Sets the shim of Assert.That(Func`1&lt;Boolean&gt; condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThatFuncOfBooleanFuncOfString">
            <summary>Sets the shim of Assert.That(Func`1&lt;Boolean&gt; condition, Func`1&lt;String&gt; getExceptionMessage)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThatFuncOfBooleanStringObjectArray">
            <summary>Sets the shim of Assert.That(Func`1&lt;Boolean&gt; condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThatTestDelegateIResolveConstraint">
            <summary>Sets the shim of Assert.That(TestDelegate code, IResolveConstraint constraint)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThatTestDelegateIResolveConstraintFuncOfString">
            <summary>Sets the shim of Assert.That(TestDelegate code, IResolveConstraint constraint, Func`1&lt;String&gt; getExceptionMessage)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThatTestDelegateIResolveConstraintStringObjectArray">
            <summary>Sets the shim of Assert.That(TestDelegate code, IResolveConstraint constraint, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThrowsAsyncIResolveConstraintAsyncTestDelegate">
            <summary>Sets the shim of Assert.ThrowsAsync(IResolveConstraint expression, AsyncTestDelegate code)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThrowsAsyncIResolveConstraintAsyncTestDelegateStringObjectArray">
            <summary>Sets the shim of Assert.ThrowsAsync(IResolveConstraint expression, AsyncTestDelegate code, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThrowsAsyncTypeAsyncTestDelegate">
            <summary>Sets the shim of Assert.ThrowsAsync(Type expectedExceptionType, AsyncTestDelegate code)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThrowsAsyncTypeAsyncTestDelegateStringObjectArray">
            <summary>Sets the shim of Assert.ThrowsAsync(Type expectedExceptionType, AsyncTestDelegate code, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThrowsIResolveConstraintTestDelegate">
            <summary>Sets the shim of Assert.Throws(IResolveConstraint expression, TestDelegate code)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThrowsIResolveConstraintTestDelegateStringObjectArray">
            <summary>Sets the shim of Assert.Throws(IResolveConstraint expression, TestDelegate code, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThrowsTypeTestDelegate">
            <summary>Sets the shim of Assert.Throws(Type expectedExceptionType, TestDelegate code)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ThrowsTypeTestDelegateStringObjectArray">
            <summary>Sets the shim of Assert.Throws(Type expectedExceptionType, TestDelegate code, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.TrueBoolean">
            <summary>Sets the shim of Assert.True(Boolean condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.TrueBooleanStringObjectArray">
            <summary>Sets the shim of Assert.True(Boolean condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.TrueNullableOfBoolean">
            <summary>Sets the shim of Assert.True(Nullable`1&lt;Boolean&gt; condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.TrueNullableOfBooleanStringObjectArray">
            <summary>Sets the shim of Assert.True(Nullable`1&lt;Boolean&gt; condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.WarnString">
            <summary>Sets the shim of Assert.Warn(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.WarnStringObjectArray">
            <summary>Sets the shim of Assert.Warn(String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ZeroDecimal">
            <summary>Sets the shim of Assert.Zero(Decimal actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ZeroDecimalStringObjectArray">
            <summary>Sets the shim of Assert.Zero(Decimal actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ZeroDouble">
            <summary>Sets the shim of Assert.Zero(Double actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ZeroDoubleStringObjectArray">
            <summary>Sets the shim of Assert.Zero(Double actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ZeroInt32">
            <summary>Sets the shim of Assert.Zero(Int32 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ZeroInt32StringObjectArray">
            <summary>Sets the shim of Assert.Zero(Int32 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ZeroInt64">
            <summary>Sets the shim of Assert.Zero(Int64 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ZeroInt64StringObjectArray">
            <summary>Sets the shim of Assert.Zero(Int64 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ZeroSingle">
            <summary>Sets the shim of Assert.Zero(Single actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ZeroSingleStringObjectArray">
            <summary>Sets the shim of Assert.Zero(Single actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ZeroUInt32">
            <summary>Sets the shim of Assert.Zero(UInt32 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ZeroUInt32StringObjectArray">
            <summary>Sets the shim of Assert.Zero(UInt32 actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ZeroUInt64">
            <summary>Sets the shim of Assert.Zero(UInt64 actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssert.ZeroUInt64StringObjectArray">
            <summary>Sets the shim of Assert.Zero(UInt64 actual, String message, Object[] args)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimAssert.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimAssertionException">
            <summary>Shim type of NUnit.Framework.AssertionException</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssertionException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssertionException.#ctor(NUnit.Framework.AssertionException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssertionException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssertionException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssertionException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of AssertionException.AssertionException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionException.ConstructorString">
            <summary>Sets the shim of AssertionException.AssertionException(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionException.ConstructorStringException">
            <summary>Sets the shim of AssertionException.AssertionException(String message, Exception inner)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionException.ResultStateGet">
            <summary>Sets the shim of AssertionException.get_ResultState()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimAssertionException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssertionException.AllInstances.ResultStateGet">
            <summary>Sets the shim of AssertionException.get_ResultState()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimAssume">
            <summary>Shim type of NUnit.Framework.Assume</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssume.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssume.#ctor(NUnit.Framework.Assume)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssume.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssume.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssume.ThatOf1ActualValueDelegateOfM0IResolveConstraint``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint})">
            <summary>Sets the shim of Assume.That(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssume.ThatOf1ActualValueDelegateOfM0IResolveConstraintFuncOfString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint,System.Func{System.String}})">
            <summary>Sets the shim of Assume.That(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr, Func`1&lt;String&gt; getExceptionMessage)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssume.ThatOf1ActualValueDelegateOfM0IResolveConstraintStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[]})">
            <summary>Sets the shim of Assume.That(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssume.ThatOf1M0IResolveConstraint``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,NUnit.Framework.Constraints.IResolveConstraint})">
            <summary>Sets the shim of Assume.That(!!0 actual, IResolveConstraint expression)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssume.ThatOf1M0IResolveConstraintFuncOfString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,NUnit.Framework.Constraints.IResolveConstraint,System.Func{System.String}})">
            <summary>Sets the shim of Assume.That(!!0 actual, IResolveConstraint expression, Func`1&lt;String&gt; getExceptionMessage)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAssume.ThatOf1M0IResolveConstraintStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[]})">
            <summary>Sets the shim of Assume.That(!!0 actual, IResolveConstraint expression, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.CheckMultipleAssertLevel">
            <summary>Sets the shim of Assume.CheckMultipleAssertLevel()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.Constructor">
            <summary>Sets the shim of Assume.Assume()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.EqualsObjectObject">
            <summary>Sets the shim of Assume.Equals(Object a, Object b)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.ReferenceEqualsObjectObject">
            <summary>Sets the shim of Assume.ReferenceEquals(Object a, Object b)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.ReportFailureConstraintResultStringObjectArray">
            <summary>Sets the shim of Assume.ReportFailure(ConstraintResult result, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.ThatBoolean">
            <summary>Sets the shim of Assume.That(Boolean condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.ThatBooleanFuncOfString">
            <summary>Sets the shim of Assume.That(Boolean condition, Func`1&lt;String&gt; getExceptionMessage)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.ThatBooleanStringObjectArray">
            <summary>Sets the shim of Assume.That(Boolean condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.ThatFuncOfBoolean">
            <summary>Sets the shim of Assume.That(Func`1&lt;Boolean&gt; condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.ThatFuncOfBooleanFuncOfString">
            <summary>Sets the shim of Assume.That(Func`1&lt;Boolean&gt; condition, Func`1&lt;String&gt; getExceptionMessage)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.ThatFuncOfBooleanStringObjectArray">
            <summary>Sets the shim of Assume.That(Func`1&lt;Boolean&gt; condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAssume.ThatTestDelegateIResolveConstraint">
            <summary>Sets the shim of Assume.That(TestDelegate code, IResolveConstraint constraint)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimAssume.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimAuthorAttribute">
            <summary>Shim type of NUnit.Framework.AuthorAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAuthorAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAuthorAttribute.#ctor(NUnit.Framework.AuthorAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAuthorAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAuthorAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimAuthorAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAuthorAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAuthorAttribute.ConstructorString">
            <summary>Sets the shim of AuthorAttribute.AuthorAttribute(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimAuthorAttribute.ConstructorStringString">
            <summary>Sets the shim of AuthorAttribute.AuthorAttribute(String name, String email)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimAuthorAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimCategoryAttribute">
            <summary>Shim type of NUnit.Framework.CategoryAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCategoryAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCategoryAttribute.#ctor(NUnit.Framework.CategoryAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCategoryAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCategoryAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCategoryAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCategoryAttribute.ApplyToTestTest">
            <summary>Sets the shim of CategoryAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCategoryAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCategoryAttribute.Constructor">
            <summary>Sets the shim of CategoryAttribute.CategoryAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCategoryAttribute.ConstructorString">
            <summary>Sets the shim of CategoryAttribute.CategoryAttribute(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCategoryAttribute.NameGet">
            <summary>Sets the shim of CategoryAttribute.get_Name()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimCategoryAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCategoryAttribute.AllInstances.ApplyToTestTest">
            <summary>Sets the shim of CategoryAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCategoryAttribute.AllInstances.NameGet">
            <summary>Sets the shim of CategoryAttribute.get_Name()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimCollectionAssert">
            <summary>Shim type of NUnit.Framework.CollectionAssert</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCollectionAssert.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCollectionAssert.#ctor(NUnit.Framework.CollectionAssert)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCollectionAssert.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCollectionAssert.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AllItemsAreInstancesOfTypeIEnumerableType">
            <summary>Sets the shim of CollectionAssert.AllItemsAreInstancesOfType(IEnumerable collection, Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AllItemsAreInstancesOfTypeIEnumerableTypeStringObjectArray">
            <summary>Sets the shim of CollectionAssert.AllItemsAreInstancesOfType(IEnumerable collection, Type expectedType, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AllItemsAreNotNullIEnumerable">
            <summary>Sets the shim of CollectionAssert.AllItemsAreNotNull(IEnumerable collection)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AllItemsAreNotNullIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.AllItemsAreNotNull(IEnumerable collection, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AllItemsAreUniqueIEnumerable">
            <summary>Sets the shim of CollectionAssert.AllItemsAreUnique(IEnumerable collection)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AllItemsAreUniqueIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.AllItemsAreUnique(IEnumerable collection, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreEqualIEnumerableIEnumerable">
            <summary>Sets the shim of CollectionAssert.AreEqual(IEnumerable expected, IEnumerable actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreEqualIEnumerableIEnumerableIComparer">
            <summary>Sets the shim of CollectionAssert.AreEqual(IEnumerable expected, IEnumerable actual, IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreEqualIEnumerableIEnumerableIComparerStringObjectArray">
            <summary>Sets the shim of CollectionAssert.AreEqual(IEnumerable expected, IEnumerable actual, IComparer comparer, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreEqualIEnumerableIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.AreEqual(IEnumerable expected, IEnumerable actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreEquivalentIEnumerableIEnumerable">
            <summary>Sets the shim of CollectionAssert.AreEquivalent(IEnumerable expected, IEnumerable actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreEquivalentIEnumerableIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.AreEquivalent(IEnumerable expected, IEnumerable actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreNotEqualIEnumerableIEnumerable">
            <summary>Sets the shim of CollectionAssert.AreNotEqual(IEnumerable expected, IEnumerable actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreNotEqualIEnumerableIEnumerableIComparer">
            <summary>Sets the shim of CollectionAssert.AreNotEqual(IEnumerable expected, IEnumerable actual, IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreNotEqualIEnumerableIEnumerableIComparerStringObjectArray">
            <summary>Sets the shim of CollectionAssert.AreNotEqual(IEnumerable expected, IEnumerable actual, IComparer comparer, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreNotEqualIEnumerableIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.AreNotEqual(IEnumerable expected, IEnumerable actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreNotEquivalentIEnumerableIEnumerable">
            <summary>Sets the shim of CollectionAssert.AreNotEquivalent(IEnumerable expected, IEnumerable actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.AreNotEquivalentIEnumerableIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.AreNotEquivalent(IEnumerable expected, IEnumerable actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.Constructor">
            <summary>Sets the shim of CollectionAssert.CollectionAssert()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.ContainsIEnumerableObject">
            <summary>Sets the shim of CollectionAssert.Contains(IEnumerable collection, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.ContainsIEnumerableObjectStringObjectArray">
            <summary>Sets the shim of CollectionAssert.Contains(IEnumerable collection, Object actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.DoesNotContainIEnumerableObject">
            <summary>Sets the shim of CollectionAssert.DoesNotContain(IEnumerable collection, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.DoesNotContainIEnumerableObjectStringObjectArray">
            <summary>Sets the shim of CollectionAssert.DoesNotContain(IEnumerable collection, Object actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.EqualsObjectObject">
            <summary>Sets the shim of CollectionAssert.Equals(Object a, Object b)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsEmptyIEnumerable">
            <summary>Sets the shim of CollectionAssert.IsEmpty(IEnumerable collection)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsEmptyIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.IsEmpty(IEnumerable collection, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsNotEmptyIEnumerable">
            <summary>Sets the shim of CollectionAssert.IsNotEmpty(IEnumerable collection)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsNotEmptyIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.IsNotEmpty(IEnumerable collection, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsNotSubsetOfIEnumerableIEnumerable">
            <summary>Sets the shim of CollectionAssert.IsNotSubsetOf(IEnumerable subset, IEnumerable superset)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsNotSubsetOfIEnumerableIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.IsNotSubsetOf(IEnumerable subset, IEnumerable superset, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsNotSupersetOfIEnumerableIEnumerable">
            <summary>Sets the shim of CollectionAssert.IsNotSupersetOf(IEnumerable superset, IEnumerable subset)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsNotSupersetOfIEnumerableIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.IsNotSupersetOf(IEnumerable superset, IEnumerable subset, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsOrderedIEnumerable">
            <summary>Sets the shim of CollectionAssert.IsOrdered(IEnumerable collection)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsOrderedIEnumerableIComparer">
            <summary>Sets the shim of CollectionAssert.IsOrdered(IEnumerable collection, IComparer comparer)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsOrderedIEnumerableIComparerStringObjectArray">
            <summary>Sets the shim of CollectionAssert.IsOrdered(IEnumerable collection, IComparer comparer, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsOrderedIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.IsOrdered(IEnumerable collection, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsSubsetOfIEnumerableIEnumerable">
            <summary>Sets the shim of CollectionAssert.IsSubsetOf(IEnumerable subset, IEnumerable superset)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsSubsetOfIEnumerableIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.IsSubsetOf(IEnumerable subset, IEnumerable superset, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsSupersetOfIEnumerableIEnumerable">
            <summary>Sets the shim of CollectionAssert.IsSupersetOf(IEnumerable superset, IEnumerable subset)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.IsSupersetOfIEnumerableIEnumerableStringObjectArray">
            <summary>Sets the shim of CollectionAssert.IsSupersetOf(IEnumerable superset, IEnumerable subset, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCollectionAssert.ReferenceEqualsObjectObject">
            <summary>Sets the shim of CollectionAssert.ReferenceEquals(Object a, Object b)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimCollectionAssert.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimCombinatorialAttribute">
            <summary>Shim type of NUnit.Framework.CombinatorialAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCombinatorialAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCombinatorialAttribute.#ctor(NUnit.Framework.CombinatorialAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCombinatorialAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCombinatorialAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCombinatorialAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCombinatorialAttribute.Bind(NUnit.Framework.Interfaces.ITestBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCombinatorialAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCombinatorialAttribute.Constructor">
            <summary>Sets the shim of CombinatorialAttribute.CombinatorialAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimCombinatorialAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimCombiningStrategyAttribute">
            <summary>Shim type of NUnit.Framework.CombiningStrategyAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCombiningStrategyAttribute.#ctor(NUnit.Framework.CombiningStrategyAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCombiningStrategyAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCombiningStrategyAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCombiningStrategyAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCombiningStrategyAttribute.Bind(NUnit.Framework.Interfaces.ITestBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCombiningStrategyAttribute.ApplyToTestTest">
            <summary>Sets the shim of CombiningStrategyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCombiningStrategyAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCombiningStrategyAttribute.BuildFromIMethodInfoTest">
            <summary>Sets the shim of CombiningStrategyAttribute.BuildFrom(IMethodInfo method, Test suite)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCombiningStrategyAttribute.ConstructorICombiningStrategyIParameterDataProvider">
            <summary>Sets the shim of CombiningStrategyAttribute.CombiningStrategyAttribute(ICombiningStrategy strategy, IParameterDataProvider provider)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCombiningStrategyAttribute.ConstructorObjectObject">
            <summary>Sets the shim of CombiningStrategyAttribute.CombiningStrategyAttribute(Object strategy, Object provider)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimCombiningStrategyAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCombiningStrategyAttribute.AllInstances.ApplyToTestTest">
            <summary>Sets the shim of CombiningStrategyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCombiningStrategyAttribute.AllInstances.BuildFromIMethodInfoTest">
            <summary>Sets the shim of CombiningStrategyAttribute.BuildFrom(IMethodInfo method, Test suite)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimContains">
            <summary>Shim type of NUnit.Framework.Contains</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimContains.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimContains.#ctor(NUnit.Framework.Contains)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimContains.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimContains.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimContains.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimContains.Constructor">
            <summary>Sets the shim of Contains.Contains()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimContains.ItemObject">
            <summary>Sets the shim of Contains.Item(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimContains.KeyObject">
            <summary>Sets the shim of Contains.Key(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimContains.SubstringString">
            <summary>Sets the shim of Contains.Substring(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimContains.ValueObject">
            <summary>Sets the shim of Contains.Value(Object expected)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimContains.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimCultureAttribute">
            <summary>Shim type of NUnit.Framework.CultureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCultureAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCultureAttribute.#ctor(NUnit.Framework.CultureAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCultureAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCultureAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimCultureAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCultureAttribute.ApplyToTestTest">
            <summary>Sets the shim of CultureAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCultureAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCultureAttribute.Constructor">
            <summary>Sets the shim of CultureAttribute.CultureAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCultureAttribute.ConstructorString">
            <summary>Sets the shim of CultureAttribute.CultureAttribute(String cultures)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCultureAttribute.IsCultureSupported">
            <summary>Sets the shim of CultureAttribute.IsCultureSupported()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCultureAttribute.IsCultureSupportedString">
            <summary>Sets the shim of CultureAttribute.IsCultureSupported(String culture)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCultureAttribute.IsCultureSupportedStringArray">
            <summary>Sets the shim of CultureAttribute.IsCultureSupported(String[] cultures)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimCultureAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCultureAttribute.AllInstances.ApplyToTestTest">
            <summary>Sets the shim of CultureAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCultureAttribute.AllInstances.IsCultureSupported">
            <summary>Sets the shim of CultureAttribute.IsCultureSupported()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCultureAttribute.AllInstances.IsCultureSupportedString">
            <summary>Sets the shim of CultureAttribute.IsCultureSupported(String culture)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimCultureAttribute.AllInstances.IsCultureSupportedStringArray">
            <summary>Sets the shim of CultureAttribute.IsCultureSupported(String[] cultures)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimDataAttribute">
            <summary>Shim type of NUnit.Framework.DataAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDataAttribute.#ctor(NUnit.Framework.DataAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDataAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDataAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDataAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDataAttribute.Constructor">
            <summary>Sets the shim of DataAttribute.DataAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimDataAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimDatapointAttribute">
            <summary>Shim type of NUnit.Framework.DatapointAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDatapointAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDatapointAttribute.#ctor(NUnit.Framework.DatapointAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDatapointAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDatapointAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDatapointAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDatapointAttribute.Constructor">
            <summary>Sets the shim of DatapointAttribute.DatapointAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimDatapointAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimDatapointSourceAttribute">
            <summary>Shim type of NUnit.Framework.DatapointSourceAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDatapointSourceAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDatapointSourceAttribute.#ctor(NUnit.Framework.DatapointSourceAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDatapointSourceAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDatapointSourceAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDatapointSourceAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDatapointSourceAttribute.Constructor">
            <summary>Sets the shim of DatapointSourceAttribute.DatapointSourceAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimDatapointSourceAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimDatapointsAttribute">
            <summary>Shim type of NUnit.Framework.DatapointsAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDatapointsAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDatapointsAttribute.#ctor(NUnit.Framework.DatapointsAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDatapointsAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDatapointsAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDatapointsAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDatapointsAttribute.Constructor">
            <summary>Sets the shim of DatapointsAttribute.DatapointsAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimDatapointsAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimDefaultFloatingPointToleranceAttribute">
            <summary>Shim type of NUnit.Framework.DefaultFloatingPointToleranceAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDefaultFloatingPointToleranceAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDefaultFloatingPointToleranceAttribute.#ctor(NUnit.Framework.DefaultFloatingPointToleranceAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDefaultFloatingPointToleranceAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDefaultFloatingPointToleranceAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDefaultFloatingPointToleranceAttribute.Bind(NUnit.Framework.Interfaces.IApplyToContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDefaultFloatingPointToleranceAttribute.ApplyToContextTestExecutionContext">
            <summary>Sets the shim of DefaultFloatingPointToleranceAttribute.ApplyToContext(TestExecutionContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDefaultFloatingPointToleranceAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDefaultFloatingPointToleranceAttribute.ConstructorDouble">
            <summary>Sets the shim of DefaultFloatingPointToleranceAttribute.DefaultFloatingPointToleranceAttribute(Double amount)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimDefaultFloatingPointToleranceAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDefaultFloatingPointToleranceAttribute.AllInstances.ApplyToContextTestExecutionContext">
            <summary>Sets the shim of DefaultFloatingPointToleranceAttribute.ApplyToContext(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimDescriptionAttribute">
            <summary>Shim type of NUnit.Framework.DescriptionAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDescriptionAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDescriptionAttribute.#ctor(NUnit.Framework.DescriptionAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDescriptionAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDescriptionAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDescriptionAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDescriptionAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDescriptionAttribute.ConstructorString">
            <summary>Sets the shim of DescriptionAttribute.DescriptionAttribute(String description)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimDescriptionAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimDirectoryAssert">
            <summary>Shim type of NUnit.Framework.DirectoryAssert</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDirectoryAssert.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDirectoryAssert.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDirectoryAssert.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDirectoryAssert.AreEqualDirectoryInfoDirectoryInfo">
            <summary>Sets the shim of DirectoryAssert.AreEqual(DirectoryInfo expected, DirectoryInfo actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDirectoryAssert.AreEqualDirectoryInfoDirectoryInfoStringObjectArray">
            <summary>Sets the shim of DirectoryAssert.AreEqual(DirectoryInfo expected, DirectoryInfo actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDirectoryAssert.AreNotEqualDirectoryInfoDirectoryInfo">
            <summary>Sets the shim of DirectoryAssert.AreNotEqual(DirectoryInfo expected, DirectoryInfo actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDirectoryAssert.AreNotEqualDirectoryInfoDirectoryInfoStringObjectArray">
            <summary>Sets the shim of DirectoryAssert.AreNotEqual(DirectoryInfo expected, DirectoryInfo actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDirectoryAssert.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDirectoryAssert.DoesNotExistDirectoryInfo">
            <summary>Sets the shim of DirectoryAssert.DoesNotExist(DirectoryInfo actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDirectoryAssert.DoesNotExistDirectoryInfoStringObjectArray">
            <summary>Sets the shim of DirectoryAssert.DoesNotExist(DirectoryInfo actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDirectoryAssert.DoesNotExistString">
            <summary>Sets the shim of DirectoryAssert.DoesNotExist(String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDirectoryAssert.DoesNotExistStringStringObjectArray">
            <summary>Sets the shim of DirectoryAssert.DoesNotExist(String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDirectoryAssert.EqualsObjectObject">
            <summary>Sets the shim of DirectoryAssert.Equals(Object a, Object b)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDirectoryAssert.ExistsDirectoryInfo">
            <summary>Sets the shim of DirectoryAssert.Exists(DirectoryInfo actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDirectoryAssert.ExistsDirectoryInfoStringObjectArray">
            <summary>Sets the shim of DirectoryAssert.Exists(DirectoryInfo actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDirectoryAssert.ExistsString">
            <summary>Sets the shim of DirectoryAssert.Exists(String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDirectoryAssert.ExistsStringStringObjectArray">
            <summary>Sets the shim of DirectoryAssert.Exists(String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDirectoryAssert.ReferenceEqualsObjectObject">
            <summary>Sets the shim of DirectoryAssert.ReferenceEquals(Object a, Object b)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimDoes">
            <summary>Shim type of NUnit.Framework.Does</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDoes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDoes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimDoes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDoes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDoes.ContainKeyObject">
            <summary>Sets the shim of Does.ContainKey(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDoes.ContainObject">
            <summary>Sets the shim of Does.Contain(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDoes.ContainString">
            <summary>Sets the shim of Does.Contain(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDoes.ContainValueObject">
            <summary>Sets the shim of Does.ContainValue(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDoes.EndWithString">
            <summary>Sets the shim of Does.EndWith(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDoes.ExistGet">
            <summary>Sets the shim of Does.get_Exist()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDoes.MatchString">
            <summary>Sets the shim of Does.Match(String pattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDoes.NotGet">
            <summary>Sets the shim of Does.get_Not()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimDoes.StartWithString">
            <summary>Sets the shim of Does.StartWith(String expected)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimExplicitAttribute">
            <summary>Shim type of NUnit.Framework.ExplicitAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimExplicitAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimExplicitAttribute.#ctor(NUnit.Framework.ExplicitAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimExplicitAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimExplicitAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimExplicitAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExplicitAttribute.ApplyToTestTest">
            <summary>Sets the shim of ExplicitAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExplicitAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExplicitAttribute.Constructor">
            <summary>Sets the shim of ExplicitAttribute.ExplicitAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExplicitAttribute.ConstructorString">
            <summary>Sets the shim of ExplicitAttribute.ExplicitAttribute(String reason)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimExplicitAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimExplicitAttribute.AllInstances.ApplyToTestTest">
            <summary>Sets the shim of ExplicitAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimFileAssert">
            <summary>Shim type of NUnit.Framework.FileAssert</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimFileAssert.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimFileAssert.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimFileAssert.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreEqualFileInfoFileInfo">
            <summary>Sets the shim of FileAssert.AreEqual(FileInfo expected, FileInfo actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreEqualFileInfoFileInfoStringObjectArray">
            <summary>Sets the shim of FileAssert.AreEqual(FileInfo expected, FileInfo actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreEqualStreamStream">
            <summary>Sets the shim of FileAssert.AreEqual(Stream expected, Stream actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreEqualStreamStreamStringObjectArray">
            <summary>Sets the shim of FileAssert.AreEqual(Stream expected, Stream actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreEqualStringString">
            <summary>Sets the shim of FileAssert.AreEqual(String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreEqualStringStringStringObjectArray">
            <summary>Sets the shim of FileAssert.AreEqual(String expected, String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreNotEqualFileInfoFileInfo">
            <summary>Sets the shim of FileAssert.AreNotEqual(FileInfo expected, FileInfo actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreNotEqualFileInfoFileInfoStringObjectArray">
            <summary>Sets the shim of FileAssert.AreNotEqual(FileInfo expected, FileInfo actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreNotEqualStreamStream">
            <summary>Sets the shim of FileAssert.AreNotEqual(Stream expected, Stream actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreNotEqualStreamStreamStringObjectArray">
            <summary>Sets the shim of FileAssert.AreNotEqual(Stream expected, Stream actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreNotEqualStringString">
            <summary>Sets the shim of FileAssert.AreNotEqual(String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.AreNotEqualStringStringStringObjectArray">
            <summary>Sets the shim of FileAssert.AreNotEqual(String expected, String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.DoesNotExistFileInfo">
            <summary>Sets the shim of FileAssert.DoesNotExist(FileInfo actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.DoesNotExistFileInfoStringObjectArray">
            <summary>Sets the shim of FileAssert.DoesNotExist(FileInfo actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.DoesNotExistString">
            <summary>Sets the shim of FileAssert.DoesNotExist(String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.DoesNotExistStringStringObjectArray">
            <summary>Sets the shim of FileAssert.DoesNotExist(String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.EqualsObjectObject">
            <summary>Sets the shim of FileAssert.Equals(Object a, Object b)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.ExistsFileInfo">
            <summary>Sets the shim of FileAssert.Exists(FileInfo actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.ExistsFileInfoStringObjectArray">
            <summary>Sets the shim of FileAssert.Exists(FileInfo actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.ExistsString">
            <summary>Sets the shim of FileAssert.Exists(String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.ExistsStringStringObjectArray">
            <summary>Sets the shim of FileAssert.Exists(String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimFileAssert.ReferenceEqualsObjectObject">
            <summary>Sets the shim of FileAssert.ReferenceEquals(Object a, Object b)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimHas">
            <summary>Shim type of NUnit.Framework.Has</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimHas.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimHas.#ctor(NUnit.Framework.Has)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimHas.AttributeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ResolvableConstraintExpression})">
            <summary>Sets the shim of Has.Attribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimHas.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimHas.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.AllGet">
            <summary>Sets the shim of Has.get_All()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.AttributeType">
            <summary>Sets the shim of Has.Attribute(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.Constructor">
            <summary>Sets the shim of Has.Has()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.CountGet">
            <summary>Sets the shim of Has.get_Count()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.ExactlyInt32">
            <summary>Sets the shim of Has.Exactly(Int32 expectedCount)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.InnerExceptionGet">
            <summary>Sets the shim of Has.get_InnerException()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.LengthGet">
            <summary>Sets the shim of Has.get_Length()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.MemberObject">
            <summary>Sets the shim of Has.Member(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.MessageGet">
            <summary>Sets the shim of Has.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.NoGet">
            <summary>Sets the shim of Has.get_No()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.NoneGet">
            <summary>Sets the shim of Has.get_None()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.PropertyString">
            <summary>Sets the shim of Has.Property(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimHas.SomeGet">
            <summary>Sets the shim of Has.get_Some()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimHas.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimIgnoreAttribute">
            <summary>Shim type of NUnit.Framework.IgnoreAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIgnoreAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIgnoreAttribute.#ctor(NUnit.Framework.IgnoreAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIgnoreAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIgnoreAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIgnoreAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreAttribute.ApplyToTestTest">
            <summary>Sets the shim of IgnoreAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreAttribute.ConstructorString">
            <summary>Sets the shim of IgnoreAttribute.IgnoreAttribute(String reason)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreAttribute.UntilGet">
            <summary>Sets the shim of IgnoreAttribute.get_Until()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreAttribute.UntilSetString">
            <summary>Sets the shim of IgnoreAttribute.set_Until(String value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimIgnoreAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreAttribute.AllInstances.ApplyToTestTest">
            <summary>Sets the shim of IgnoreAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreAttribute.AllInstances.UntilGet">
            <summary>Sets the shim of IgnoreAttribute.get_Until()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreAttribute.AllInstances.UntilSetString">
            <summary>Sets the shim of IgnoreAttribute.set_Until(String value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimIgnoreException">
            <summary>Shim type of NUnit.Framework.IgnoreException</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIgnoreException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIgnoreException.#ctor(NUnit.Framework.IgnoreException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIgnoreException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIgnoreException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIgnoreException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of IgnoreException.IgnoreException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreException.ConstructorString">
            <summary>Sets the shim of IgnoreException.IgnoreException(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreException.ConstructorStringException">
            <summary>Sets the shim of IgnoreException.IgnoreException(String message, Exception inner)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreException.ResultStateGet">
            <summary>Sets the shim of IgnoreException.get_ResultState()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimIgnoreException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIgnoreException.AllInstances.ResultStateGet">
            <summary>Sets the shim of IgnoreException.get_ResultState()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute">
            <summary>Shim type of NUnit.Framework.IncludeExcludeAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.#ctor(NUnit.Framework.IncludeExcludeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.Constructor">
            <summary>Sets the shim of IncludeExcludeAttribute.IncludeExcludeAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.ConstructorString">
            <summary>Sets the shim of IncludeExcludeAttribute.IncludeExcludeAttribute(String include)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.ExcludeGet">
            <summary>Sets the shim of IncludeExcludeAttribute.get_Exclude()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.ExcludeSetString">
            <summary>Sets the shim of IncludeExcludeAttribute.set_Exclude(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.IncludeGet">
            <summary>Sets the shim of IncludeExcludeAttribute.get_Include()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.IncludeSetString">
            <summary>Sets the shim of IncludeExcludeAttribute.set_Include(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.ReasonGet">
            <summary>Sets the shim of IncludeExcludeAttribute.get_Reason()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.ReasonSetString">
            <summary>Sets the shim of IncludeExcludeAttribute.set_Reason(String value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.AllInstances.ExcludeGet">
            <summary>Sets the shim of IncludeExcludeAttribute.get_Exclude()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.AllInstances.ExcludeSetString">
            <summary>Sets the shim of IncludeExcludeAttribute.set_Exclude(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.AllInstances.IncludeGet">
            <summary>Sets the shim of IncludeExcludeAttribute.get_Include()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.AllInstances.IncludeSetString">
            <summary>Sets the shim of IncludeExcludeAttribute.set_Include(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.AllInstances.ReasonGet">
            <summary>Sets the shim of IncludeExcludeAttribute.get_Reason()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIncludeExcludeAttribute.AllInstances.ReasonSetString">
            <summary>Sets the shim of IncludeExcludeAttribute.set_Reason(String value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimInconclusiveException">
            <summary>Shim type of NUnit.Framework.InconclusiveException</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimInconclusiveException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimInconclusiveException.#ctor(NUnit.Framework.InconclusiveException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimInconclusiveException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimInconclusiveException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimInconclusiveException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimInconclusiveException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimInconclusiveException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of InconclusiveException.InconclusiveException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimInconclusiveException.ConstructorString">
            <summary>Sets the shim of InconclusiveException.InconclusiveException(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimInconclusiveException.ConstructorStringException">
            <summary>Sets the shim of InconclusiveException.InconclusiveException(String message, Exception inner)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimInconclusiveException.ResultStateGet">
            <summary>Sets the shim of InconclusiveException.get_ResultState()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimInconclusiveException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimInconclusiveException.AllInstances.ResultStateGet">
            <summary>Sets the shim of InconclusiveException.get_ResultState()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimIs">
            <summary>Shim type of NUnit.Framework.Is</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIs.#ctor(NUnit.Framework.Is)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIs.AssignableFromOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.AssignableFromConstraint})">
            <summary>Sets the shim of Is.AssignableFrom()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIs.AssignableToOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.AssignableToConstraint})">
            <summary>Sets the shim of Is.AssignableTo()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIs.InstanceOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.InstanceOfTypeConstraint})">
            <summary>Sets the shim of Is.InstanceOf()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIs.TypeOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ExactTypeConstraint})">
            <summary>Sets the shim of Is.TypeOf()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.AllGet">
            <summary>Sets the shim of Is.get_All()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.AssignableFromType">
            <summary>Sets the shim of Is.AssignableFrom(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.AssignableToType">
            <summary>Sets the shim of Is.AssignableTo(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.AtLeastObject">
            <summary>Sets the shim of Is.AtLeast(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.AtMostObject">
            <summary>Sets the shim of Is.AtMost(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.BinarySerializableGet">
            <summary>Sets the shim of Is.get_BinarySerializable()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.Constructor">
            <summary>Sets the shim of Is.Is()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.EmptyGet">
            <summary>Sets the shim of Is.get_Empty()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.EqualToObject">
            <summary>Sets the shim of Is.EqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.EquivalentToIEnumerable">
            <summary>Sets the shim of Is.EquivalentTo(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.FalseGet">
            <summary>Sets the shim of Is.get_False()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.GreaterThanObject">
            <summary>Sets the shim of Is.GreaterThan(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.GreaterThanOrEqualToObject">
            <summary>Sets the shim of Is.GreaterThanOrEqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.InRangeIComparableIComparable">
            <summary>Sets the shim of Is.InRange(IComparable from, IComparable to)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.InstanceOfType">
            <summary>Sets the shim of Is.InstanceOf(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.LessThanObject">
            <summary>Sets the shim of Is.LessThan(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.LessThanOrEqualToObject">
            <summary>Sets the shim of Is.LessThanOrEqualTo(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.NaNGet">
            <summary>Sets the shim of Is.get_NaN()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.NegativeGet">
            <summary>Sets the shim of Is.get_Negative()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.NotGet">
            <summary>Sets the shim of Is.get_Not()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.NullGet">
            <summary>Sets the shim of Is.get_Null()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.OrderedGet">
            <summary>Sets the shim of Is.get_Ordered()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.PositiveGet">
            <summary>Sets the shim of Is.get_Positive()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.SameAsObject">
            <summary>Sets the shim of Is.SameAs(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.SamePathOrUnderString">
            <summary>Sets the shim of Is.SamePathOrUnder(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.SamePathString">
            <summary>Sets the shim of Is.SamePath(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.StringContainingString">
            <summary>Sets the shim of Is.StringContaining(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.StringEndingString">
            <summary>Sets the shim of Is.StringEnding(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.StringMatchingString">
            <summary>Sets the shim of Is.StringMatching(String pattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.StringStartingString">
            <summary>Sets the shim of Is.StringStarting(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.SubPathOfString">
            <summary>Sets the shim of Is.SubPathOf(String expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.SubsetOfIEnumerable">
            <summary>Sets the shim of Is.SubsetOf(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.SupersetOfIEnumerable">
            <summary>Sets the shim of Is.SupersetOf(IEnumerable expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.TrueGet">
            <summary>Sets the shim of Is.get_True()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.TypeOfType">
            <summary>Sets the shim of Is.TypeOf(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.UniqueGet">
            <summary>Sets the shim of Is.get_Unique()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.XmlSerializableGet">
            <summary>Sets the shim of Is.get_XmlSerializable()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIs.ZeroGet">
            <summary>Sets the shim of Is.get_Zero()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimIs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimIz">
            <summary>Shim type of NUnit.Framework.Iz</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIz.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIz.#ctor(NUnit.Framework.Iz)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIz.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimIz.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIz.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimIz.Constructor">
            <summary>Sets the shim of Iz.Iz()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimIz.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimLevelOfParallelismAttribute">
            <summary>Shim type of NUnit.Framework.LevelOfParallelismAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimLevelOfParallelismAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimLevelOfParallelismAttribute.#ctor(NUnit.Framework.LevelOfParallelismAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimLevelOfParallelismAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimLevelOfParallelismAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimLevelOfParallelismAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimLevelOfParallelismAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimLevelOfParallelismAttribute.ConstructorInt32">
            <summary>Sets the shim of LevelOfParallelismAttribute.LevelOfParallelismAttribute(Int32 level)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimLevelOfParallelismAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimList">
            <summary>Shim type of NUnit.Framework.List</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimList.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimList.#ctor(NUnit.Framework.List)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimList.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimList.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimList.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimList.Constructor">
            <summary>Sets the shim of List.List()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimList.MapICollection">
            <summary>Sets the shim of List.Map(ICollection actual)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimList.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimListMapper">
            <summary>Shim type of NUnit.Framework.ListMapper</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimListMapper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimListMapper.#ctor(NUnit.Framework.ListMapper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimListMapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimListMapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimListMapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimListMapper.ConstructorICollection">
            <summary>Sets the shim of ListMapper.ListMapper(ICollection original)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimListMapper.PropertyString">
            <summary>Sets the shim of ListMapper.Property(String name)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimListMapper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimListMapper.AllInstances.PropertyString">
            <summary>Sets the shim of ListMapper.Property(String name)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimMaxTimeAttribute">
            <summary>Shim type of NUnit.Framework.MaxTimeAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimMaxTimeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimMaxTimeAttribute.#ctor(NUnit.Framework.MaxTimeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimMaxTimeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimMaxTimeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimMaxTimeAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimMaxTimeAttribute.Bind(NUnit.Framework.Interfaces.ICommandWrapper)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimMaxTimeAttribute.Bind(NUnit.Framework.Interfaces.IWrapSetUpTearDown)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimMaxTimeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimMaxTimeAttribute.ConstructorInt32">
            <summary>Sets the shim of MaxTimeAttribute.MaxTimeAttribute(Int32 milliseconds)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimMaxTimeAttribute.NUnitFrameworkInterfacesICommandWrapperWrapTestCommand">
            <summary>Sets the shim of MaxTimeAttribute.NUnit.Framework.Interfaces.ICommandWrapper.Wrap(TestCommand command)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimMaxTimeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimMaxTimeAttribute.AllInstances.NUnitFrameworkInterfacesICommandWrapperWrapTestCommand">
            <summary>Sets the shim of MaxTimeAttribute.NUnit.Framework.Interfaces.ICommandWrapper.Wrap(TestCommand command)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimMultipleAssertException">
            <summary>Shim type of NUnit.Framework.MultipleAssertException</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimMultipleAssertException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimMultipleAssertException.#ctor(NUnit.Framework.MultipleAssertException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimMultipleAssertException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimMultipleAssertException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimMultipleAssertException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimMultipleAssertException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimMultipleAssertException.Constructor">
            <summary>Sets the shim of MultipleAssertException.MultipleAssertException()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimMultipleAssertException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of MultipleAssertException.MultipleAssertException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimMultipleAssertException.ConstructorStringException">
            <summary>Sets the shim of MultipleAssertException.MultipleAssertException(String message, Exception inner)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimMultipleAssertException.ResultStateGet">
            <summary>Sets the shim of MultipleAssertException.get_ResultState()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimMultipleAssertException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimMultipleAssertException.AllInstances.ResultStateGet">
            <summary>Sets the shim of MultipleAssertException.get_ResultState()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimNUnitAttribute">
            <summary>Shim type of NUnit.Framework.NUnitAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimNUnitAttribute.#ctor(NUnit.Framework.NUnitAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimNUnitAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimNUnitAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimNUnitAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimNUnitAttribute.Constructor">
            <summary>Sets the shim of NUnitAttribute.NUnitAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimNUnitAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimNonParallelizableAttribute">
            <summary>Shim type of NUnit.Framework.NonParallelizableAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimNonParallelizableAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimNonParallelizableAttribute.#ctor(NUnit.Framework.NonParallelizableAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimNonParallelizableAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimNonParallelizableAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimNonParallelizableAttribute.Bind(NUnit.Framework.Interfaces.IApplyToContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimNonParallelizableAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimNonParallelizableAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimNonParallelizableAttribute.Constructor">
            <summary>Sets the shim of NonParallelizableAttribute.NonParallelizableAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimNonParallelizableAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimNonTestAssemblyAttribute">
            <summary>Shim type of NUnit.Framework.NonTestAssemblyAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimNonTestAssemblyAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimNonTestAssemblyAttribute.#ctor(NUnit.Framework.NonTestAssemblyAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimNonTestAssemblyAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimNonTestAssemblyAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimNonTestAssemblyAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimNonTestAssemblyAttribute.Constructor">
            <summary>Sets the shim of NonTestAssemblyAttribute.NonTestAssemblyAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimNonTestAssemblyAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimOneTimeSetUpAttribute">
            <summary>Shim type of NUnit.Framework.OneTimeSetUpAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimOneTimeSetUpAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimOneTimeSetUpAttribute.#ctor(NUnit.Framework.OneTimeSetUpAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimOneTimeSetUpAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimOneTimeSetUpAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimOneTimeSetUpAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimOneTimeSetUpAttribute.Constructor">
            <summary>Sets the shim of OneTimeSetUpAttribute.OneTimeSetUpAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimOneTimeSetUpAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimOneTimeTearDownAttribute">
            <summary>Shim type of NUnit.Framework.OneTimeTearDownAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimOneTimeTearDownAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimOneTimeTearDownAttribute.#ctor(NUnit.Framework.OneTimeTearDownAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimOneTimeTearDownAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimOneTimeTearDownAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimOneTimeTearDownAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimOneTimeTearDownAttribute.Constructor">
            <summary>Sets the shim of OneTimeTearDownAttribute.OneTimeTearDownAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimOneTimeTearDownAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimOrderAttribute">
            <summary>Shim type of NUnit.Framework.OrderAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimOrderAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimOrderAttribute.#ctor(NUnit.Framework.OrderAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimOrderAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimOrderAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimOrderAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimOrderAttribute.ApplyToTestTest">
            <summary>Sets the shim of OrderAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimOrderAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimOrderAttribute.ConstructorInt32">
            <summary>Sets the shim of OrderAttribute.OrderAttribute(Int32 order)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimOrderAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimOrderAttribute.AllInstances.ApplyToTestTest">
            <summary>Sets the shim of OrderAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimPairwiseAttribute">
            <summary>Shim type of NUnit.Framework.PairwiseAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPairwiseAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPairwiseAttribute.#ctor(NUnit.Framework.PairwiseAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPairwiseAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPairwiseAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPairwiseAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPairwiseAttribute.Bind(NUnit.Framework.Interfaces.ITestBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPairwiseAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPairwiseAttribute.Constructor">
            <summary>Sets the shim of PairwiseAttribute.PairwiseAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimPairwiseAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimParallelizableAttribute">
            <summary>Shim type of NUnit.Framework.ParallelizableAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimParallelizableAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimParallelizableAttribute.#ctor(NUnit.Framework.ParallelizableAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimParallelizableAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimParallelizableAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimParallelizableAttribute.Bind(NUnit.Framework.Interfaces.IApplyToContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimParallelizableAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimParallelizableAttribute.ApplyToContextTestExecutionContext">
            <summary>Sets the shim of ParallelizableAttribute.ApplyToContext(TestExecutionContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimParallelizableAttribute.ApplyToTestTest">
            <summary>Sets the shim of ParallelizableAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimParallelizableAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimParallelizableAttribute.Constructor">
            <summary>Sets the shim of ParallelizableAttribute.ParallelizableAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimParallelizableAttribute.ConstructorParallelScope">
            <summary>Sets the shim of ParallelizableAttribute.ParallelizableAttribute(ParallelScope scope)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimParallelizableAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimParallelizableAttribute.AllInstances.ApplyToContextTestExecutionContext">
            <summary>Sets the shim of ParallelizableAttribute.ApplyToContext(TestExecutionContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimParallelizableAttribute.AllInstances.ApplyToTestTest">
            <summary>Sets the shim of ParallelizableAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimPlatformAttribute">
            <summary>Shim type of NUnit.Framework.PlatformAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPlatformAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPlatformAttribute.#ctor(NUnit.Framework.PlatformAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPlatformAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPlatformAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPlatformAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPlatformAttribute.ApplyToTestTest">
            <summary>Sets the shim of PlatformAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPlatformAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPlatformAttribute.Constructor">
            <summary>Sets the shim of PlatformAttribute.PlatformAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPlatformAttribute.ConstructorString">
            <summary>Sets the shim of PlatformAttribute.PlatformAttribute(String platforms)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimPlatformAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPlatformAttribute.AllInstances.ApplyToTestTest">
            <summary>Sets the shim of PlatformAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimPropertyAttribute">
            <summary>Shim type of NUnit.Framework.PropertyAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPropertyAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPropertyAttribute.#ctor(NUnit.Framework.PropertyAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPropertyAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPropertyAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimPropertyAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPropertyAttribute.ApplyToTestTest">
            <summary>Sets the shim of PropertyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPropertyAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPropertyAttribute.Constructor">
            <summary>Sets the shim of PropertyAttribute.PropertyAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPropertyAttribute.ConstructorObject">
            <summary>Sets the shim of PropertyAttribute.PropertyAttribute(Object propertyValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPropertyAttribute.ConstructorStringDouble">
            <summary>Sets the shim of PropertyAttribute.PropertyAttribute(String propertyName, Double propertyValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPropertyAttribute.ConstructorStringInt32">
            <summary>Sets the shim of PropertyAttribute.PropertyAttribute(String propertyName, Int32 propertyValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPropertyAttribute.ConstructorStringString">
            <summary>Sets the shim of PropertyAttribute.PropertyAttribute(String propertyName, String propertyValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPropertyAttribute.PropertiesGet">
            <summary>Sets the shim of PropertyAttribute.get_Properties()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimPropertyAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPropertyAttribute.AllInstances.ApplyToTestTest">
            <summary>Sets the shim of PropertyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimPropertyAttribute.AllInstances.PropertiesGet">
            <summary>Sets the shim of PropertyAttribute.get_Properties()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRandomAttribute">
            <summary>Shim type of NUnit.Framework.RandomAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRandomAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRandomAttribute.#ctor(NUnit.Framework.RandomAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRandomAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRandomAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRandomAttribute.Bind(NUnit.Framework.Interfaces.IParameterDataSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomAttribute.ConstructorByteByteInt32">
            <summary>Sets the shim of RandomAttribute.RandomAttribute(Byte min, Byte max, Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomAttribute.ConstructorDoubleDoubleInt32">
            <summary>Sets the shim of RandomAttribute.RandomAttribute(Double min, Double max, Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomAttribute.ConstructorInt16Int16Int32">
            <summary>Sets the shim of RandomAttribute.RandomAttribute(Int16 min, Int16 max, Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomAttribute.ConstructorInt32">
            <summary>Sets the shim of RandomAttribute.RandomAttribute(Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomAttribute.ConstructorInt32Int32Int32">
            <summary>Sets the shim of RandomAttribute.RandomAttribute(Int32 min, Int32 max, Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomAttribute.ConstructorInt64Int64Int32">
            <summary>Sets the shim of RandomAttribute.RandomAttribute(Int64 min, Int64 max, Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomAttribute.ConstructorSByteSByteInt32">
            <summary>Sets the shim of RandomAttribute.RandomAttribute(SByte min, SByte max, Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomAttribute.ConstructorSingleSingleInt32">
            <summary>Sets the shim of RandomAttribute.RandomAttribute(Single min, Single max, Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomAttribute.ConstructorUInt16UInt16Int32">
            <summary>Sets the shim of RandomAttribute.RandomAttribute(UInt16 min, UInt16 max, Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomAttribute.ConstructorUInt32UInt32Int32">
            <summary>Sets the shim of RandomAttribute.RandomAttribute(UInt32 min, UInt32 max, Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomAttribute.ConstructorUInt64UInt64Int32">
            <summary>Sets the shim of RandomAttribute.RandomAttribute(UInt64 min, UInt64 max, Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomAttribute.GetDataIParameterInfo">
            <summary>Sets the shim of RandomAttribute.GetData(IParameterInfo parameter)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomAttribute.WeConvertTypeType">
            <summary>Sets the shim of RandomAttribute.WeConvert(Type sourceType, Type targetType)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRandomAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomAttribute.AllInstances.GetDataIParameterInfo">
            <summary>Sets the shim of RandomAttribute.GetData(IParameterInfo parameter)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRandomAttribute.AllInstances.WeConvertTypeType">
            <summary>Sets the shim of RandomAttribute.WeConvert(Type sourceType, Type targetType)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRangeAttribute">
            <summary>Shim type of NUnit.Framework.RangeAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRangeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRangeAttribute.#ctor(NUnit.Framework.RangeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRangeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRangeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRangeAttribute.Bind(NUnit.Framework.Interfaces.IParameterDataSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRangeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRangeAttribute.ConstructorDoubleDoubleDouble">
            <summary>Sets the shim of RangeAttribute.RangeAttribute(Double from, Double to, Double step)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRangeAttribute.ConstructorInt32Int32">
            <summary>Sets the shim of RangeAttribute.RangeAttribute(Int32 from, Int32 to)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRangeAttribute.ConstructorInt32Int32Int32">
            <summary>Sets the shim of RangeAttribute.RangeAttribute(Int32 from, Int32 to, Int32 step)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRangeAttribute.ConstructorInt64Int64">
            <summary>Sets the shim of RangeAttribute.RangeAttribute(Int64 from, Int64 to)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRangeAttribute.ConstructorInt64Int64Int64">
            <summary>Sets the shim of RangeAttribute.RangeAttribute(Int64 from, Int64 to, Int64 step)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRangeAttribute.ConstructorSingleSingleSingle">
            <summary>Sets the shim of RangeAttribute.RangeAttribute(Single from, Single to, Single step)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRangeAttribute.ConstructorUInt32UInt32">
            <summary>Sets the shim of RangeAttribute.RangeAttribute(UInt32 from, UInt32 to)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRangeAttribute.ConstructorUInt32UInt32UInt32">
            <summary>Sets the shim of RangeAttribute.RangeAttribute(UInt32 from, UInt32 to, UInt32 step)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRangeAttribute.ConstructorUInt64UInt64">
            <summary>Sets the shim of RangeAttribute.RangeAttribute(UInt64 from, UInt64 to)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRangeAttribute.ConstructorUInt64UInt64UInt64">
            <summary>Sets the shim of RangeAttribute.RangeAttribute(UInt64 from, UInt64 to, UInt64 step)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRangeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRepeatAttribute">
            <summary>Shim type of NUnit.Framework.RepeatAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRepeatAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRepeatAttribute.#ctor(NUnit.Framework.RepeatAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRepeatAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRepeatAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRepeatAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRepeatAttribute.Bind(NUnit.Framework.Interfaces.ICommandWrapper)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRepeatAttribute.Bind(NUnit.Framework.Interfaces.IWrapSetUpTearDown)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRepeatAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRepeatAttribute.ConstructorInt32">
            <summary>Sets the shim of RepeatAttribute.RepeatAttribute(Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRepeatAttribute.WrapTestCommand">
            <summary>Sets the shim of RepeatAttribute.Wrap(TestCommand command)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRepeatAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRepeatAttribute.AllInstances.WrapTestCommand">
            <summary>Sets the shim of RepeatAttribute.Wrap(TestCommand command)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRepeatAttribute.ShimRepeatedTestCommand">
            <summary>Shim type of NUnit.Framework.RepeatAttribute+RepeatedTestCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRepeatAttribute.ShimRepeatedTestCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRepeatAttribute.ShimRepeatedTestCommand.#ctor(NUnit.Framework.RepeatAttribute.RepeatedTestCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRepeatAttribute.ShimRepeatedTestCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRepeatAttribute.ShimRepeatedTestCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRepeatAttribute.ShimRepeatedTestCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRepeatAttribute.ShimRepeatedTestCommand.ConstructorTestCommandInt32">
            <summary>Sets the shim of RepeatedTestCommand.RepeatedTestCommand(TestCommand innerCommand, Int32 repeatCount)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRepeatAttribute.ShimRepeatedTestCommand.ExecuteTestExecutionContext">
            <summary>Sets the shim of RepeatedTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRepeatAttribute.ShimRepeatedTestCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRepeatAttribute.ShimRepeatedTestCommand.AllInstances.ExecuteTestExecutionContext">
            <summary>Sets the shim of RepeatedTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRequiresThreadAttribute">
            <summary>Shim type of NUnit.Framework.RequiresThreadAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRequiresThreadAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRequiresThreadAttribute.#ctor(NUnit.Framework.RequiresThreadAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRequiresThreadAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRequiresThreadAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRequiresThreadAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRequiresThreadAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRequiresThreadAttribute.Constructor">
            <summary>Sets the shim of RequiresThreadAttribute.RequiresThreadAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRequiresThreadAttribute.ConstructorApartmentState">
            <summary>Sets the shim of RequiresThreadAttribute.RequiresThreadAttribute(ApartmentState apartment)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRequiresThreadAttribute.NUnitFrameworkInterfacesIApplyToTestApplyToTestTest">
            <summary>Sets the shim of RequiresThreadAttribute.NUnit.Framework.Interfaces.IApplyToTest.ApplyToTest(Test test)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRequiresThreadAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRequiresThreadAttribute.AllInstances.NUnitFrameworkInterfacesIApplyToTestApplyToTestTest">
            <summary>Sets the shim of RequiresThreadAttribute.NUnit.Framework.Interfaces.IApplyToTest.ApplyToTest(Test test)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimResultStateException">
            <summary>Shim type of NUnit.Framework.ResultStateException</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimResultStateException.#ctor(NUnit.Framework.ResultStateException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimResultStateException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimResultStateException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimResultStateException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimResultStateException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimResultStateException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ResultStateException.ResultStateException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimResultStateException.ConstructorString">
            <summary>Sets the shim of ResultStateException.ResultStateException(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimResultStateException.ConstructorStringException">
            <summary>Sets the shim of ResultStateException.ResultStateException(String message, Exception inner)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimResultStateException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRetryAttribute">
            <summary>Shim type of NUnit.Framework.RetryAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRetryAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRetryAttribute.#ctor(NUnit.Framework.RetryAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRetryAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRetryAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRetryAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRetryAttribute.Bind(NUnit.Framework.Interfaces.ICommandWrapper)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRetryAttribute.Bind(NUnit.Framework.Interfaces.IWrapSetUpTearDown)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRetryAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRetryAttribute.ConstructorInt32">
            <summary>Sets the shim of RetryAttribute.RetryAttribute(Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRetryAttribute.WrapTestCommand">
            <summary>Sets the shim of RetryAttribute.Wrap(TestCommand command)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRetryAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRetryAttribute.AllInstances.WrapTestCommand">
            <summary>Sets the shim of RetryAttribute.Wrap(TestCommand command)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRetryAttribute.ShimRetryCommand">
            <summary>Shim type of NUnit.Framework.RetryAttribute+RetryCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRetryAttribute.ShimRetryCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRetryAttribute.ShimRetryCommand.#ctor(NUnit.Framework.RetryAttribute.RetryCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRetryAttribute.ShimRetryCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimRetryAttribute.ShimRetryCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRetryAttribute.ShimRetryCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRetryAttribute.ShimRetryCommand.ConstructorTestCommandInt32">
            <summary>Sets the shim of RetryCommand.RetryCommand(TestCommand innerCommand, Int32 retryCount)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRetryAttribute.ShimRetryCommand.ExecuteTestExecutionContext">
            <summary>Sets the shim of RetryCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimRetryAttribute.ShimRetryCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimRetryAttribute.ShimRetryCommand.AllInstances.ExecuteTestExecutionContext">
            <summary>Sets the shim of RetryCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSequentialAttribute">
            <summary>Shim type of NUnit.Framework.SequentialAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSequentialAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSequentialAttribute.#ctor(NUnit.Framework.SequentialAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSequentialAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSequentialAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSequentialAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSequentialAttribute.Bind(NUnit.Framework.Interfaces.ITestBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSequentialAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSequentialAttribute.Constructor">
            <summary>Sets the shim of SequentialAttribute.SequentialAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSequentialAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSetCultureAttribute">
            <summary>Shim type of NUnit.Framework.SetCultureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetCultureAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetCultureAttribute.#ctor(NUnit.Framework.SetCultureAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetCultureAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetCultureAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetCultureAttribute.Bind(NUnit.Framework.Interfaces.IApplyToContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetCultureAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetCultureAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetCultureAttribute.ConstructorString">
            <summary>Sets the shim of SetCultureAttribute.SetCultureAttribute(String culture)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetCultureAttribute.NUnitFrameworkInterfacesIApplyToContextApplyToContextTestExecutionContext">
            <summary>Sets the shim of SetCultureAttribute.NUnit.Framework.Interfaces.IApplyToContext.ApplyToContext(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSetCultureAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetCultureAttribute.AllInstances.NUnitFrameworkInterfacesIApplyToContextApplyToContextTestExecutionContext">
            <summary>Sets the shim of SetCultureAttribute.NUnit.Framework.Interfaces.IApplyToContext.ApplyToContext(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSetUICultureAttribute">
            <summary>Shim type of NUnit.Framework.SetUICultureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUICultureAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUICultureAttribute.#ctor(NUnit.Framework.SetUICultureAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUICultureAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUICultureAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUICultureAttribute.Bind(NUnit.Framework.Interfaces.IApplyToContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUICultureAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetUICultureAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetUICultureAttribute.ConstructorString">
            <summary>Sets the shim of SetUICultureAttribute.SetUICultureAttribute(String culture)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetUICultureAttribute.NUnitFrameworkInterfacesIApplyToContextApplyToContextTestExecutionContext">
            <summary>Sets the shim of SetUICultureAttribute.NUnit.Framework.Interfaces.IApplyToContext.ApplyToContext(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSetUICultureAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetUICultureAttribute.AllInstances.NUnitFrameworkInterfacesIApplyToContextApplyToContextTestExecutionContext">
            <summary>Sets the shim of SetUICultureAttribute.NUnit.Framework.Interfaces.IApplyToContext.ApplyToContext(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSetUpAttribute">
            <summary>Shim type of NUnit.Framework.SetUpAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUpAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUpAttribute.#ctor(NUnit.Framework.SetUpAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUpAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUpAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetUpAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetUpAttribute.Constructor">
            <summary>Sets the shim of SetUpAttribute.SetUpAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSetUpAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSetUpFixtureAttribute">
            <summary>Shim type of NUnit.Framework.SetUpFixtureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUpFixtureAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUpFixtureAttribute.#ctor(NUnit.Framework.SetUpFixtureAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUpFixtureAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUpFixtureAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSetUpFixtureAttribute.Bind(NUnit.Framework.Interfaces.IFixtureBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetUpFixtureAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetUpFixtureAttribute.BuildFromITypeInfo">
            <summary>Sets the shim of SetUpFixtureAttribute.BuildFrom(ITypeInfo typeInfo)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetUpFixtureAttribute.Constructor">
            <summary>Sets the shim of SetUpFixtureAttribute.SetUpFixtureAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetUpFixtureAttribute.IsValidFixtureTypeITypeInfoStringRef">
            <summary>Sets the shim of SetUpFixtureAttribute.IsValidFixtureType(ITypeInfo typeInfo, String&amp; reason)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSetUpFixtureAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetUpFixtureAttribute.AllInstances.BuildFromITypeInfo">
            <summary>Sets the shim of SetUpFixtureAttribute.BuildFrom(ITypeInfo typeInfo)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSetUpFixtureAttribute.AllInstances.IsValidFixtureTypeITypeInfoStringRef">
            <summary>Sets the shim of SetUpFixtureAttribute.IsValidFixtureType(ITypeInfo typeInfo, String&amp; reason)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSingleThreadedAttribute">
            <summary>Shim type of NUnit.Framework.SingleThreadedAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSingleThreadedAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSingleThreadedAttribute.#ctor(NUnit.Framework.SingleThreadedAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSingleThreadedAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSingleThreadedAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSingleThreadedAttribute.Bind(NUnit.Framework.Interfaces.IApplyToContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSingleThreadedAttribute.ApplyToContextTestExecutionContext">
            <summary>Sets the shim of SingleThreadedAttribute.ApplyToContext(TestExecutionContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSingleThreadedAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSingleThreadedAttribute.Constructor">
            <summary>Sets the shim of SingleThreadedAttribute.SingleThreadedAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSingleThreadedAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSingleThreadedAttribute.AllInstances.ApplyToContextTestExecutionContext">
            <summary>Sets the shim of SingleThreadedAttribute.ApplyToContext(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimStringAssert">
            <summary>Shim type of NUnit.Framework.StringAssert</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimStringAssert.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimStringAssert.#ctor(NUnit.Framework.StringAssert)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimStringAssert.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimStringAssert.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.AreEqualIgnoringCaseStringString">
            <summary>Sets the shim of StringAssert.AreEqualIgnoringCase(String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.AreEqualIgnoringCaseStringStringStringObjectArray">
            <summary>Sets the shim of StringAssert.AreEqualIgnoringCase(String expected, String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.AreNotEqualIgnoringCaseStringString">
            <summary>Sets the shim of StringAssert.AreNotEqualIgnoringCase(String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.AreNotEqualIgnoringCaseStringStringStringObjectArray">
            <summary>Sets the shim of StringAssert.AreNotEqualIgnoringCase(String expected, String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.Constructor">
            <summary>Sets the shim of StringAssert.StringAssert()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.ContainsStringString">
            <summary>Sets the shim of StringAssert.Contains(String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.ContainsStringStringStringObjectArray">
            <summary>Sets the shim of StringAssert.Contains(String expected, String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.DoesNotContainStringString">
            <summary>Sets the shim of StringAssert.DoesNotContain(String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.DoesNotContainStringStringStringObjectArray">
            <summary>Sets the shim of StringAssert.DoesNotContain(String expected, String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.DoesNotEndWithStringString">
            <summary>Sets the shim of StringAssert.DoesNotEndWith(String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.DoesNotEndWithStringStringStringObjectArray">
            <summary>Sets the shim of StringAssert.DoesNotEndWith(String expected, String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.DoesNotMatchStringString">
            <summary>Sets the shim of StringAssert.DoesNotMatch(String pattern, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.DoesNotMatchStringStringStringObjectArray">
            <summary>Sets the shim of StringAssert.DoesNotMatch(String pattern, String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.DoesNotStartWithStringString">
            <summary>Sets the shim of StringAssert.DoesNotStartWith(String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.DoesNotStartWithStringStringStringObjectArray">
            <summary>Sets the shim of StringAssert.DoesNotStartWith(String expected, String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.EndsWithStringString">
            <summary>Sets the shim of StringAssert.EndsWith(String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.EndsWithStringStringStringObjectArray">
            <summary>Sets the shim of StringAssert.EndsWith(String expected, String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.EqualsObjectObject">
            <summary>Sets the shim of StringAssert.Equals(Object a, Object b)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.IsMatchStringString">
            <summary>Sets the shim of StringAssert.IsMatch(String pattern, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.IsMatchStringStringStringObjectArray">
            <summary>Sets the shim of StringAssert.IsMatch(String pattern, String actual, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.ReferenceEqualsObjectObject">
            <summary>Sets the shim of StringAssert.ReferenceEquals(Object a, Object b)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.StartsWithStringString">
            <summary>Sets the shim of StringAssert.StartsWith(String expected, String actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimStringAssert.StartsWithStringStringStringObjectArray">
            <summary>Sets the shim of StringAssert.StartsWith(String expected, String actual, String message, Object[] args)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimStringAssert.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSuccessException">
            <summary>Shim type of NUnit.Framework.SuccessException</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSuccessException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSuccessException.#ctor(NUnit.Framework.SuccessException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSuccessException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSuccessException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimSuccessException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSuccessException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSuccessException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of SuccessException.SuccessException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSuccessException.ConstructorString">
            <summary>Sets the shim of SuccessException.SuccessException(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSuccessException.ConstructorStringException">
            <summary>Sets the shim of SuccessException.SuccessException(String message, Exception inner)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSuccessException.ResultStateGet">
            <summary>Sets the shim of SuccessException.get_ResultState()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimSuccessException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimSuccessException.AllInstances.ResultStateGet">
            <summary>Sets the shim of SuccessException.get_ResultState()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTearDownAttribute">
            <summary>Shim type of NUnit.Framework.TearDownAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTearDownAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTearDownAttribute.#ctor(NUnit.Framework.TearDownAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTearDownAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTearDownAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTearDownAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTearDownAttribute.Constructor">
            <summary>Sets the shim of TearDownAttribute.TearDownAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTearDownAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestActionAttribute">
            <summary>Shim type of NUnit.Framework.TestActionAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestActionAttribute.#ctor(NUnit.Framework.TestActionAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestActionAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestActionAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestActionAttribute.Bind(NUnit.Framework.ITestAction)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestActionAttribute.AfterTestITest">
            <summary>Sets the shim of TestActionAttribute.AfterTest(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestActionAttribute.BeforeTestITest">
            <summary>Sets the shim of TestActionAttribute.BeforeTest(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestActionAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestActionAttribute.Constructor">
            <summary>Sets the shim of TestActionAttribute.TestActionAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestActionAttribute.TargetsGet">
            <summary>Sets the shim of TestActionAttribute.get_Targets()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestActionAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestActionAttribute.AllInstances.AfterTestITest">
            <summary>Sets the shim of TestActionAttribute.AfterTest(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestActionAttribute.AllInstances.BeforeTestITest">
            <summary>Sets the shim of TestActionAttribute.BeforeTest(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestActionAttribute.AllInstances.TargetsGet">
            <summary>Sets the shim of TestActionAttribute.get_Targets()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestAssemblyDirectoryResolveAttribute">
            <summary>Shim type of NUnit.Framework.TestAssemblyDirectoryResolveAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestAssemblyDirectoryResolveAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestAssemblyDirectoryResolveAttribute.#ctor(NUnit.Framework.TestAssemblyDirectoryResolveAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestAssemblyDirectoryResolveAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestAssemblyDirectoryResolveAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAssemblyDirectoryResolveAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAssemblyDirectoryResolveAttribute.Constructor">
            <summary>Sets the shim of TestAssemblyDirectoryResolveAttribute.TestAssemblyDirectoryResolveAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestAssemblyDirectoryResolveAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestAttribute">
            <summary>Shim type of NUnit.Framework.TestAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestAttribute.#ctor(NUnit.Framework.TestAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestAttribute.Bind(NUnit.Framework.Interfaces.IImplyFixture)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestAttribute.Bind(NUnit.Framework.Interfaces.ISimpleTestBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.ApplyToTestTest">
            <summary>Sets the shim of TestAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.AuthorGet">
            <summary>Sets the shim of TestAttribute.get_Author()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.AuthorSetString">
            <summary>Sets the shim of TestAttribute.set_Author(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.BuildFromIMethodInfoTest">
            <summary>Sets the shim of TestAttribute.BuildFrom(IMethodInfo method, Test suite)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.Constructor">
            <summary>Sets the shim of TestAttribute.TestAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.DescriptionGet">
            <summary>Sets the shim of TestAttribute.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.DescriptionSetString">
            <summary>Sets the shim of TestAttribute.set_Description(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.ExpectedResultGet">
            <summary>Sets the shim of TestAttribute.get_ExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.ExpectedResultSetObject">
            <summary>Sets the shim of TestAttribute.set_ExpectedResult(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.HasExpectedResultGet">
            <summary>Sets the shim of TestAttribute.get_HasExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.HasExpectedResultSetBoolean">
            <summary>Sets the shim of TestAttribute.set_HasExpectedResult(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.TestOfGet">
            <summary>Sets the shim of TestAttribute.get_TestOf()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.TestOfSetType">
            <summary>Sets the shim of TestAttribute.set_TestOf(Type value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.AllInstances.ApplyToTestTest">
            <summary>Sets the shim of TestAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.AllInstances.AuthorGet">
            <summary>Sets the shim of TestAttribute.get_Author()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.AllInstances.AuthorSetString">
            <summary>Sets the shim of TestAttribute.set_Author(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.AllInstances.BuildFromIMethodInfoTest">
            <summary>Sets the shim of TestAttribute.BuildFrom(IMethodInfo method, Test suite)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.AllInstances.DescriptionGet">
            <summary>Sets the shim of TestAttribute.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.AllInstances.DescriptionSetString">
            <summary>Sets the shim of TestAttribute.set_Description(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.AllInstances.ExpectedResultGet">
            <summary>Sets the shim of TestAttribute.get_ExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.AllInstances.ExpectedResultSetObject">
            <summary>Sets the shim of TestAttribute.set_ExpectedResult(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.AllInstances.HasExpectedResultGet">
            <summary>Sets the shim of TestAttribute.get_HasExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.AllInstances.HasExpectedResultSetBoolean">
            <summary>Sets the shim of TestAttribute.set_HasExpectedResult(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.AllInstances.TestOfGet">
            <summary>Sets the shim of TestAttribute.get_TestOf()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestAttribute.AllInstances.TestOfSetType">
            <summary>Sets the shim of TestAttribute.set_TestOf(Type value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestCaseAttribute">
            <summary>Shim type of NUnit.Framework.TestCaseAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseAttribute.#ctor(NUnit.Framework.TestCaseAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseAttribute.Bind(NUnit.Framework.Interfaces.IImplyFixture)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseAttribute.Bind(NUnit.Framework.Interfaces.ITestBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseAttribute.Bind(NUnit.Framework.Interfaces.ITestCaseData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseAttribute.Bind(NUnit.Framework.Interfaces.ITestData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ArgumentsGet">
            <summary>Sets the shim of TestCaseAttribute.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ArgumentsSetObjectArray">
            <summary>Sets the shim of TestCaseAttribute.set_Arguments(Object[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AuthorGet">
            <summary>Sets the shim of TestCaseAttribute.get_Author()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AuthorSetString">
            <summary>Sets the shim of TestCaseAttribute.set_Author(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.BuildFromIMethodInfoTest">
            <summary>Sets the shim of TestCaseAttribute.BuildFrom(IMethodInfo method, Test suite)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.CategoryGet">
            <summary>Sets the shim of TestCaseAttribute.get_Category()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.CategorySetString">
            <summary>Sets the shim of TestCaseAttribute.set_Category(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ConstructorObject">
            <summary>Sets the shim of TestCaseAttribute.TestCaseAttribute(Object arg)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ConstructorObjectArray">
            <summary>Sets the shim of TestCaseAttribute.TestCaseAttribute(Object[] arguments)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ConstructorObjectObject">
            <summary>Sets the shim of TestCaseAttribute.TestCaseAttribute(Object arg1, Object arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ConstructorObjectObjectObject">
            <summary>Sets the shim of TestCaseAttribute.TestCaseAttribute(Object arg1, Object arg2, Object arg3)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.DescriptionGet">
            <summary>Sets the shim of TestCaseAttribute.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.DescriptionSetString">
            <summary>Sets the shim of TestCaseAttribute.set_Description(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ExcludePlatformGet">
            <summary>Sets the shim of TestCaseAttribute.get_ExcludePlatform()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ExcludePlatformSetString">
            <summary>Sets the shim of TestCaseAttribute.set_ExcludePlatform(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ExpectedResultGet">
            <summary>Sets the shim of TestCaseAttribute.get_ExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ExpectedResultSetObject">
            <summary>Sets the shim of TestCaseAttribute.set_ExpectedResult(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ExplicitGet">
            <summary>Sets the shim of TestCaseAttribute.get_Explicit()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ExplicitSetBoolean">
            <summary>Sets the shim of TestCaseAttribute.set_Explicit(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.GetParametersForTestCaseIMethodInfo">
            <summary>Sets the shim of TestCaseAttribute.GetParametersForTestCase(IMethodInfo method)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.HasExpectedResultGet">
            <summary>Sets the shim of TestCaseAttribute.get_HasExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.HasExpectedResultSetBoolean">
            <summary>Sets the shim of TestCaseAttribute.set_HasExpectedResult(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.IgnoreGet">
            <summary>Sets the shim of TestCaseAttribute.get_Ignore()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.IgnoreReasonGet">
            <summary>Sets the shim of TestCaseAttribute.get_IgnoreReason()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.IgnoreReasonSetString">
            <summary>Sets the shim of TestCaseAttribute.set_IgnoreReason(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.IgnoreSetString">
            <summary>Sets the shim of TestCaseAttribute.set_Ignore(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.IncludePlatformGet">
            <summary>Sets the shim of TestCaseAttribute.get_IncludePlatform()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.IncludePlatformSetString">
            <summary>Sets the shim of TestCaseAttribute.set_IncludePlatform(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.PerformSpecialConversionsObjectArrayIParameterInfoArray">
            <summary>Sets the shim of TestCaseAttribute.PerformSpecialConversions(Object[] arglist, IParameterInfo[] parameters)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.PropertiesGet">
            <summary>Sets the shim of TestCaseAttribute.get_Properties()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.PropertiesSetIPropertyBag">
            <summary>Sets the shim of TestCaseAttribute.set_Properties(IPropertyBag value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ReasonGet">
            <summary>Sets the shim of TestCaseAttribute.get_Reason()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.ReasonSetString">
            <summary>Sets the shim of TestCaseAttribute.set_Reason(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.RunStateGet">
            <summary>Sets the shim of TestCaseAttribute.get_RunState()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.RunStateSetRunState">
            <summary>Sets the shim of TestCaseAttribute.set_RunState(RunState value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.TestNameGet">
            <summary>Sets the shim of TestCaseAttribute.get_TestName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.TestNameSetString">
            <summary>Sets the shim of TestCaseAttribute.set_TestName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.TestOfGet">
            <summary>Sets the shim of TestCaseAttribute.get_TestOf()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.TestOfSetType">
            <summary>Sets the shim of TestCaseAttribute.set_TestOf(Type value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ArgumentsGet">
            <summary>Sets the shim of TestCaseAttribute.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ArgumentsSetObjectArray">
            <summary>Sets the shim of TestCaseAttribute.set_Arguments(Object[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.AuthorGet">
            <summary>Sets the shim of TestCaseAttribute.get_Author()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.AuthorSetString">
            <summary>Sets the shim of TestCaseAttribute.set_Author(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.BuildFromIMethodInfoTest">
            <summary>Sets the shim of TestCaseAttribute.BuildFrom(IMethodInfo method, Test suite)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.CategoryGet">
            <summary>Sets the shim of TestCaseAttribute.get_Category()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.CategorySetString">
            <summary>Sets the shim of TestCaseAttribute.set_Category(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.DescriptionGet">
            <summary>Sets the shim of TestCaseAttribute.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.DescriptionSetString">
            <summary>Sets the shim of TestCaseAttribute.set_Description(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ExcludePlatformGet">
            <summary>Sets the shim of TestCaseAttribute.get_ExcludePlatform()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ExcludePlatformSetString">
            <summary>Sets the shim of TestCaseAttribute.set_ExcludePlatform(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ExpectedResultGet">
            <summary>Sets the shim of TestCaseAttribute.get_ExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ExpectedResultSetObject">
            <summary>Sets the shim of TestCaseAttribute.set_ExpectedResult(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ExplicitGet">
            <summary>Sets the shim of TestCaseAttribute.get_Explicit()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ExplicitSetBoolean">
            <summary>Sets the shim of TestCaseAttribute.set_Explicit(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.GetParametersForTestCaseIMethodInfo">
            <summary>Sets the shim of TestCaseAttribute.GetParametersForTestCase(IMethodInfo method)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.HasExpectedResultGet">
            <summary>Sets the shim of TestCaseAttribute.get_HasExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.HasExpectedResultSetBoolean">
            <summary>Sets the shim of TestCaseAttribute.set_HasExpectedResult(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.IgnoreGet">
            <summary>Sets the shim of TestCaseAttribute.get_Ignore()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.IgnoreReasonGet">
            <summary>Sets the shim of TestCaseAttribute.get_IgnoreReason()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.IgnoreReasonSetString">
            <summary>Sets the shim of TestCaseAttribute.set_IgnoreReason(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.IgnoreSetString">
            <summary>Sets the shim of TestCaseAttribute.set_Ignore(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.IncludePlatformGet">
            <summary>Sets the shim of TestCaseAttribute.get_IncludePlatform()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.IncludePlatformSetString">
            <summary>Sets the shim of TestCaseAttribute.set_IncludePlatform(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.PropertiesGet">
            <summary>Sets the shim of TestCaseAttribute.get_Properties()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.PropertiesSetIPropertyBag">
            <summary>Sets the shim of TestCaseAttribute.set_Properties(IPropertyBag value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ReasonGet">
            <summary>Sets the shim of TestCaseAttribute.get_Reason()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.ReasonSetString">
            <summary>Sets the shim of TestCaseAttribute.set_Reason(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.RunStateGet">
            <summary>Sets the shim of TestCaseAttribute.get_RunState()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.RunStateSetRunState">
            <summary>Sets the shim of TestCaseAttribute.set_RunState(RunState value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.TestNameGet">
            <summary>Sets the shim of TestCaseAttribute.get_TestName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.TestNameSetString">
            <summary>Sets the shim of TestCaseAttribute.set_TestName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.TestOfGet">
            <summary>Sets the shim of TestCaseAttribute.get_TestOf()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseAttribute.AllInstances.TestOfSetType">
            <summary>Sets the shim of TestCaseAttribute.set_TestOf(Type value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestCaseData">
            <summary>Shim type of NUnit.Framework.TestCaseData</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseData.#ctor(NUnit.Framework.TestCaseData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseData.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseData.Bind(NUnit.Framework.Interfaces.ITestCaseData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseData.Bind(NUnit.Framework.Interfaces.ITestData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.ConstructorObject">
            <summary>Sets the shim of TestCaseData.TestCaseData(Object arg)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.ConstructorObjectArray">
            <summary>Sets the shim of TestCaseData.TestCaseData(Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.ConstructorObjectObject">
            <summary>Sets the shim of TestCaseData.TestCaseData(Object arg1, Object arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.ConstructorObjectObjectObject">
            <summary>Sets the shim of TestCaseData.TestCaseData(Object arg1, Object arg2, Object arg3)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.Explicit">
            <summary>Sets the shim of TestCaseData.Explicit()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.ExplicitString">
            <summary>Sets the shim of TestCaseData.Explicit(String reason)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.IgnoreString">
            <summary>Sets the shim of TestCaseData.Ignore(String reason)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.ReturnsObject">
            <summary>Sets the shim of TestCaseData.Returns(Object result)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.SetCategoryString">
            <summary>Sets the shim of TestCaseData.SetCategory(String category)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.SetDescriptionString">
            <summary>Sets the shim of TestCaseData.SetDescription(String description)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.SetNameString">
            <summary>Sets the shim of TestCaseData.SetName(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.SetPropertyStringDouble">
            <summary>Sets the shim of TestCaseData.SetProperty(String propName, Double propValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.SetPropertyStringInt32">
            <summary>Sets the shim of TestCaseData.SetProperty(String propName, Int32 propValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.SetPropertyStringString">
            <summary>Sets the shim of TestCaseData.SetProperty(String propName, String propValue)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.Explicit">
            <summary>Sets the shim of TestCaseData.Explicit()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.ExplicitString">
            <summary>Sets the shim of TestCaseData.Explicit(String reason)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.IgnoreString">
            <summary>Sets the shim of TestCaseData.Ignore(String reason)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.ReturnsObject">
            <summary>Sets the shim of TestCaseData.Returns(Object result)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.SetCategoryString">
            <summary>Sets the shim of TestCaseData.SetCategory(String category)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.SetDescriptionString">
            <summary>Sets the shim of TestCaseData.SetDescription(String description)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.SetNameString">
            <summary>Sets the shim of TestCaseData.SetName(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.SetPropertyStringDouble">
            <summary>Sets the shim of TestCaseData.SetProperty(String propName, Double propValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.SetPropertyStringInt32">
            <summary>Sets the shim of TestCaseData.SetProperty(String propName, Int32 propValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseData.AllInstances.SetPropertyStringString">
            <summary>Sets the shim of TestCaseData.SetProperty(String propName, String propValue)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute">
            <summary>Shim type of NUnit.Framework.TestCaseSourceAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.#ctor(NUnit.Framework.TestCaseSourceAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.Bind(NUnit.Framework.Interfaces.IImplyFixture)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.Bind(NUnit.Framework.Interfaces.ITestBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.BuildFromIMethodInfoTest">
            <summary>Sets the shim of TestCaseSourceAttribute.BuildFrom(IMethodInfo method, Test suite)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.CategoryGet">
            <summary>Sets the shim of TestCaseSourceAttribute.get_Category()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.CategorySetString">
            <summary>Sets the shim of TestCaseSourceAttribute.set_Category(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.ConstructorString">
            <summary>Sets the shim of TestCaseSourceAttribute.TestCaseSourceAttribute(String sourceName)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.ConstructorStringObjectArray">
            <summary>Sets the shim of TestCaseSourceAttribute.TestCaseSourceAttribute(String sourceName, Object[] methodParams)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.ConstructorType">
            <summary>Sets the shim of TestCaseSourceAttribute.TestCaseSourceAttribute(Type sourceType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.ConstructorTypeString">
            <summary>Sets the shim of TestCaseSourceAttribute.TestCaseSourceAttribute(Type sourceType, String sourceName)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.ConstructorTypeStringObjectArray">
            <summary>Sets the shim of TestCaseSourceAttribute.TestCaseSourceAttribute(Type sourceType, String sourceName, Object[] methodParams)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.GetTestCaseSourceIMethodInfo">
            <summary>Sets the shim of TestCaseSourceAttribute.GetTestCaseSource(IMethodInfo method)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.GetTestCasesForIMethodInfo">
            <summary>Sets the shim of TestCaseSourceAttribute.GetTestCasesFor(IMethodInfo method)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.MethodParamsGet">
            <summary>Sets the shim of TestCaseSourceAttribute.get_MethodParams()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.MethodParamsSetObjectArray">
            <summary>Sets the shim of TestCaseSourceAttribute.set_MethodParams(Object[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.ReturnErrorAsParameterString">
            <summary>Sets the shim of TestCaseSourceAttribute.ReturnErrorAsParameter(String errorMessage)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.SourceNameGet">
            <summary>Sets the shim of TestCaseSourceAttribute.get_SourceName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.SourceNameSetString">
            <summary>Sets the shim of TestCaseSourceAttribute.set_SourceName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.SourceTypeGet">
            <summary>Sets the shim of TestCaseSourceAttribute.get_SourceType()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.SourceTypeSetType">
            <summary>Sets the shim of TestCaseSourceAttribute.set_SourceType(Type value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.AllInstances.BuildFromIMethodInfoTest">
            <summary>Sets the shim of TestCaseSourceAttribute.BuildFrom(IMethodInfo method, Test suite)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.AllInstances.CategoryGet">
            <summary>Sets the shim of TestCaseSourceAttribute.get_Category()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.AllInstances.CategorySetString">
            <summary>Sets the shim of TestCaseSourceAttribute.set_Category(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.AllInstances.GetTestCaseSourceIMethodInfo">
            <summary>Sets the shim of TestCaseSourceAttribute.GetTestCaseSource(IMethodInfo method)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.AllInstances.GetTestCasesForIMethodInfo">
            <summary>Sets the shim of TestCaseSourceAttribute.GetTestCasesFor(IMethodInfo method)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.AllInstances.MethodParamsGet">
            <summary>Sets the shim of TestCaseSourceAttribute.get_MethodParams()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.AllInstances.MethodParamsSetObjectArray">
            <summary>Sets the shim of TestCaseSourceAttribute.set_MethodParams(Object[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.AllInstances.SourceNameGet">
            <summary>Sets the shim of TestCaseSourceAttribute.get_SourceName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.AllInstances.SourceNameSetString">
            <summary>Sets the shim of TestCaseSourceAttribute.set_SourceName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.AllInstances.SourceTypeGet">
            <summary>Sets the shim of TestCaseSourceAttribute.get_SourceType()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestCaseSourceAttribute.AllInstances.SourceTypeSetType">
            <summary>Sets the shim of TestCaseSourceAttribute.set_SourceType(Type value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestContext">
            <summary>Shim type of NUnit.Framework.TestContext</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.#ctor(NUnit.Framework.TestContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.AddFormatterOf1ValueFormatter``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.Constraints.ValueFormatter})">
            <summary>Sets the shim of TestContext.AddFormatter(ValueFormatter formatter)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.AddFormatterValueFormatterFactory">
            <summary>Sets the shim of TestContext.AddFormatter(ValueFormatterFactory formatterFactory)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.AddTestAttachmentStringString">
            <summary>Sets the shim of TestContext.AddTestAttachment(String filePath, String description)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ConstructorTestExecutionContext">
            <summary>Sets the shim of TestContext.TestContext(TestExecutionContext testExecutionContext)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.CurrentContextGet">
            <summary>Sets the shim of TestContext.get_CurrentContext()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.OutGet">
            <summary>Sets the shim of TestContext.get_Out()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.RandomGet">
            <summary>Sets the shim of TestContext.get_Random()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ResultGet">
            <summary>Sets the shim of TestContext.get_Result()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.StaticConstructor">
            <summary>Sets the shim of TestContext.TestContext()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.TestDirectoryGet">
            <summary>Sets the shim of TestContext.get_TestDirectory()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.TestGet">
            <summary>Sets the shim of TestContext.get_Test()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WorkDirectoryGet">
            <summary>Sets the shim of TestContext.get_WorkDirectory()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WorkerIdGet">
            <summary>Sets the shim of TestContext.get_WorkerId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteBoolean">
            <summary>Sets the shim of TestContext.Write(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteChar">
            <summary>Sets the shim of TestContext.Write(Char value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteCharArray">
            <summary>Sets the shim of TestContext.Write(Char[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteDecimal">
            <summary>Sets the shim of TestContext.Write(Decimal value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteDouble">
            <summary>Sets the shim of TestContext.Write(Double value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteInt32">
            <summary>Sets the shim of TestContext.Write(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteInt64">
            <summary>Sets the shim of TestContext.Write(Int64 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteLine">
            <summary>Sets the shim of TestContext.WriteLine()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteLineBoolean">
            <summary>Sets the shim of TestContext.WriteLine(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteLineChar">
            <summary>Sets the shim of TestContext.WriteLine(Char value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteLineCharArray">
            <summary>Sets the shim of TestContext.WriteLine(Char[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteLineDecimal">
            <summary>Sets the shim of TestContext.WriteLine(Decimal value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteLineDouble">
            <summary>Sets the shim of TestContext.WriteLine(Double value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteLineInt32">
            <summary>Sets the shim of TestContext.WriteLine(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteLineInt64">
            <summary>Sets the shim of TestContext.WriteLine(Int64 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteLineObject">
            <summary>Sets the shim of TestContext.WriteLine(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteLineSingle">
            <summary>Sets the shim of TestContext.WriteLine(Single value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteLineString">
            <summary>Sets the shim of TestContext.WriteLine(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteLineStringObject">
            <summary>Sets the shim of TestContext.WriteLine(String format, Object arg1)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteLineStringObjectArray">
            <summary>Sets the shim of TestContext.WriteLine(String format, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteLineStringObjectObject">
            <summary>Sets the shim of TestContext.WriteLine(String format, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteLineStringObjectObjectObject">
            <summary>Sets the shim of TestContext.WriteLine(String format, Object arg1, Object arg2, Object arg3)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteLineUInt32">
            <summary>Sets the shim of TestContext.WriteLine(UInt32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteLineUInt64">
            <summary>Sets the shim of TestContext.WriteLine(UInt64 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteObject">
            <summary>Sets the shim of TestContext.Write(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteSingle">
            <summary>Sets the shim of TestContext.Write(Single value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteString">
            <summary>Sets the shim of TestContext.Write(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteStringObject">
            <summary>Sets the shim of TestContext.Write(String format, Object arg1)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteStringObjectArray">
            <summary>Sets the shim of TestContext.Write(String format, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteStringObjectObject">
            <summary>Sets the shim of TestContext.Write(String format, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteStringObjectObjectObject">
            <summary>Sets the shim of TestContext.Write(String format, Object arg1, Object arg2, Object arg3)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteUInt32">
            <summary>Sets the shim of TestContext.Write(UInt32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.WriteUInt64">
            <summary>Sets the shim of TestContext.Write(UInt64 value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.AllInstances.RandomGet">
            <summary>Sets the shim of TestContext.get_Random()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.AllInstances.ResultGet">
            <summary>Sets the shim of TestContext.get_Result()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.AllInstances.TestDirectoryGet">
            <summary>Sets the shim of TestContext.get_TestDirectory()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.AllInstances.TestGet">
            <summary>Sets the shim of TestContext.get_Test()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.AllInstances.WorkDirectoryGet">
            <summary>Sets the shim of TestContext.get_WorkDirectory()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.AllInstances.WorkerIdGet">
            <summary>Sets the shim of TestContext.get_WorkerId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter">
            <summary>Shim type of NUnit.Framework.TestContext+ResultAdapter</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.#ctor(NUnit.Framework.TestContext.ResultAdapter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.ConstructorTestResult">
            <summary>Sets the shim of ResultAdapter.ResultAdapter(TestResult result)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.FailCountGet">
            <summary>Sets the shim of ResultAdapter.get_FailCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.InconclusiveCountGet">
            <summary>Sets the shim of ResultAdapter.get_InconclusiveCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.MessageGet">
            <summary>Sets the shim of ResultAdapter.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.OutcomeGet">
            <summary>Sets the shim of ResultAdapter.get_Outcome()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.PassCountGet">
            <summary>Sets the shim of ResultAdapter.get_PassCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.SkipCountGet">
            <summary>Sets the shim of ResultAdapter.get_SkipCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.StackTraceGet">
            <summary>Sets the shim of ResultAdapter.get_StackTrace()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.WarningCountGet">
            <summary>Sets the shim of ResultAdapter.get_WarningCount()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.AllInstances.FailCountGet">
            <summary>Sets the shim of ResultAdapter.get_FailCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.AllInstances.InconclusiveCountGet">
            <summary>Sets the shim of ResultAdapter.get_InconclusiveCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.AllInstances.MessageGet">
            <summary>Sets the shim of ResultAdapter.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.AllInstances.OutcomeGet">
            <summary>Sets the shim of ResultAdapter.get_Outcome()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.AllInstances.PassCountGet">
            <summary>Sets the shim of ResultAdapter.get_PassCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.AllInstances.SkipCountGet">
            <summary>Sets the shim of ResultAdapter.get_SkipCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.AllInstances.StackTraceGet">
            <summary>Sets the shim of ResultAdapter.get_StackTrace()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimResultAdapter.AllInstances.WarningCountGet">
            <summary>Sets the shim of ResultAdapter.get_WarningCount()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter">
            <summary>Shim type of NUnit.Framework.TestContext+TestAdapter</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.#ctor(NUnit.Framework.TestContext.TestAdapter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.ArgumentsGet">
            <summary>Sets the shim of TestAdapter.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.ClassNameGet">
            <summary>Sets the shim of TestAdapter.get_ClassName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.ConstructorTest">
            <summary>Sets the shim of TestAdapter.TestAdapter(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.FullNameGet">
            <summary>Sets the shim of TestAdapter.get_FullName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.IDGet">
            <summary>Sets the shim of TestAdapter.get_ID()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.MethodNameGet">
            <summary>Sets the shim of TestAdapter.get_MethodName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.NameGet">
            <summary>Sets the shim of TestAdapter.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.PropertiesGet">
            <summary>Sets the shim of TestAdapter.get_Properties()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.AllInstances.ArgumentsGet">
            <summary>Sets the shim of TestAdapter.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.AllInstances.ClassNameGet">
            <summary>Sets the shim of TestAdapter.get_ClassName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.AllInstances.FullNameGet">
            <summary>Sets the shim of TestAdapter.get_FullName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.AllInstances.IDGet">
            <summary>Sets the shim of TestAdapter.get_ID()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.AllInstances.MethodNameGet">
            <summary>Sets the shim of TestAdapter.get_MethodName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.AllInstances.NameGet">
            <summary>Sets the shim of TestAdapter.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestContext.ShimTestAdapter.AllInstances.PropertiesGet">
            <summary>Sets the shim of TestAdapter.get_Properties()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestFixtureAttribute">
            <summary>Shim type of NUnit.Framework.TestFixtureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureAttribute.#ctor(NUnit.Framework.TestFixtureAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureAttribute.Bind(NUnit.Framework.Interfaces.IFixtureBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureAttribute.Bind(NUnit.Framework.Interfaces.ITestData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureAttribute.Bind(NUnit.Framework.Interfaces.ITestFixtureData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.ArgumentsGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.ArgumentsSetObjectArray">
            <summary>Sets the shim of TestFixtureAttribute.set_Arguments(Object[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AuthorGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Author()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AuthorSetString">
            <summary>Sets the shim of TestFixtureAttribute.set_Author(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.BuildFromITypeInfo">
            <summary>Sets the shim of TestFixtureAttribute.BuildFrom(ITypeInfo typeInfo)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.CategoryGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Category()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.CategorySetString">
            <summary>Sets the shim of TestFixtureAttribute.set_Category(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.Constructor">
            <summary>Sets the shim of TestFixtureAttribute.TestFixtureAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.ConstructorObjectArray">
            <summary>Sets the shim of TestFixtureAttribute.TestFixtureAttribute(Object[] arguments)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.DescriptionGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.DescriptionSetString">
            <summary>Sets the shim of TestFixtureAttribute.set_Description(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.ExplicitGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Explicit()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.ExplicitSetBoolean">
            <summary>Sets the shim of TestFixtureAttribute.set_Explicit(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.IgnoreGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Ignore()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.IgnoreReasonGet">
            <summary>Sets the shim of TestFixtureAttribute.get_IgnoreReason()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.IgnoreReasonSetString">
            <summary>Sets the shim of TestFixtureAttribute.set_IgnoreReason(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.IgnoreSetString">
            <summary>Sets the shim of TestFixtureAttribute.set_Ignore(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.PropertiesGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Properties()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.PropertiesSetIPropertyBag">
            <summary>Sets the shim of TestFixtureAttribute.set_Properties(IPropertyBag value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.ReasonGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Reason()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.ReasonSetString">
            <summary>Sets the shim of TestFixtureAttribute.set_Reason(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.RunStateGet">
            <summary>Sets the shim of TestFixtureAttribute.get_RunState()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.RunStateSetRunState">
            <summary>Sets the shim of TestFixtureAttribute.set_RunState(RunState value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.TestNameGet">
            <summary>Sets the shim of TestFixtureAttribute.get_TestName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.TestNameSetString">
            <summary>Sets the shim of TestFixtureAttribute.set_TestName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.TestOfGet">
            <summary>Sets the shim of TestFixtureAttribute.get_TestOf()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.TestOfSetType">
            <summary>Sets the shim of TestFixtureAttribute.set_TestOf(Type value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.TypeArgsGet">
            <summary>Sets the shim of TestFixtureAttribute.get_TypeArgs()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.TypeArgsSetTypeArray">
            <summary>Sets the shim of TestFixtureAttribute.set_TypeArgs(Type[] value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.ArgumentsGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.ArgumentsSetObjectArray">
            <summary>Sets the shim of TestFixtureAttribute.set_Arguments(Object[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.AuthorGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Author()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.AuthorSetString">
            <summary>Sets the shim of TestFixtureAttribute.set_Author(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.BuildFromITypeInfo">
            <summary>Sets the shim of TestFixtureAttribute.BuildFrom(ITypeInfo typeInfo)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.CategoryGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Category()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.CategorySetString">
            <summary>Sets the shim of TestFixtureAttribute.set_Category(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.DescriptionGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.DescriptionSetString">
            <summary>Sets the shim of TestFixtureAttribute.set_Description(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.ExplicitGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Explicit()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.ExplicitSetBoolean">
            <summary>Sets the shim of TestFixtureAttribute.set_Explicit(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.IgnoreGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Ignore()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.IgnoreReasonGet">
            <summary>Sets the shim of TestFixtureAttribute.get_IgnoreReason()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.IgnoreReasonSetString">
            <summary>Sets the shim of TestFixtureAttribute.set_IgnoreReason(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.IgnoreSetString">
            <summary>Sets the shim of TestFixtureAttribute.set_Ignore(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.PropertiesGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Properties()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.PropertiesSetIPropertyBag">
            <summary>Sets the shim of TestFixtureAttribute.set_Properties(IPropertyBag value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.ReasonGet">
            <summary>Sets the shim of TestFixtureAttribute.get_Reason()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.ReasonSetString">
            <summary>Sets the shim of TestFixtureAttribute.set_Reason(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.RunStateGet">
            <summary>Sets the shim of TestFixtureAttribute.get_RunState()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.RunStateSetRunState">
            <summary>Sets the shim of TestFixtureAttribute.set_RunState(RunState value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.TestNameGet">
            <summary>Sets the shim of TestFixtureAttribute.get_TestName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.TestNameSetString">
            <summary>Sets the shim of TestFixtureAttribute.set_TestName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.TestOfGet">
            <summary>Sets the shim of TestFixtureAttribute.get_TestOf()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.TestOfSetType">
            <summary>Sets the shim of TestFixtureAttribute.set_TestOf(Type value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.TypeArgsGet">
            <summary>Sets the shim of TestFixtureAttribute.get_TypeArgs()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureAttribute.AllInstances.TypeArgsSetTypeArray">
            <summary>Sets the shim of TestFixtureAttribute.set_TypeArgs(Type[] value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestFixtureData">
            <summary>Shim type of NUnit.Framework.TestFixtureData</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureData.#ctor(NUnit.Framework.TestFixtureData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureData.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureData.Bind(NUnit.Framework.Interfaces.ITestData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureData.Bind(NUnit.Framework.Interfaces.ITestFixtureData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureData.ConstructorObject">
            <summary>Sets the shim of TestFixtureData.TestFixtureData(Object arg)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureData.ConstructorObjectArray">
            <summary>Sets the shim of TestFixtureData.TestFixtureData(Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureData.ConstructorObjectObject">
            <summary>Sets the shim of TestFixtureData.TestFixtureData(Object arg1, Object arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureData.ConstructorObjectObjectObject">
            <summary>Sets the shim of TestFixtureData.TestFixtureData(Object arg1, Object arg2, Object arg3)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureData.Explicit">
            <summary>Sets the shim of TestFixtureData.Explicit()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureData.ExplicitString">
            <summary>Sets the shim of TestFixtureData.Explicit(String reason)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureData.IgnoreString">
            <summary>Sets the shim of TestFixtureData.Ignore(String reason)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestFixtureData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureData.AllInstances.Explicit">
            <summary>Sets the shim of TestFixtureData.Explicit()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureData.AllInstances.ExplicitString">
            <summary>Sets the shim of TestFixtureData.Explicit(String reason)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureData.AllInstances.IgnoreString">
            <summary>Sets the shim of TestFixtureData.Ignore(String reason)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute">
            <summary>Shim type of NUnit.Framework.TestFixtureSourceAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.#ctor(NUnit.Framework.TestFixtureSourceAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.Bind(NUnit.Framework.Interfaces.IFixtureBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.BuildFromITypeInfo">
            <summary>Sets the shim of TestFixtureSourceAttribute.BuildFrom(ITypeInfo typeInfo)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.CategoryGet">
            <summary>Sets the shim of TestFixtureSourceAttribute.get_Category()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.CategorySetString">
            <summary>Sets the shim of TestFixtureSourceAttribute.set_Category(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.ConstructorString">
            <summary>Sets the shim of TestFixtureSourceAttribute.TestFixtureSourceAttribute(String sourceName)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.ConstructorType">
            <summary>Sets the shim of TestFixtureSourceAttribute.TestFixtureSourceAttribute(Type sourceType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.ConstructorTypeString">
            <summary>Sets the shim of TestFixtureSourceAttribute.TestFixtureSourceAttribute(Type sourceType, String sourceName)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.GetParametersForType">
            <summary>Sets the shim of TestFixtureSourceAttribute.GetParametersFor(Type sourceType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.GetTestFixtureSourceType">
            <summary>Sets the shim of TestFixtureSourceAttribute.GetTestFixtureSource(Type sourceType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.SourceMustBeStaticError">
            <summary>Sets the shim of TestFixtureSourceAttribute.SourceMustBeStaticError()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.SourceNameGet">
            <summary>Sets the shim of TestFixtureSourceAttribute.get_SourceName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.SourceNameSetString">
            <summary>Sets the shim of TestFixtureSourceAttribute.set_SourceName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.SourceTypeGet">
            <summary>Sets the shim of TestFixtureSourceAttribute.get_SourceType()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.SourceTypeSetType">
            <summary>Sets the shim of TestFixtureSourceAttribute.set_SourceType(Type value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.AllInstances.BuildFromITypeInfo">
            <summary>Sets the shim of TestFixtureSourceAttribute.BuildFrom(ITypeInfo typeInfo)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.AllInstances.CategoryGet">
            <summary>Sets the shim of TestFixtureSourceAttribute.get_Category()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.AllInstances.CategorySetString">
            <summary>Sets the shim of TestFixtureSourceAttribute.set_Category(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.AllInstances.GetParametersForType">
            <summary>Sets the shim of TestFixtureSourceAttribute.GetParametersFor(Type sourceType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.AllInstances.GetTestFixtureSourceType">
            <summary>Sets the shim of TestFixtureSourceAttribute.GetTestFixtureSource(Type sourceType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.AllInstances.SourceNameGet">
            <summary>Sets the shim of TestFixtureSourceAttribute.get_SourceName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.AllInstances.SourceNameSetString">
            <summary>Sets the shim of TestFixtureSourceAttribute.set_SourceName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.AllInstances.SourceTypeGet">
            <summary>Sets the shim of TestFixtureSourceAttribute.get_SourceType()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestFixtureSourceAttribute.AllInstances.SourceTypeSetType">
            <summary>Sets the shim of TestFixtureSourceAttribute.set_SourceType(Type value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestOfAttribute">
            <summary>Shim type of NUnit.Framework.TestOfAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestOfAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestOfAttribute.#ctor(NUnit.Framework.TestOfAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestOfAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestOfAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestOfAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestOfAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestOfAttribute.ConstructorString">
            <summary>Sets the shim of TestOfAttribute.TestOfAttribute(String typeName)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestOfAttribute.ConstructorType">
            <summary>Sets the shim of TestOfAttribute.TestOfAttribute(Type type)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestOfAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestParameters">
            <summary>Shim type of NUnit.Framework.TestParameters</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestParameters.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestParameters.#ctor(NUnit.Framework.TestParameters)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestParameters.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestParameters.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestParameters.GetOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0,``0})">
            <summary>Sets the shim of TestParameters.Get(String name, !!0 defaultValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestParameters.AddStringString">
            <summary>Sets the shim of TestParameters.Add(String name, String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestParameters.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestParameters.Constructor">
            <summary>Sets the shim of TestParameters.TestParameters()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestParameters.CountGet">
            <summary>Sets the shim of TestParameters.get_Count()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestParameters.CreateModifiedInvariantCulture">
            <summary>Sets the shim of TestParameters.CreateModifiedInvariantCulture()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestParameters.ExistsString">
            <summary>Sets the shim of TestParameters.Exists(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestParameters.GetString">
            <summary>Sets the shim of TestParameters.Get(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestParameters.GetStringString">
            <summary>Sets the shim of TestParameters.Get(String name, String defaultValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestParameters.ItemGetString">
            <summary>Sets the shim of TestParameters.get_Item(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestParameters.NamesGet">
            <summary>Sets the shim of TestParameters.get_Names()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestParameters.StaticConstructor">
            <summary>Sets the shim of TestParameters.TestParameters()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTestParameters.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTestParameters.AllInstances.GetOf1StringM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.TestParameters,System.String,``0,``0})">
            <summary>Sets the shim of TestParameters.Get(String name, !!0 defaultValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestParameters.AllInstances.AddStringString">
            <summary>Sets the shim of TestParameters.Add(String name, String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestParameters.AllInstances.CountGet">
            <summary>Sets the shim of TestParameters.get_Count()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestParameters.AllInstances.ExistsString">
            <summary>Sets the shim of TestParameters.Exists(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestParameters.AllInstances.GetString">
            <summary>Sets the shim of TestParameters.Get(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestParameters.AllInstances.GetStringString">
            <summary>Sets the shim of TestParameters.Get(String name, String defaultValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestParameters.AllInstances.ItemGetString">
            <summary>Sets the shim of TestParameters.get_Item(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTestParameters.AllInstances.NamesGet">
            <summary>Sets the shim of TestParameters.get_Names()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTheoryAttribute">
            <summary>Shim type of NUnit.Framework.TheoryAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTheoryAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTheoryAttribute.#ctor(NUnit.Framework.TheoryAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTheoryAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTheoryAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTheoryAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTheoryAttribute.Bind(NUnit.Framework.Interfaces.IImplyFixture)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTheoryAttribute.Bind(NUnit.Framework.Interfaces.ITestBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTheoryAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTheoryAttribute.Constructor">
            <summary>Sets the shim of TheoryAttribute.TheoryAttribute()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTheoryAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimThrows">
            <summary>Shim type of NUnit.Framework.Throws</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimThrows.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimThrows.#ctor(NUnit.Framework.Throws)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimThrows.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimThrows.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimThrows.InstanceOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.InstanceOfTypeConstraint})">
            <summary>Sets the shim of Throws.InstanceOf()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimThrows.TypeOfOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Constraints.ExactTypeConstraint})">
            <summary>Sets the shim of Throws.TypeOf()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimThrows.ArgumentExceptionGet">
            <summary>Sets the shim of Throws.get_ArgumentException()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimThrows.ArgumentNullExceptionGet">
            <summary>Sets the shim of Throws.get_ArgumentNullException()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimThrows.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimThrows.Constructor">
            <summary>Sets the shim of Throws.Throws()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimThrows.ExceptionGet">
            <summary>Sets the shim of Throws.get_Exception()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimThrows.InnerExceptionGet">
            <summary>Sets the shim of Throws.get_InnerException()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimThrows.InstanceOfType">
            <summary>Sets the shim of Throws.InstanceOf(Type expectedType)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimThrows.InvalidOperationExceptionGet">
            <summary>Sets the shim of Throws.get_InvalidOperationException()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimThrows.NothingGet">
            <summary>Sets the shim of Throws.get_Nothing()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimThrows.TargetInvocationExceptionGet">
            <summary>Sets the shim of Throws.get_TargetInvocationException()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimThrows.TypeOfType">
            <summary>Sets the shim of Throws.TypeOf(Type expectedType)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimThrows.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTimeoutAttribute">
            <summary>Shim type of NUnit.Framework.TimeoutAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTimeoutAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTimeoutAttribute.#ctor(NUnit.Framework.TimeoutAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTimeoutAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTimeoutAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTimeoutAttribute.Bind(NUnit.Framework.Interfaces.IApplyToContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimTimeoutAttribute.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTimeoutAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTimeoutAttribute.ConstructorInt32">
            <summary>Sets the shim of TimeoutAttribute.TimeoutAttribute(Int32 timeout)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTimeoutAttribute.NUnitFrameworkInterfacesIApplyToContextApplyToContextTestExecutionContext">
            <summary>Sets the shim of TimeoutAttribute.NUnit.Framework.Interfaces.IApplyToContext.ApplyToContext(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimTimeoutAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimTimeoutAttribute.AllInstances.NUnitFrameworkInterfacesIApplyToContextApplyToContextTestExecutionContext">
            <summary>Sets the shim of TimeoutAttribute.NUnit.Framework.Interfaces.IApplyToContext.ApplyToContext(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimValueSourceAttribute">
            <summary>Shim type of NUnit.Framework.ValueSourceAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimValueSourceAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimValueSourceAttribute.#ctor(NUnit.Framework.ValueSourceAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimValueSourceAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimValueSourceAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimValueSourceAttribute.Bind(NUnit.Framework.Interfaces.IParameterDataSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.ConstructorString">
            <summary>Sets the shim of ValueSourceAttribute.ValueSourceAttribute(String sourceName)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.ConstructorTypeString">
            <summary>Sets the shim of ValueSourceAttribute.ValueSourceAttribute(Type sourceType, String sourceName)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.GetDataIParameterInfo">
            <summary>Sets the shim of ValueSourceAttribute.GetData(IParameterInfo parameter)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.GetDataSourceIParameterInfo">
            <summary>Sets the shim of ValueSourceAttribute.GetDataSource(IParameterInfo parameter)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.GetDataSourceValueMemberInfoArray">
            <summary>Sets the shim of ValueSourceAttribute.GetDataSourceValue(MemberInfo[] members)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.SourceNameGet">
            <summary>Sets the shim of ValueSourceAttribute.get_SourceName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.SourceNameSetString">
            <summary>Sets the shim of ValueSourceAttribute.set_SourceName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.SourceTypeGet">
            <summary>Sets the shim of ValueSourceAttribute.get_SourceType()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.SourceTypeSetType">
            <summary>Sets the shim of ValueSourceAttribute.set_SourceType(Type value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.ThrowInvalidDataSourceException">
            <summary>Sets the shim of ValueSourceAttribute.ThrowInvalidDataSourceException()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimValueSourceAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.AllInstances.GetDataIParameterInfo">
            <summary>Sets the shim of ValueSourceAttribute.GetData(IParameterInfo parameter)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.AllInstances.GetDataSourceIParameterInfo">
            <summary>Sets the shim of ValueSourceAttribute.GetDataSource(IParameterInfo parameter)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.AllInstances.SourceNameGet">
            <summary>Sets the shim of ValueSourceAttribute.get_SourceName()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.AllInstances.SourceNameSetString">
            <summary>Sets the shim of ValueSourceAttribute.set_SourceName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.AllInstances.SourceTypeGet">
            <summary>Sets the shim of ValueSourceAttribute.get_SourceType()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValueSourceAttribute.AllInstances.SourceTypeSetType">
            <summary>Sets the shim of ValueSourceAttribute.set_SourceType(Type value)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimValuesAttribute">
            <summary>Shim type of NUnit.Framework.ValuesAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimValuesAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimValuesAttribute.#ctor(NUnit.Framework.ValuesAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimValuesAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimValuesAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimValuesAttribute.Bind(NUnit.Framework.Interfaces.IParameterDataSource)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValuesAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValuesAttribute.Constructor">
            <summary>Sets the shim of ValuesAttribute.ValuesAttribute()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValuesAttribute.ConstructorObject">
            <summary>Sets the shim of ValuesAttribute.ValuesAttribute(Object arg1)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValuesAttribute.ConstructorObjectArray">
            <summary>Sets the shim of ValuesAttribute.ValuesAttribute(Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValuesAttribute.ConstructorObjectObject">
            <summary>Sets the shim of ValuesAttribute.ValuesAttribute(Object arg1, Object arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValuesAttribute.ConstructorObjectObjectObject">
            <summary>Sets the shim of ValuesAttribute.ValuesAttribute(Object arg1, Object arg2, Object arg3)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValuesAttribute.GetDataIParameterInfo">
            <summary>Sets the shim of ValuesAttribute.GetData(IParameterInfo parameter)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValuesAttribute.GetDataType">
            <summary>Sets the shim of ValuesAttribute.GetData(Type targetType)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimValuesAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValuesAttribute.AllInstances.GetDataIParameterInfo">
            <summary>Sets the shim of ValuesAttribute.GetData(IParameterInfo parameter)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimValuesAttribute.AllInstances.GetDataType">
            <summary>Sets the shim of ValuesAttribute.GetData(Type targetType)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimWarn">
            <summary>Shim type of NUnit.Framework.Warn</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimWarn.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimWarn.#ctor(NUnit.Framework.Warn)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimWarn.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimWarn.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimWarn.IfOf1ActualValueDelegateOfM0IResolveConstraint``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint})">
            <summary>Sets the shim of Warn.If(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimWarn.IfOf1ActualValueDelegateOfM0IResolveConstraintFuncOfString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint,System.Func{System.String}})">
            <summary>Sets the shim of Warn.If(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr, Func`1&lt;String&gt; getExceptionMessage)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimWarn.IfOf1ActualValueDelegateOfM0IResolveConstraintStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[]})">
            <summary>Sets the shim of Warn.If(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimWarn.IfOf1M0IResolveConstraint``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,NUnit.Framework.Constraints.IResolveConstraint})">
            <summary>Sets the shim of Warn.If(!!0 actual, IResolveConstraint expression)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimWarn.IfOf1M0IResolveConstraintFuncOfString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,NUnit.Framework.Constraints.IResolveConstraint,System.Func{System.String}})">
            <summary>Sets the shim of Warn.If(!!0 actual, IResolveConstraint expression, Func`1&lt;String&gt; getExceptionMessage)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimWarn.IfOf1M0IResolveConstraintStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[]})">
            <summary>Sets the shim of Warn.If(!!0 actual, IResolveConstraint expression, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimWarn.UnlessOf1ActualValueDelegateOfM0IResolveConstraint``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint})">
            <summary>Sets the shim of Warn.Unless(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimWarn.UnlessOf1ActualValueDelegateOfM0IResolveConstraintFuncOfString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint,System.Func{System.String}})">
            <summary>Sets the shim of Warn.Unless(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr, Func`1&lt;String&gt; getExceptionMessage)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimWarn.UnlessOf1ActualValueDelegateOfM0IResolveConstraintStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{NUnit.Framework.Constraints.ActualValueDelegate{``0},NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[]})">
            <summary>Sets the shim of Warn.Unless(ActualValueDelegate`1&lt;!!0&gt; del, IResolveConstraint expr, String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimWarn.UnlessOf1M0IResolveConstraint``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,NUnit.Framework.Constraints.IResolveConstraint})">
            <summary>Sets the shim of Warn.Unless(!!0 actual, IResolveConstraint expression)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimWarn.UnlessOf1M0IResolveConstraintFuncOfString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,NUnit.Framework.Constraints.IResolveConstraint,System.Func{System.String}})">
            <summary>Sets the shim of Warn.Unless(!!0 actual, IResolveConstraint expression, Func`1&lt;String&gt; getExceptionMessage)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.ShimWarn.UnlessOf1M0IResolveConstraintStringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,NUnit.Framework.Constraints.IResolveConstraint,System.String,System.Object[]})">
            <summary>Sets the shim of Warn.Unless(!!0 actual, IResolveConstraint expression, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimWarn.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimWarn.CheckMultipleAssertLevel">
            <summary>Sets the shim of Warn.CheckMultipleAssertLevel()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimWarn.Constructor">
            <summary>Sets the shim of Warn.Warn()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimWarn.EqualsObjectObject">
            <summary>Sets the shim of Warn.Equals(Object a, Object b)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimWarn.IfBoolean">
            <summary>Sets the shim of Warn.If(Boolean condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimWarn.IfBooleanFuncOfString">
            <summary>Sets the shim of Warn.If(Boolean condition, Func`1&lt;String&gt; getExceptionMessage)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimWarn.IfBooleanStringObjectArray">
            <summary>Sets the shim of Warn.If(Boolean condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimWarn.IfFuncOfBoolean">
            <summary>Sets the shim of Warn.If(Func`1&lt;Boolean&gt; condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimWarn.IfFuncOfBooleanFuncOfString">
            <summary>Sets the shim of Warn.If(Func`1&lt;Boolean&gt; condition, Func`1&lt;String&gt; getExceptionMessage)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimWarn.IfFuncOfBooleanStringObjectArray">
            <summary>Sets the shim of Warn.If(Func`1&lt;Boolean&gt; condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimWarn.IncrementAssertCount">
            <summary>Sets the shim of Warn.IncrementAssertCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimWarn.IssueWarningConstraintResultStringObjectArray">
            <summary>Sets the shim of Warn.IssueWarning(ConstraintResult result, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimWarn.ReferenceEqualsObjectObject">
            <summary>Sets the shim of Warn.ReferenceEquals(Object a, Object b)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimWarn.UnlessBoolean">
            <summary>Sets the shim of Warn.Unless(Boolean condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimWarn.UnlessBooleanFuncOfString">
            <summary>Sets the shim of Warn.Unless(Boolean condition, Func`1&lt;String&gt; getExceptionMessage)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimWarn.UnlessBooleanStringObjectArray">
            <summary>Sets the shim of Warn.Unless(Boolean condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimWarn.UnlessFuncOfBoolean">
            <summary>Sets the shim of Warn.Unless(Func`1&lt;Boolean&gt; condition)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimWarn.UnlessFuncOfBooleanFuncOfString">
            <summary>Sets the shim of Warn.Unless(Func`1&lt;Boolean&gt; condition, Func`1&lt;String&gt; getExceptionMessage)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimWarn.UnlessFuncOfBooleanStringObjectArray">
            <summary>Sets the shim of Warn.Unless(Func`1&lt;Boolean&gt; condition, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.ShimWarn.UnlessTestDelegateIResolveConstraint">
            <summary>Sets the shim of Warn.Unless(TestDelegate code, IResolveConstraint constraint)</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.ShimWarn.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubApartmentAttribute">
            <summary>Stub type of NUnit.Framework.ApartmentAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubApartmentAttribute.#ctor(System.Threading.ApartmentState)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubApartmentAttribute.ApplyToTest(NUnit.Framework.Internal.Test)">
            <summary>Sets the stub of PropertyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubApartmentAttribute.ApplyToTestTest">
            <summary>Sets the stub of PropertyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubApartmentAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubApartmentAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubApartmentAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubApartmentAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubApartmentAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubApartmentAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubApartmentAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubApartmentAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubApartmentAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubApartmentAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubApartmentAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubApartmentAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubApartmentAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubApartmentAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubApartmentAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubAssert">
            <summary>Stub type of NUnit.Framework.Assert</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssert.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssert.InitializeStub">
            <summary>Initializes a new instance of type StubAssert</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssert.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssert.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssert.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubAssertionException">
            <summary>Stub type of NUnit.Framework.AssertionException</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssertionException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssertionException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssertionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssertionException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubAssertionException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssertionException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubAssertionException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAssertionException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssertionException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAssertionException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssertionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAssertionException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAssertionException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAssertionException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssertionException.InitializeStub">
            <summary>Initializes a new instance of type StubAssertionException</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAssertionException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAssertionException.ResultStateGet">
            <summary>Sets the stub of AssertionException.get_ResultState()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAssertionException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAssertionException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAssertionException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssertionException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAssertionException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssertionException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssertionException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssertionException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssertionException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssertionException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssertionException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssertionException.ResultState">
            <summary>Sets the stub of AssertionException.get_ResultState()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssertionException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssertionException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubAssume">
            <summary>Stub type of NUnit.Framework.Assume</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssume.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAssume.InitializeStub">
            <summary>Initializes a new instance of type StubAssume</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssume.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssume.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAssume.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubAuthorAttribute">
            <summary>Stub type of NUnit.Framework.AuthorAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAuthorAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAuthorAttribute.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAuthorAttribute.ApplyToTest(NUnit.Framework.Internal.Test)">
            <summary>Sets the stub of PropertyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAuthorAttribute.ApplyToTestTest">
            <summary>Sets the stub of PropertyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAuthorAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAuthorAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAuthorAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAuthorAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAuthorAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubAuthorAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAuthorAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAuthorAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubAuthorAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAuthorAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubAuthorAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAuthorAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAuthorAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAuthorAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubAuthorAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubCategoryAttribute">
            <summary>Stub type of NUnit.Framework.CategoryAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCategoryAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCategoryAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCategoryAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCategoryAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCategoryAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCategoryAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCategoryAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubCategoryAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCategoryAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCategoryAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCategoryAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCategoryAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCategoryAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCategoryAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCategoryAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCategoryAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCategoryAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubCollectionAssert">
            <summary>Stub type of NUnit.Framework.CollectionAssert</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCollectionAssert.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCollectionAssert.InitializeStub">
            <summary>Initializes a new instance of type StubCollectionAssert</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCollectionAssert.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCollectionAssert.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCollectionAssert.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubCombinatorialAttribute">
            <summary>Stub type of NUnit.Framework.CombinatorialAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCombinatorialAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCombinatorialAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCombinatorialAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCombinatorialAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCombinatorialAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCombinatorialAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubCombinatorialAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCombinatorialAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCombinatorialAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCombinatorialAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCombinatorialAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCombinatorialAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCombinatorialAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCombinatorialAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCombinatorialAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCombinatorialAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubCombiningStrategyAttribute">
            <summary>Stub type of NUnit.Framework.CombiningStrategyAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCombiningStrategyAttribute.#ctor(System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCombiningStrategyAttribute.#ctor(NUnit.Framework.Interfaces.ICombiningStrategy,NUnit.Framework.Interfaces.IParameterDataProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCombiningStrategyAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCombiningStrategyAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCombiningStrategyAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCombiningStrategyAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCombiningStrategyAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubCombiningStrategyAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCombiningStrategyAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCombiningStrategyAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCombiningStrategyAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCombiningStrategyAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCombiningStrategyAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCombiningStrategyAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCombiningStrategyAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCombiningStrategyAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCombiningStrategyAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubContains">
            <summary>Stub type of NUnit.Framework.Contains</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubContains.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubContains.InitializeStub">
            <summary>Initializes a new instance of type StubContains</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubContains.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubContains.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubContains.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubCultureAttribute">
            <summary>Stub type of NUnit.Framework.CultureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCultureAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCultureAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCultureAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCultureAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCultureAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCultureAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCultureAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubCultureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCultureAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCultureAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubCultureAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCultureAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubCultureAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCultureAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCultureAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCultureAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubCultureAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubDataAttribute">
            <summary>Stub type of NUnit.Framework.DataAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDataAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDataAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDataAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDataAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDataAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDataAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubDataAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDataAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDataAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDataAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDataAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDataAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDataAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDataAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDataAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDataAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubDatapointAttribute">
            <summary>Stub type of NUnit.Framework.DatapointAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubDatapointAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDatapointAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDatapointAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDatapointAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDatapointAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubDatapointSourceAttribute">
            <summary>Stub type of NUnit.Framework.DatapointSourceAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointSourceAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointSourceAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointSourceAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointSourceAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointSourceAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointSourceAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubDatapointSourceAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointSourceAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointSourceAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointSourceAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointSourceAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointSourceAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDatapointSourceAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDatapointSourceAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDatapointSourceAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDatapointSourceAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubDatapointsAttribute">
            <summary>Stub type of NUnit.Framework.DatapointsAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointsAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointsAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointsAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointsAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointsAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointsAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubDatapointsAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointsAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointsAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDatapointsAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointsAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDatapointsAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDatapointsAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDatapointsAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDatapointsAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDatapointsAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubDefaultFloatingPointToleranceAttribute">
            <summary>Stub type of NUnit.Framework.DefaultFloatingPointToleranceAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDefaultFloatingPointToleranceAttribute.#ctor(System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDefaultFloatingPointToleranceAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDefaultFloatingPointToleranceAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDefaultFloatingPointToleranceAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDefaultFloatingPointToleranceAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDefaultFloatingPointToleranceAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultFloatingPointToleranceAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDefaultFloatingPointToleranceAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDefaultFloatingPointToleranceAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubDefaultFloatingPointToleranceAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDefaultFloatingPointToleranceAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubDefaultFloatingPointToleranceAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDefaultFloatingPointToleranceAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDefaultFloatingPointToleranceAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDefaultFloatingPointToleranceAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubDefaultFloatingPointToleranceAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubExplicitAttribute">
            <summary>Stub type of NUnit.Framework.ExplicitAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubExplicitAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubExplicitAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubExplicitAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubExplicitAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubExplicitAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubExplicitAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubExplicitAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubExplicitAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubExplicitAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubExplicitAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubExplicitAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubExplicitAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubExplicitAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubExplicitAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubExplicitAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubExplicitAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubExplicitAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubHas">
            <summary>Stub type of NUnit.Framework.Has</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubHas.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubHas.InitializeStub">
            <summary>Initializes a new instance of type StubHas</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubHas.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubHas.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubHas.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubITestAction">
            <summary>Stub type of NUnit.Framework.ITestAction</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubITestAction.#ctor">
            <summary>Initializes a new instance of type StubITestAction</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubITestAction.AfterTestITest">
            <summary>Sets the stub of ITestAction.AfterTest(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubITestAction.BeforeTestITest">
            <summary>Sets the stub of ITestAction.BeforeTest(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubITestAction.n::NUnit#Framework#ITestAction#AfterTest(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of ITestAction.AfterTest(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubITestAction.n::NUnit#Framework#ITestAction#BeforeTest(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of ITestAction.BeforeTest(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubITestAction.TargetsGet">
            <summary>Sets the stub of ITestAction.get_Targets()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubITestAction.n::NUnit#Framework#ITestAction#Targets">
            <summary>Sets the stub of ITestAction.get_Targets()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubIgnoreAttribute">
            <summary>Stub type of NUnit.Framework.IgnoreAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubIgnoreAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubIgnoreException">
            <summary>Stub type of NUnit.Framework.IgnoreException</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubIgnoreException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubIgnoreException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreException.InitializeStub">
            <summary>Initializes a new instance of type StubIgnoreException</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreException.ResultStateGet">
            <summary>Sets the stub of IgnoreException.get_ResultState()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIgnoreException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIgnoreException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreException.ResultState">
            <summary>Sets the stub of IgnoreException.get_ResultState()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIgnoreException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubIncludeExcludeAttribute">
            <summary>Stub type of NUnit.Framework.IncludeExcludeAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubIncludeExcludeAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIncludeExcludeAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubInconclusiveException">
            <summary>Stub type of NUnit.Framework.InconclusiveException</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubInconclusiveException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubInconclusiveException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubInconclusiveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubInconclusiveException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubInconclusiveException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubInconclusiveException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubInconclusiveException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubInconclusiveException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubInconclusiveException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubInconclusiveException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubInconclusiveException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubInconclusiveException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubInconclusiveException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubInconclusiveException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubInconclusiveException.InitializeStub">
            <summary>Initializes a new instance of type StubInconclusiveException</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubInconclusiveException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubInconclusiveException.ResultStateGet">
            <summary>Sets the stub of InconclusiveException.get_ResultState()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubInconclusiveException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubInconclusiveException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubInconclusiveException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubInconclusiveException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubInconclusiveException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubInconclusiveException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubInconclusiveException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubInconclusiveException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubInconclusiveException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubInconclusiveException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubInconclusiveException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubInconclusiveException.ResultState">
            <summary>Sets the stub of InconclusiveException.get_ResultState()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubInconclusiveException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubInconclusiveException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubIs">
            <summary>Stub type of NUnit.Framework.Is</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIs.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIs.InitializeStub">
            <summary>Initializes a new instance of type StubIs</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubIz">
            <summary>Stub type of NUnit.Framework.Iz</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIz.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubIz.InitializeStub">
            <summary>Initializes a new instance of type StubIz</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIz.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIz.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubIz.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubList">
            <summary>Stub type of NUnit.Framework.List</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubList.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubList.InitializeStub">
            <summary>Initializes a new instance of type StubList</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubList.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubList.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubList.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubListMapper">
            <summary>Stub type of NUnit.Framework.ListMapper</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubListMapper.#ctor(System.Collections.ICollection)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubListMapper.InitializeStub">
            <summary>Initializes a new instance of type StubListMapper</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubListMapper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubListMapper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubListMapper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubMultipleAssertException">
            <summary>Stub type of NUnit.Framework.MultipleAssertException</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubMultipleAssertException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubMultipleAssertException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubMultipleAssertException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubMultipleAssertException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubMultipleAssertException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubMultipleAssertException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubMultipleAssertException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubMultipleAssertException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubMultipleAssertException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubMultipleAssertException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubMultipleAssertException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubMultipleAssertException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubMultipleAssertException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubMultipleAssertException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubMultipleAssertException.InitializeStub">
            <summary>Initializes a new instance of type StubMultipleAssertException</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubMultipleAssertException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubMultipleAssertException.ResultStateGet">
            <summary>Sets the stub of MultipleAssertException.get_ResultState()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubMultipleAssertException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubMultipleAssertException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubMultipleAssertException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubMultipleAssertException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubMultipleAssertException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubMultipleAssertException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubMultipleAssertException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubMultipleAssertException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubMultipleAssertException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubMultipleAssertException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubMultipleAssertException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubMultipleAssertException.ResultState">
            <summary>Sets the stub of MultipleAssertException.get_ResultState()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubMultipleAssertException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubMultipleAssertException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubNUnitAttribute">
            <summary>Stub type of NUnit.Framework.NUnitAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubNUnitAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubNUnitAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubNUnitAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubNUnitAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubNUnitAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubNUnitAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubNUnitAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubNUnitAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubNUnitAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubNUnitAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubNUnitAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubNUnitAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubNUnitAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubNUnitAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubNUnitAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubNUnitAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubNonTestAssemblyAttribute">
            <summary>Stub type of NUnit.Framework.NonTestAssemblyAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubNonTestAssemblyAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubNonTestAssemblyAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubNonTestAssemblyAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubNonTestAssemblyAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubNonTestAssemblyAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubNonTestAssemblyAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubNonTestAssemblyAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubNonTestAssemblyAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubNonTestAssemblyAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubNonTestAssemblyAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubNonTestAssemblyAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubNonTestAssemblyAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubNonTestAssemblyAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubNonTestAssemblyAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubNonTestAssemblyAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubNonTestAssemblyAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubOneTimeSetUpAttribute">
            <summary>Stub type of NUnit.Framework.OneTimeSetUpAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubOneTimeSetUpAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubOneTimeSetUpAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubOneTimeSetUpAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubOneTimeSetUpAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubOneTimeSetUpAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubOneTimeSetUpAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubOneTimeSetUpAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubOneTimeSetUpAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubOneTimeSetUpAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubOneTimeSetUpAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubOneTimeSetUpAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubOneTimeSetUpAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubOneTimeSetUpAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubOneTimeSetUpAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubOneTimeSetUpAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubOneTimeSetUpAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubOneTimeTearDownAttribute">
            <summary>Stub type of NUnit.Framework.OneTimeTearDownAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubOneTimeTearDownAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubOneTimeTearDownAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubOneTimeTearDownAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubOneTimeTearDownAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubOneTimeTearDownAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubOneTimeTearDownAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubOneTimeTearDownAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubOneTimeTearDownAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubOneTimeTearDownAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubOneTimeTearDownAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubOneTimeTearDownAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubOneTimeTearDownAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubOneTimeTearDownAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubOneTimeTearDownAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubOneTimeTearDownAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubOneTimeTearDownAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubOrderAttribute">
            <summary>Stub type of NUnit.Framework.OrderAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubOrderAttribute.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubOrderAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubOrderAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubOrderAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubOrderAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubOrderAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubOrderAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubOrderAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubOrderAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubOrderAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubOrderAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubOrderAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubOrderAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubOrderAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubOrderAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubOrderAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubPairwiseAttribute">
            <summary>Stub type of NUnit.Framework.PairwiseAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPairwiseAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPairwiseAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPairwiseAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPairwiseAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPairwiseAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPairwiseAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubPairwiseAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPairwiseAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPairwiseAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPairwiseAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPairwiseAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPairwiseAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPairwiseAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPairwiseAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPairwiseAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPairwiseAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubParallelizableAttribute">
            <summary>Stub type of NUnit.Framework.ParallelizableAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubParallelizableAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubParallelizableAttribute.#ctor(NUnit.Framework.ParallelScope)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubParallelizableAttribute.ApplyToTest(NUnit.Framework.Internal.Test)">
            <summary>Sets the stub of ParallelizableAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubParallelizableAttribute.ApplyToTestTest">
            <summary>Sets the stub of ParallelizableAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubParallelizableAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubParallelizableAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubParallelizableAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubParallelizableAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubParallelizableAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubParallelizableAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubParallelizableAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubParallelizableAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubParallelizableAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubParallelizableAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubParallelizableAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubParallelizableAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubParallelizableAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubParallelizableAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubParallelizableAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubPlatformAttribute">
            <summary>Stub type of NUnit.Framework.PlatformAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPlatformAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPlatformAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPlatformAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPlatformAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPlatformAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPlatformAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPlatformAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubPlatformAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPlatformAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPlatformAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPlatformAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPlatformAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPlatformAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPlatformAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPlatformAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPlatformAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPlatformAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubPropertyAttribute">
            <summary>Stub type of NUnit.Framework.PropertyAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPropertyAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPropertyAttribute.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPropertyAttribute.#ctor(System.String,System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPropertyAttribute.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPropertyAttribute.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPropertyAttribute.ApplyToTest(NUnit.Framework.Internal.Test)">
            <summary>Sets the stub of PropertyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPropertyAttribute.ApplyToTestTest">
            <summary>Sets the stub of PropertyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPropertyAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPropertyAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPropertyAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPropertyAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPropertyAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubPropertyAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPropertyAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPropertyAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubPropertyAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPropertyAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubPropertyAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPropertyAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPropertyAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPropertyAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubPropertyAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubRandomAttribute">
            <summary>Stub type of NUnit.Framework.RandomAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.#ctor(System.Byte,System.Byte,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.#ctor(System.Double,System.Double,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.#ctor(System.Int16,System.Int16,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.#ctor(System.Int64,System.Int64,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.#ctor(System.SByte,System.SByte,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.#ctor(System.Single,System.Single,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.#ctor(System.UInt16,System.UInt16,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.#ctor(System.UInt32,System.UInt32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.#ctor(System.UInt64,System.UInt64,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRandomAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRandomAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubRandomAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRandomAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRandomAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRandomAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRandomAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRandomAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRandomAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRandomAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRandomAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubRangeAttribute">
            <summary>Stub type of NUnit.Framework.RangeAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.#ctor(System.Int64,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.#ctor(System.UInt32,System.UInt32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.#ctor(System.UInt64,System.UInt64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.#ctor(System.Double,System.Double,System.Double)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.#ctor(System.Int64,System.Int64,System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.#ctor(System.Single,System.Single,System.Single)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.#ctor(System.UInt32,System.UInt32,System.UInt32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.#ctor(System.UInt64,System.UInt64,System.UInt64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRangeAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRangeAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubRangeAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRangeAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRangeAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRangeAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRangeAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRangeAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRangeAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRangeAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRangeAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubRepeatAttribute">
            <summary>Stub type of NUnit.Framework.RepeatAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRepeatAttribute.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRepeatAttribute.ApplyToTest(NUnit.Framework.Internal.Test)">
            <summary>Sets the stub of PropertyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRepeatAttribute.ApplyToTestTest">
            <summary>Sets the stub of PropertyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRepeatAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRepeatAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRepeatAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRepeatAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRepeatAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubRepeatAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRepeatAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRepeatAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRepeatAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRepeatAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRepeatAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRepeatAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRepeatAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRepeatAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRepeatAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubRequiresThreadAttribute">
            <summary>Stub type of NUnit.Framework.RequiresThreadAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresThreadAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresThreadAttribute.#ctor(System.Threading.ApartmentState)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresThreadAttribute.ApplyToTest(NUnit.Framework.Internal.Test)">
            <summary>Sets the stub of PropertyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiresThreadAttribute.ApplyToTestTest">
            <summary>Sets the stub of PropertyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresThreadAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiresThreadAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresThreadAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiresThreadAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresThreadAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubRequiresThreadAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresThreadAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiresThreadAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRequiresThreadAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiresThreadAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRequiresThreadAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRequiresThreadAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRequiresThreadAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRequiresThreadAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRequiresThreadAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubResultStateException">
            <summary>Stub type of NUnit.Framework.ResultStateException</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubResultStateException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubResultStateException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubResultStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubResultStateException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubResultStateException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubResultStateException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubResultStateException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubResultStateException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubResultStateException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubResultStateException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubResultStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubResultStateException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubResultStateException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubResultStateException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubResultStateException.InitializeStub">
            <summary>Initializes a new instance of type StubResultStateException</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubResultStateException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubResultStateException.ResultStateGet">
            <summary>Sets the stub of ResultStateException.get_ResultState()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubResultStateException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubResultStateException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubResultStateException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubResultStateException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubResultStateException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubResultStateException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubResultStateException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubResultStateException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubResultStateException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubResultStateException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubResultStateException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubResultStateException.ResultState">
            <summary>Sets the stub of ResultStateException.get_ResultState()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubResultStateException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubResultStateException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubRetryAttribute">
            <summary>Stub type of NUnit.Framework.RetryAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRetryAttribute.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRetryAttribute.ApplyToTest(NUnit.Framework.Internal.Test)">
            <summary>Sets the stub of PropertyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRetryAttribute.ApplyToTestTest">
            <summary>Sets the stub of PropertyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRetryAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRetryAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRetryAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRetryAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRetryAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubRetryAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRetryAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRetryAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubRetryAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRetryAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubRetryAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRetryAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRetryAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRetryAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubRetryAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubSequentialAttribute">
            <summary>Stub type of NUnit.Framework.SequentialAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSequentialAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSequentialAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSequentialAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSequentialAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSequentialAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSequentialAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubSequentialAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSequentialAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSequentialAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSequentialAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSequentialAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSequentialAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSequentialAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSequentialAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSequentialAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSequentialAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubSetCultureAttribute">
            <summary>Stub type of NUnit.Framework.SetCultureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetCultureAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetCultureAttribute.ApplyToTest(NUnit.Framework.Internal.Test)">
            <summary>Sets the stub of PropertyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetCultureAttribute.ApplyToTestTest">
            <summary>Sets the stub of PropertyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetCultureAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetCultureAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetCultureAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetCultureAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetCultureAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubSetCultureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetCultureAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetCultureAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetCultureAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetCultureAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetCultureAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetCultureAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetCultureAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetCultureAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetCultureAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubSetUICultureAttribute">
            <summary>Stub type of NUnit.Framework.SetUICultureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUICultureAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUICultureAttribute.ApplyToTest(NUnit.Framework.Internal.Test)">
            <summary>Sets the stub of PropertyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUICultureAttribute.ApplyToTestTest">
            <summary>Sets the stub of PropertyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUICultureAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUICultureAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUICultureAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUICultureAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUICultureAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubSetUICultureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUICultureAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUICultureAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUICultureAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUICultureAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUICultureAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUICultureAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUICultureAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUICultureAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUICultureAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubSetUpAttribute">
            <summary>Stub type of NUnit.Framework.SetUpAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUpAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUpAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubSetUpAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUpAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUpAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUpAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUpAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUpAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUpAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUpAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubSetUpFixtureAttribute">
            <summary>Stub type of NUnit.Framework.SetUpFixtureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubSetUpFixtureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSetUpFixtureAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubSingleThreadedAttribute">
            <summary>Stub type of NUnit.Framework.SingleThreadedAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSingleThreadedAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSingleThreadedAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSingleThreadedAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSingleThreadedAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSingleThreadedAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSingleThreadedAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubSingleThreadedAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSingleThreadedAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSingleThreadedAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSingleThreadedAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSingleThreadedAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSingleThreadedAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSingleThreadedAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSingleThreadedAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSingleThreadedAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSingleThreadedAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubStringAssert">
            <summary>Stub type of NUnit.Framework.StringAssert</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubStringAssert.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubStringAssert.InitializeStub">
            <summary>Initializes a new instance of type StubStringAssert</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubStringAssert.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubStringAssert.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubStringAssert.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubSuccessException">
            <summary>Stub type of NUnit.Framework.SuccessException</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuccessException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuccessException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuccessException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubSuccessException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuccessException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubSuccessException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuccessException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuccessException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuccessException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuccessException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuccessException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuccessException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuccessException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuccessException.InitializeStub">
            <summary>Initializes a new instance of type StubSuccessException</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuccessException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuccessException.ResultStateGet">
            <summary>Sets the stub of SuccessException.get_ResultState()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuccessException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuccessException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuccessException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubSuccessException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubSuccessException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSuccessException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSuccessException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSuccessException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSuccessException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSuccessException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSuccessException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSuccessException.ResultState">
            <summary>Sets the stub of SuccessException.get_ResultState()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSuccessException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubSuccessException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTearDownAttribute">
            <summary>Stub type of NUnit.Framework.TearDownAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTearDownAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTearDownAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTearDownAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTearDownAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTearDownAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTearDownAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTearDownAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTearDownAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTearDownAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTearDownAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTearDownAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTearDownAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTearDownAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTearDownAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTearDownAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTearDownAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTestActionAttribute">
            <summary>Stub type of NUnit.Framework.TestActionAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestActionAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestActionAttribute.AfterTest(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestActionAttribute.AfterTest(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestActionAttribute.AfterTestITest">
            <summary>Sets the stub of TestActionAttribute.AfterTest(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestActionAttribute.BeforeTest(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestActionAttribute.BeforeTest(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestActionAttribute.BeforeTestITest">
            <summary>Sets the stub of TestActionAttribute.BeforeTest(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestActionAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestActionAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestActionAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestActionAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestActionAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTestActionAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestActionAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestActionAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestActionAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestActionAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestActionAttribute.TargetsGet">
            <summary>Sets the stub of TestActionAttribute.get_Targets()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestActionAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestActionAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestActionAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestActionAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestActionAttribute.Targets">
            <summary>Sets the stub of TestActionAttribute.get_Targets()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestActionAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTestAssemblyDirectoryResolveAttribute">
            <summary>Stub type of NUnit.Framework.TestAssemblyDirectoryResolveAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestAssemblyDirectoryResolveAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestAssemblyDirectoryResolveAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestAssemblyDirectoryResolveAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestAssemblyDirectoryResolveAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestAssemblyDirectoryResolveAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestAssemblyDirectoryResolveAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTestAssemblyDirectoryResolveAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestAssemblyDirectoryResolveAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestAssemblyDirectoryResolveAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestAssemblyDirectoryResolveAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestAssemblyDirectoryResolveAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestAssemblyDirectoryResolveAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestAssemblyDirectoryResolveAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestAssemblyDirectoryResolveAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestAssemblyDirectoryResolveAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestAssemblyDirectoryResolveAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTestAttribute">
            <summary>Stub type of NUnit.Framework.TestAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTestAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTestCaseAttribute">
            <summary>Stub type of NUnit.Framework.TestCaseAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseAttribute.#ctor(System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseAttribute.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseAttribute.#ctor(System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseAttribute.#ctor(System.Object,System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestCaseAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestCaseAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTestCaseAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestCaseAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestCaseAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestCaseAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestCaseAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestCaseAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestCaseAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestCaseAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTestCaseData">
            <summary>Stub type of NUnit.Framework.TestCaseData</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseData.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseData.#ctor(System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseData.#ctor(System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseData.#ctor(System.Object,System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseData.InitializeStub">
            <summary>Initializes a new instance of type StubTestCaseData</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestCaseData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestCaseData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestCaseData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTestCaseSourceAttribute">
            <summary>Stub type of NUnit.Framework.TestCaseSourceAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.#ctor(System.String,System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.#ctor(System.Type,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.#ctor(System.Type,System.String,System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTestCaseSourceAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestCaseSourceAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTestContext">
            <summary>Stub type of NUnit.Framework.TestContext</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestContext.#ctor(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestContext.InitializeStub">
            <summary>Initializes a new instance of type StubTestContext</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTestFixtureAttribute">
            <summary>Stub type of NUnit.Framework.TestFixtureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureAttribute.#ctor(System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTestFixtureAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTestFixtureData">
            <summary>Stub type of NUnit.Framework.TestFixtureData</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureData.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureData.#ctor(System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureData.#ctor(System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureData.#ctor(System.Object,System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureData.InitializeStub">
            <summary>Initializes a new instance of type StubTestFixtureData</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTestFixtureSourceAttribute">
            <summary>Stub type of NUnit.Framework.TestFixtureSourceAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureSourceAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureSourceAttribute.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureSourceAttribute.#ctor(System.Type,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureSourceAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureSourceAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureSourceAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureSourceAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureSourceAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTestFixtureSourceAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureSourceAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureSourceAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestFixtureSourceAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureSourceAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestFixtureSourceAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureSourceAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureSourceAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureSourceAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestFixtureSourceAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTestOfAttribute">
            <summary>Stub type of NUnit.Framework.TestOfAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestOfAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestOfAttribute.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestOfAttribute.ApplyToTest(NUnit.Framework.Internal.Test)">
            <summary>Sets the stub of PropertyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestOfAttribute.ApplyToTestTest">
            <summary>Sets the stub of PropertyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestOfAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestOfAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestOfAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestOfAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestOfAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTestOfAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestOfAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestOfAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestOfAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestOfAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTestOfAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestOfAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestOfAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestOfAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestOfAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTestParameters">
            <summary>Stub type of NUnit.Framework.TestParameters</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestParameters.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTestParameters.InitializeStub">
            <summary>Initializes a new instance of type StubTestParameters</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestParameters.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestParameters.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTestParameters.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTheoryAttribute">
            <summary>Stub type of NUnit.Framework.TheoryAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTheoryAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTheoryAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTheoryAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTheoryAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTheoryAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTheoryAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTheoryAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTheoryAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTheoryAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTheoryAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTheoryAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTheoryAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTheoryAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTheoryAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTheoryAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTheoryAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubThrows">
            <summary>Stub type of NUnit.Framework.Throws</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubThrows.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubThrows.InitializeStub">
            <summary>Initializes a new instance of type StubThrows</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubThrows.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubThrows.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubThrows.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubTimeoutAttribute">
            <summary>Stub type of NUnit.Framework.TimeoutAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTimeoutAttribute.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTimeoutAttribute.ApplyToTest(NUnit.Framework.Internal.Test)">
            <summary>Sets the stub of PropertyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTimeoutAttribute.ApplyToTestTest">
            <summary>Sets the stub of PropertyAttribute.ApplyToTest(Test test)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTimeoutAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTimeoutAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTimeoutAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTimeoutAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTimeoutAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTimeoutAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTimeoutAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTimeoutAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubTimeoutAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTimeoutAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubTimeoutAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTimeoutAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTimeoutAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTimeoutAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubTimeoutAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubValueSourceAttribute">
            <summary>Stub type of NUnit.Framework.ValueSourceAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValueSourceAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValueSourceAttribute.#ctor(System.Type,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValueSourceAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubValueSourceAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValueSourceAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubValueSourceAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValueSourceAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubValueSourceAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValueSourceAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubValueSourceAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValueSourceAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubValueSourceAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubValueSourceAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubValueSourceAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubValueSourceAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubValueSourceAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubValueSourceAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubValuesAttribute">
            <summary>Stub type of NUnit.Framework.ValuesAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValuesAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValuesAttribute.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValuesAttribute.#ctor(System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValuesAttribute.#ctor(System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValuesAttribute.#ctor(System.Object,System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValuesAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubValuesAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValuesAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubValuesAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValuesAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubValuesAttribute</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValuesAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubValuesAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubValuesAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubValuesAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Fakes.StubValuesAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubValuesAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubValuesAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubValuesAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubValuesAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:NUnit.Framework.Fakes.StubWarn">
            <summary>Stub type of NUnit.Framework.Warn</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubWarn.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Fakes.StubWarn.InitializeStub">
            <summary>Initializes a new instance of type StubWarn</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubWarn.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubWarn.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Fakes.StubWarn.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult">
            <summary>Shim type of NUnit.Framework.Interfaces.AssertionResult</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.#ctor(NUnit.Framework.Interfaces.AssertionResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.ConstructorAssertionStatusStringString">
            <summary>Sets the shim of AssertionResult.AssertionResult(AssertionStatus status, String message, String stackTrace)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.EqualsObject">
            <summary>Sets the shim of AssertionResult.Equals(Object obj)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.GetHashCode">
            <summary>Sets the shim of AssertionResult.GetHashCode()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.MessageGet">
            <summary>Sets the shim of AssertionResult.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.MessageSetString">
            <summary>Sets the shim of AssertionResult.set_Message(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.StackTraceGet">
            <summary>Sets the shim of AssertionResult.get_StackTrace()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.StackTraceSetString">
            <summary>Sets the shim of AssertionResult.set_StackTrace(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.StatusGet">
            <summary>Sets the shim of AssertionResult.get_Status()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.StatusSetAssertionStatus">
            <summary>Sets the shim of AssertionResult.set_Status(AssertionStatus value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.ToString">
            <summary>Sets the shim of AssertionResult.ToString()</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.AllInstances.EqualsObject">
            <summary>Sets the shim of AssertionResult.Equals(Object obj)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.AllInstances.GetHashCode01">
            <summary>Sets the shim of AssertionResult.GetHashCode()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.AllInstances.MessageGet">
            <summary>Sets the shim of AssertionResult.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.AllInstances.MessageSetString">
            <summary>Sets the shim of AssertionResult.set_Message(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.AllInstances.StackTraceGet">
            <summary>Sets the shim of AssertionResult.get_StackTrace()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.AllInstances.StackTraceSetString">
            <summary>Sets the shim of AssertionResult.set_StackTrace(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.AllInstances.StatusGet">
            <summary>Sets the shim of AssertionResult.get_Status()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.AllInstances.StatusSetAssertionStatus">
            <summary>Sets the shim of AssertionResult.set_Status(AssertionStatus value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAssertionResult.AllInstances.ToString01">
            <summary>Sets the shim of AssertionResult.ToString()</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.ShimAttributeDictionary">
            <summary>Shim type of NUnit.Framework.Interfaces.AttributeDictionary</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimAttributeDictionary.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimAttributeDictionary.#ctor(NUnit.Framework.Interfaces.AttributeDictionary)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimAttributeDictionary.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimAttributeDictionary.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimAttributeDictionary.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimAttributeDictionary.Bind(System.Collections.IDictionary)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimAttributeDictionary.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimAttributeDictionary.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimAttributeDictionary.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimAttributeDictionary.Bind(System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimAttributeDictionary.Bind(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimAttributeDictionary.Bind(System.Collections.Generic.IReadOnlyDictionary{System.String,System.String})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimAttributeDictionary.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimAttributeDictionary.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAttributeDictionary.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAttributeDictionary.Constructor">
            <summary>Sets the shim of AttributeDictionary.AttributeDictionary()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAttributeDictionary.ItemGetString">
            <summary>Sets the shim of AttributeDictionary.get_Item(String key)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.ShimAttributeDictionary.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimAttributeDictionary.AllInstances.ItemGetString">
            <summary>Sets the shim of AttributeDictionary.get_Item(String key)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.ShimNodeList">
            <summary>Shim type of NUnit.Framework.Interfaces.NodeList</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimNodeList.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimNodeList.#ctor(NUnit.Framework.Interfaces.NodeList)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimNodeList.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimNodeList.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimNodeList.Bind(System.Collections.ICollection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimNodeList.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimNodeList.Bind(System.Collections.IList)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimNodeList.Bind(System.Collections.Generic.ICollection{NUnit.Framework.Interfaces.TNode})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimNodeList.Bind(System.Collections.Generic.IEnumerable{NUnit.Framework.Interfaces.TNode})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimNodeList.Bind(System.Collections.Generic.IList{NUnit.Framework.Interfaces.TNode})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimNodeList.Bind(System.Collections.Generic.IReadOnlyCollection{NUnit.Framework.Interfaces.TNode})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimNodeList.Bind(System.Collections.Generic.IReadOnlyList{NUnit.Framework.Interfaces.TNode})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimNodeList.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimNodeList.Constructor">
            <summary>Sets the shim of NodeList.NodeList()</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.ShimNodeList.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.ShimResultState">
            <summary>Shim type of NUnit.Framework.Interfaces.ResultState</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimResultState.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimResultState.#ctor(NUnit.Framework.Interfaces.ResultState)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimResultState.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimResultState.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.ConstructorTestStatus">
            <summary>Sets the shim of ResultState.ResultState(TestStatus status)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.ConstructorTestStatusFailureSite">
            <summary>Sets the shim of ResultState.ResultState(TestStatus status, FailureSite site)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.ConstructorTestStatusString">
            <summary>Sets the shim of ResultState.ResultState(TestStatus status, String label)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.ConstructorTestStatusStringFailureSite">
            <summary>Sets the shim of ResultState.ResultState(TestStatus status, String label, FailureSite site)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.EqualsObject">
            <summary>Sets the shim of ResultState.Equals(Object obj)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.GetHashCode">
            <summary>Sets the shim of ResultState.GetHashCode()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.LabelGet">
            <summary>Sets the shim of ResultState.get_Label()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.LabelSetString">
            <summary>Sets the shim of ResultState.set_Label(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.MatchesResultState">
            <summary>Sets the shim of ResultState.Matches(ResultState other)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.SiteGet">
            <summary>Sets the shim of ResultState.get_Site()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.SiteSetFailureSite">
            <summary>Sets the shim of ResultState.set_Site(FailureSite value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.StaticConstructor">
            <summary>Sets the shim of ResultState.ResultState()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.StatusGet">
            <summary>Sets the shim of ResultState.get_Status()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.StatusSetTestStatus">
            <summary>Sets the shim of ResultState.set_Status(TestStatus value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.ToString">
            <summary>Sets the shim of ResultState.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.WithSiteFailureSite">
            <summary>Sets the shim of ResultState.WithSite(FailureSite site)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.ShimResultState.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.AllInstances.EqualsObject">
            <summary>Sets the shim of ResultState.Equals(Object obj)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.AllInstances.GetHashCode01">
            <summary>Sets the shim of ResultState.GetHashCode()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.AllInstances.LabelGet">
            <summary>Sets the shim of ResultState.get_Label()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.AllInstances.LabelSetString">
            <summary>Sets the shim of ResultState.set_Label(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.AllInstances.MatchesResultState">
            <summary>Sets the shim of ResultState.Matches(ResultState other)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.AllInstances.SiteGet">
            <summary>Sets the shim of ResultState.get_Site()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.AllInstances.SiteSetFailureSite">
            <summary>Sets the shim of ResultState.set_Site(FailureSite value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.AllInstances.StatusGet">
            <summary>Sets the shim of ResultState.get_Status()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.AllInstances.StatusSetTestStatus">
            <summary>Sets the shim of ResultState.set_Status(TestStatus value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.AllInstances.ToString01">
            <summary>Sets the shim of ResultState.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimResultState.AllInstances.WithSiteFailureSite">
            <summary>Sets the shim of ResultState.WithSite(FailureSite site)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.ShimTNode">
            <summary>Shim type of NUnit.Framework.Interfaces.TNode</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimTNode.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimTNode.#ctor(NUnit.Framework.Interfaces.TNode)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimTNode.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimTNode.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AddAttributeStringString">
            <summary>Sets the shim of TNode.AddAttribute(String name, String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AddElementString">
            <summary>Sets the shim of TNode.AddElement(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AddElementStringString">
            <summary>Sets the shim of TNode.AddElement(String name, String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AddElementWithCDATAStringString">
            <summary>Sets the shim of TNode.AddElementWithCDATA(String name, String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.ApplySelectionNodeListString">
            <summary>Sets the shim of TNode.ApplySelection(NodeList nodeList, String xpath)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AttributesGet">
            <summary>Sets the shim of TNode.get_Attributes()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AttributesSetAttributeDictionary">
            <summary>Sets the shim of TNode.set_Attributes(AttributeDictionary value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.CharToUnicodeSequenceChar">
            <summary>Sets the shim of TNode.CharToUnicodeSequence(Char symbol)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.ChildNodesGet">
            <summary>Sets the shim of TNode.get_ChildNodes()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.ChildNodesSetNodeList">
            <summary>Sets the shim of TNode.set_ChildNodes(NodeList value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.ConstructorString">
            <summary>Sets the shim of TNode.TNode(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.ConstructorStringString">
            <summary>Sets the shim of TNode.TNode(String name, String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.ConstructorStringStringBoolean">
            <summary>Sets the shim of TNode.TNode(String name, String value, Boolean valueIsCDATA)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.EscapeInvalidXmlCharactersString">
            <summary>Sets the shim of TNode.EscapeInvalidXmlCharacters(String str)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.FirstChildGet">
            <summary>Sets the shim of TNode.get_FirstChild()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.FromXmlString">
            <summary>Sets the shim of TNode.FromXml(String xmlText)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.FromXmlXmlNode">
            <summary>Sets the shim of TNode.FromXml(XmlNode xmlNode)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.NameGet">
            <summary>Sets the shim of TNode.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.NameSetString">
            <summary>Sets the shim of TNode.set_Name(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.OuterXmlGet">
            <summary>Sets the shim of TNode.get_OuterXml()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.SelectNodesString">
            <summary>Sets the shim of TNode.SelectNodes(String xpath)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.SelectSingleNodeString">
            <summary>Sets the shim of TNode.SelectSingleNode(String xpath)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.StaticConstructor">
            <summary>Sets the shim of TNode.TNode()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.ValueGet">
            <summary>Sets the shim of TNode.get_Value()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.ValueIsCDATAGet">
            <summary>Sets the shim of TNode.get_ValueIsCDATA()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.ValueIsCDATASetBoolean">
            <summary>Sets the shim of TNode.set_ValueIsCDATA(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.ValueSetString">
            <summary>Sets the shim of TNode.set_Value(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.WriteCDataToXmlWriter">
            <summary>Sets the shim of TNode.WriteCDataTo(XmlWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.WriteToXmlWriter">
            <summary>Sets the shim of TNode.WriteTo(XmlWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.ShimTNode.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AllInstances.AddAttributeStringString">
            <summary>Sets the shim of TNode.AddAttribute(String name, String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AllInstances.AddElementString">
            <summary>Sets the shim of TNode.AddElement(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AllInstances.AddElementStringString">
            <summary>Sets the shim of TNode.AddElement(String name, String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AllInstances.AddElementWithCDATAStringString">
            <summary>Sets the shim of TNode.AddElementWithCDATA(String name, String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AllInstances.AttributesGet">
            <summary>Sets the shim of TNode.get_Attributes()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AllInstances.AttributesSetAttributeDictionary">
            <summary>Sets the shim of TNode.set_Attributes(AttributeDictionary value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AllInstances.ChildNodesGet">
            <summary>Sets the shim of TNode.get_ChildNodes()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AllInstances.ChildNodesSetNodeList">
            <summary>Sets the shim of TNode.set_ChildNodes(NodeList value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AllInstances.FirstChildGet">
            <summary>Sets the shim of TNode.get_FirstChild()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AllInstances.NameGet">
            <summary>Sets the shim of TNode.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AllInstances.NameSetString">
            <summary>Sets the shim of TNode.set_Name(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AllInstances.OuterXmlGet">
            <summary>Sets the shim of TNode.get_OuterXml()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AllInstances.SelectNodesString">
            <summary>Sets the shim of TNode.SelectNodes(String xpath)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AllInstances.SelectSingleNodeString">
            <summary>Sets the shim of TNode.SelectSingleNode(String xpath)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AllInstances.ValueGet">
            <summary>Sets the shim of TNode.get_Value()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AllInstances.ValueIsCDATAGet">
            <summary>Sets the shim of TNode.get_ValueIsCDATA()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AllInstances.ValueIsCDATASetBoolean">
            <summary>Sets the shim of TNode.set_ValueIsCDATA(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AllInstances.ValueSetString">
            <summary>Sets the shim of TNode.set_Value(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AllInstances.WriteCDataToXmlWriter">
            <summary>Sets the shim of TNode.WriteCDataTo(XmlWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTNode.AllInstances.WriteToXmlWriter">
            <summary>Sets the shim of TNode.WriteTo(XmlWriter writer)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.ShimTestAttachment">
            <summary>Shim type of NUnit.Framework.Interfaces.TestAttachment</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimTestAttachment.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimTestAttachment.#ctor(NUnit.Framework.Interfaces.TestAttachment)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimTestAttachment.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimTestAttachment.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestAttachment.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestAttachment.ConstructorStringString">
            <summary>Sets the shim of TestAttachment.TestAttachment(String filePath, String description)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestAttachment.DescriptionGet">
            <summary>Sets the shim of TestAttachment.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestAttachment.FilePathGet">
            <summary>Sets the shim of TestAttachment.get_FilePath()</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.ShimTestAttachment.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestAttachment.AllInstances.DescriptionGet">
            <summary>Sets the shim of TestAttachment.get_Description()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestAttachment.AllInstances.FilePathGet">
            <summary>Sets the shim of TestAttachment.get_FilePath()</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.ShimTestOutput">
            <summary>Shim type of NUnit.Framework.Interfaces.TestOutput</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.#ctor(NUnit.Framework.Interfaces.TestOutput)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.ConstructorStringStringString">
            <summary>Sets the shim of TestOutput.TestOutput(String text, String stream, String testName)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.StreamGet">
            <summary>Sets the shim of TestOutput.get_Stream()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.StreamSetString">
            <summary>Sets the shim of TestOutput.set_Stream(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.TestNameGet">
            <summary>Sets the shim of TestOutput.get_TestName()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.TestNameSetString">
            <summary>Sets the shim of TestOutput.set_TestName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.TextGet">
            <summary>Sets the shim of TestOutput.get_Text()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.TextSetString">
            <summary>Sets the shim of TestOutput.set_Text(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.ToString">
            <summary>Sets the shim of TestOutput.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.ToXml">
            <summary>Sets the shim of TestOutput.ToXml()</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.AllInstances.StreamGet">
            <summary>Sets the shim of TestOutput.get_Stream()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.AllInstances.StreamSetString">
            <summary>Sets the shim of TestOutput.set_Stream(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.AllInstances.TestNameGet">
            <summary>Sets the shim of TestOutput.get_TestName()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.AllInstances.TestNameSetString">
            <summary>Sets the shim of TestOutput.set_TestName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.AllInstances.TextGet">
            <summary>Sets the shim of TestOutput.get_Text()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.AllInstances.TextSetString">
            <summary>Sets the shim of TestOutput.set_Text(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.AllInstances.ToString01">
            <summary>Sets the shim of TestOutput.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.ShimTestOutput.AllInstances.ToXml">
            <summary>Sets the shim of TestOutput.ToXml()</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubAssertionResult">
            <summary>Stub type of NUnit.Framework.Interfaces.AssertionResult</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubAssertionResult.#ctor(NUnit.Framework.Interfaces.AssertionStatus,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubAssertionResult.Equals(System.Object)">
            <summary>Sets the stub of AssertionResult.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubAssertionResult.EqualsObject">
            <summary>Sets the stub of AssertionResult.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubAssertionResult.GetHashCode">
            <summary>Sets the stub of AssertionResult.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubAssertionResult.GetHashCode01">
            <summary>Sets the stub of AssertionResult.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubAssertionResult.InitializeStub">
            <summary>Initializes a new instance of type StubAssertionResult</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubAssertionResult.ToString">
            <summary>Sets the stub of AssertionResult.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubAssertionResult.ToString01">
            <summary>Sets the stub of AssertionResult.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubAssertionResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubAssertionResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubAssertionResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubAttributeDictionary">
            <summary>Stub type of NUnit.Framework.Interfaces.AttributeDictionary</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubAttributeDictionary.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubAttributeDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubAttributeDictionary.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubAttributeDictionary.InitializeStub">
            <summary>Initializes a new instance of type StubAttributeDictionary</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubAttributeDictionary.OnDeserialization(System.Object)">
            <summary>Sets the stub of Dictionary`2.OnDeserialization(Object sender)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubAttributeDictionary.OnDeserializationObject">
            <summary>Sets the stub of Dictionary`2.OnDeserialization(Object sender)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubAttributeDictionary.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubAttributeDictionary.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubAttributeDictionary.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubIApplyToContext">
            <summary>Stub type of NUnit.Framework.Interfaces.IApplyToContext</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIApplyToContext.#ctor">
            <summary>Initializes a new instance of type StubIApplyToContext</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIApplyToContext.ApplyToContextTestExecutionContext">
            <summary>Sets the stub of IApplyToContext.ApplyToContext(TestExecutionContext context)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIApplyToContext.n::NUnit#Framework#Interfaces#IApplyToContext#ApplyToContext(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Sets the stub of IApplyToContext.ApplyToContext(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubIApplyToTest">
            <summary>Stub type of NUnit.Framework.Interfaces.IApplyToTest</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIApplyToTest.#ctor">
            <summary>Initializes a new instance of type StubIApplyToTest</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIApplyToTest.ApplyToTestTest">
            <summary>Sets the stub of IApplyToTest.ApplyToTest(Test test)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIApplyToTest.n::NUnit#Framework#Interfaces#IApplyToTest#ApplyToTest(NUnit.Framework.Internal.Test)">
            <summary>Sets the stub of IApplyToTest.ApplyToTest(Test test)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubICombiningStrategy">
            <summary>Stub type of NUnit.Framework.Interfaces.ICombiningStrategy</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubICombiningStrategy.#ctor">
            <summary>Initializes a new instance of type StubICombiningStrategy</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubICombiningStrategy.GetTestCasesIEnumerableArray">
            <summary>Sets the stub of ICombiningStrategy.GetTestCases(IEnumerable[] sources)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubICombiningStrategy.n::NUnit#Framework#Interfaces#ICombiningStrategy#GetTestCases(System.Collections.IEnumerable[])">
            <summary>Sets the stub of ICombiningStrategy.GetTestCases(IEnumerable[] sources)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubICommandWrapper">
            <summary>Stub type of NUnit.Framework.Interfaces.ICommandWrapper</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubICommandWrapper.#ctor">
            <summary>Initializes a new instance of type StubICommandWrapper</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubICommandWrapper.n::NUnit#Framework#Interfaces#ICommandWrapper#Wrap(NUnit.Framework.Internal.Commands.TestCommand)">
            <summary>Sets the stub of ICommandWrapper.Wrap(TestCommand command)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubICommandWrapper.WrapTestCommand">
            <summary>Sets the stub of ICommandWrapper.Wrap(TestCommand command)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubIFixtureBuilder">
            <summary>Stub type of NUnit.Framework.Interfaces.IFixtureBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIFixtureBuilder.#ctor">
            <summary>Initializes a new instance of type StubIFixtureBuilder</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIFixtureBuilder.BuildFromITypeInfo">
            <summary>Sets the stub of IFixtureBuilder.BuildFrom(ITypeInfo typeInfo)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIFixtureBuilder.n::NUnit#Framework#Interfaces#IFixtureBuilder#BuildFrom(NUnit.Framework.Interfaces.ITypeInfo)">
            <summary>Sets the stub of IFixtureBuilder.BuildFrom(ITypeInfo typeInfo)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubIImplyFixture">
            <summary>Stub type of NUnit.Framework.Interfaces.IImplyFixture</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIImplyFixture.#ctor">
            <summary>Initializes a new instance of type StubIImplyFixture</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo">
            <summary>Stub type of NUnit.Framework.Interfaces.IMethodInfo</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.#ctor">
            <summary>Initializes a new instance of type StubIMethodInfo</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.ContainsGenericParametersGet">
            <summary>Sets the stub of IMethodInfo.get_ContainsGenericParameters()</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.GetCustomAttributesOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0[]})">
            <summary>Sets stubs of GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.GetGenericArguments">
            <summary>Sets the stub of IMethodInfo.GetGenericArguments()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.GetParameters">
            <summary>Sets the stub of IMethodInfo.GetParameters()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.InvokeObjectObjectArray">
            <summary>Sets the stub of IMethodInfo.Invoke(Object fixture, Object[] args)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.IsAbstractGet">
            <summary>Sets the stub of IMethodInfo.get_IsAbstract()</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.IsDefinedOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,System.Boolean})">
            <summary>Sets stubs of IsDefined(Boolean inherit)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.IsGenericMethodDefinitionGet">
            <summary>Sets the stub of IMethodInfo.get_IsGenericMethodDefinition()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.IsGenericMethodGet">
            <summary>Sets the stub of IMethodInfo.get_IsGenericMethod()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.IsPublicGet">
            <summary>Sets the stub of IMethodInfo.get_IsPublic()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.MakeGenericMethodTypeArray">
            <summary>Sets the stub of IMethodInfo.MakeGenericMethod(Type[] typeArguments)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.MethodInfoGet">
            <summary>Sets the stub of IMethodInfo.get_MethodInfo()</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.n::NUnit#Framework#Interfaces#IMethodInfo#GetGenericArguments">
            <summary>Sets the stub of IMethodInfo.GetGenericArguments()</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.n::NUnit#Framework#Interfaces#IMethodInfo#GetParameters">
            <summary>Sets the stub of IMethodInfo.GetParameters()</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.n::NUnit#Framework#Interfaces#IMethodInfo#Invoke(System.Object,System.Object[])">
            <summary>Sets the stub of IMethodInfo.Invoke(Object fixture, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.n::NUnit#Framework#Interfaces#IMethodInfo#MakeGenericMethod(System.Type[])">
            <summary>Sets the stub of IMethodInfo.MakeGenericMethod(Type[] typeArguments)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.n::NUnit#Framework#Interfaces#IReflectionInfo#GetCustomAttributes``1(System.Boolean)">
            <summary>Sets the stub of IReflectionInfo.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.n::NUnit#Framework#Interfaces#IReflectionInfo#IsDefined``1(System.Boolean)">
            <summary>Sets the stub of IReflectionInfo.IsDefined(Boolean inherit)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.NameGet">
            <summary>Sets the stub of IMethodInfo.get_Name()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.ReturnTypeGet">
            <summary>Sets the stub of IMethodInfo.get_ReturnType()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.TypeInfoGet">
            <summary>Sets the stub of IMethodInfo.get_TypeInfo()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.n::NUnit#Framework#Interfaces#IMethodInfo#ContainsGenericParameters">
            <summary>Sets the stub of IMethodInfo.get_ContainsGenericParameters()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.n::NUnit#Framework#Interfaces#IMethodInfo#IsAbstract">
            <summary>Sets the stub of IMethodInfo.get_IsAbstract()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.n::NUnit#Framework#Interfaces#IMethodInfo#IsGenericMethod">
            <summary>Sets the stub of IMethodInfo.get_IsGenericMethod()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.n::NUnit#Framework#Interfaces#IMethodInfo#IsGenericMethodDefinition">
            <summary>Sets the stub of IMethodInfo.get_IsGenericMethodDefinition()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.n::NUnit#Framework#Interfaces#IMethodInfo#IsPublic">
            <summary>Sets the stub of IMethodInfo.get_IsPublic()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.n::NUnit#Framework#Interfaces#IMethodInfo#MethodInfo">
            <summary>Sets the stub of IMethodInfo.get_MethodInfo()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.n::NUnit#Framework#Interfaces#IMethodInfo#Name">
            <summary>Sets the stub of IMethodInfo.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.n::NUnit#Framework#Interfaces#IMethodInfo#ReturnType">
            <summary>Sets the stub of IMethodInfo.get_ReturnType()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubIMethodInfo.n::NUnit#Framework#Interfaces#IMethodInfo#TypeInfo">
            <summary>Sets the stub of IMethodInfo.get_TypeInfo()</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubIParameterDataProvider">
            <summary>Stub type of NUnit.Framework.Interfaces.IParameterDataProvider</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIParameterDataProvider.#ctor">
            <summary>Initializes a new instance of type StubIParameterDataProvider</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIParameterDataProvider.GetDataForIParameterInfo">
            <summary>Sets the stub of IParameterDataProvider.GetDataFor(IParameterInfo parameter)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIParameterDataProvider.HasDataForIParameterInfo">
            <summary>Sets the stub of IParameterDataProvider.HasDataFor(IParameterInfo parameter)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIParameterDataProvider.n::NUnit#Framework#Interfaces#IParameterDataProvider#GetDataFor(NUnit.Framework.Interfaces.IParameterInfo)">
            <summary>Sets the stub of IParameterDataProvider.GetDataFor(IParameterInfo parameter)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIParameterDataProvider.n::NUnit#Framework#Interfaces#IParameterDataProvider#HasDataFor(NUnit.Framework.Interfaces.IParameterInfo)">
            <summary>Sets the stub of IParameterDataProvider.HasDataFor(IParameterInfo parameter)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubIParameterDataSource">
            <summary>Stub type of NUnit.Framework.Interfaces.IParameterDataSource</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIParameterDataSource.#ctor">
            <summary>Initializes a new instance of type StubIParameterDataSource</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIParameterDataSource.GetDataIParameterInfo">
            <summary>Sets the stub of IParameterDataSource.GetData(IParameterInfo parameter)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIParameterDataSource.n::NUnit#Framework#Interfaces#IParameterDataSource#GetData(NUnit.Framework.Interfaces.IParameterInfo)">
            <summary>Sets the stub of IParameterDataSource.GetData(IParameterInfo parameter)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubIParameterInfo">
            <summary>Stub type of NUnit.Framework.Interfaces.IParameterInfo</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIParameterInfo.#ctor">
            <summary>Initializes a new instance of type StubIParameterInfo</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIParameterInfo.GetCustomAttributesOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0[]})">
            <summary>Sets stubs of GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIParameterInfo.IsDefinedOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,System.Boolean})">
            <summary>Sets stubs of IsDefined(Boolean inherit)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIParameterInfo.IsOptionalGet">
            <summary>Sets the stub of IParameterInfo.get_IsOptional()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIParameterInfo.MethodGet">
            <summary>Sets the stub of IParameterInfo.get_Method()</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIParameterInfo.n::NUnit#Framework#Interfaces#IReflectionInfo#GetCustomAttributes``1(System.Boolean)">
            <summary>Sets the stub of IReflectionInfo.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIParameterInfo.n::NUnit#Framework#Interfaces#IReflectionInfo#IsDefined``1(System.Boolean)">
            <summary>Sets the stub of IReflectionInfo.IsDefined(Boolean inherit)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIParameterInfo.ParameterInfoGet">
            <summary>Sets the stub of IParameterInfo.get_ParameterInfo()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIParameterInfo.ParameterTypeGet">
            <summary>Sets the stub of IParameterInfo.get_ParameterType()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubIParameterInfo.n::NUnit#Framework#Interfaces#IParameterInfo#IsOptional">
            <summary>Sets the stub of IParameterInfo.get_IsOptional()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubIParameterInfo.n::NUnit#Framework#Interfaces#IParameterInfo#Method">
            <summary>Sets the stub of IParameterInfo.get_Method()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubIParameterInfo.n::NUnit#Framework#Interfaces#IParameterInfo#ParameterInfo">
            <summary>Sets the stub of IParameterInfo.get_ParameterInfo()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubIParameterInfo.n::NUnit#Framework#Interfaces#IParameterInfo#ParameterType">
            <summary>Sets the stub of IParameterInfo.get_ParameterType()</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubIPropertyBag">
            <summary>Stub type of NUnit.Framework.Interfaces.IPropertyBag</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIPropertyBag.#ctor">
            <summary>Initializes a new instance of type StubIPropertyBag</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIPropertyBag.AddStringObject">
            <summary>Sets the stub of IPropertyBag.Add(String key, Object value)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIPropertyBag.AddToXmlTNodeBoolean">
            <summary>Sets the stub of IXmlNodeBuilder.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIPropertyBag.ContainsKeyString">
            <summary>Sets the stub of IPropertyBag.ContainsKey(String key)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIPropertyBag.GetString">
            <summary>Sets the stub of IPropertyBag.Get(String key)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIPropertyBag.ItemGetString">
            <summary>Sets the stub of IPropertyBag.get_Item(String key)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIPropertyBag.ItemSetStringIList">
            <summary>Sets the stub of IPropertyBag.set_Item(String key, IList value)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIPropertyBag.KeysGet">
            <summary>Sets the stub of IPropertyBag.get_Keys()</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIPropertyBag.n::NUnit#Framework#Interfaces#IPropertyBag#Add(System.String,System.Object)">
            <summary>Sets the stub of IPropertyBag.Add(String key, Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIPropertyBag.n::NUnit#Framework#Interfaces#IPropertyBag#ContainsKey(System.String)">
            <summary>Sets the stub of IPropertyBag.ContainsKey(String key)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIPropertyBag.n::NUnit#Framework#Interfaces#IPropertyBag#Get(System.String)">
            <summary>Sets the stub of IPropertyBag.Get(String key)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIPropertyBag.n::NUnit#Framework#Interfaces#IPropertyBag#Set(System.String,System.Object)">
            <summary>Sets the stub of IPropertyBag.Set(String key, Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIPropertyBag.n::NUnit#Framework#Interfaces#IXmlNodeBuilder#AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of IXmlNodeBuilder.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIPropertyBag.n::NUnit#Framework#Interfaces#IXmlNodeBuilder#ToXml(System.Boolean)">
            <summary>Sets the stub of IXmlNodeBuilder.ToXml(Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIPropertyBag.SetStringObject">
            <summary>Sets the stub of IPropertyBag.Set(String key, Object value)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIPropertyBag.ToXmlBoolean">
            <summary>Sets the stub of IXmlNodeBuilder.ToXml(Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubIPropertyBag.NUnit#Framework#Interfaces#IPropertyBag#Item(System.String)">
            <summary>Sets the stub of IPropertyBag.get_Item(String key)</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubIPropertyBag.n::NUnit#Framework#Interfaces#IPropertyBag#Keys">
            <summary>Sets the stub of IPropertyBag.get_Keys()</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubIReflectionInfo">
            <summary>Stub type of NUnit.Framework.Interfaces.IReflectionInfo</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIReflectionInfo.#ctor">
            <summary>Initializes a new instance of type StubIReflectionInfo</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIReflectionInfo.GetCustomAttributesOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0[]})">
            <summary>Sets stubs of GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIReflectionInfo.IsDefinedOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,System.Boolean})">
            <summary>Sets stubs of IsDefined(Boolean inherit)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIReflectionInfo.n::NUnit#Framework#Interfaces#IReflectionInfo#GetCustomAttributes``1(System.Boolean)">
            <summary>Sets the stub of IReflectionInfo.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIReflectionInfo.n::NUnit#Framework#Interfaces#IReflectionInfo#IsDefined``1(System.Boolean)">
            <summary>Sets the stub of IReflectionInfo.IsDefined(Boolean inherit)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubISimpleTestBuilder">
            <summary>Stub type of NUnit.Framework.Interfaces.ISimpleTestBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubISimpleTestBuilder.#ctor">
            <summary>Initializes a new instance of type StubISimpleTestBuilder</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubISimpleTestBuilder.BuildFromIMethodInfoTest">
            <summary>Sets the stub of ISimpleTestBuilder.BuildFrom(IMethodInfo method, Test suite)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubISimpleTestBuilder.n::NUnit#Framework#Interfaces#ISimpleTestBuilder#BuildFrom(NUnit.Framework.Interfaces.IMethodInfo,NUnit.Framework.Internal.Test)">
            <summary>Sets the stub of ISimpleTestBuilder.BuildFrom(IMethodInfo method, Test suite)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubISuiteBuilder">
            <summary>Stub type of NUnit.Framework.Interfaces.ISuiteBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubISuiteBuilder.#ctor">
            <summary>Initializes a new instance of type StubISuiteBuilder</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubISuiteBuilder.BuildFromITypeInfo">
            <summary>Sets the stub of ISuiteBuilder.BuildFrom(ITypeInfo typeInfo)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubISuiteBuilder.CanBuildFromITypeInfo">
            <summary>Sets the stub of ISuiteBuilder.CanBuildFrom(ITypeInfo typeInfo)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubISuiteBuilder.n::NUnit#Framework#Interfaces#ISuiteBuilder#BuildFrom(NUnit.Framework.Interfaces.ITypeInfo)">
            <summary>Sets the stub of ISuiteBuilder.BuildFrom(ITypeInfo typeInfo)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubISuiteBuilder.n::NUnit#Framework#Interfaces#ISuiteBuilder#CanBuildFrom(NUnit.Framework.Interfaces.ITypeInfo)">
            <summary>Sets the stub of ISuiteBuilder.CanBuildFrom(ITypeInfo typeInfo)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubITest">
            <summary>Stub type of NUnit.Framework.Interfaces.ITest</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITest.#ctor">
            <summary>Initializes a new instance of type StubITest</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITest.AddToXmlTNodeBoolean">
            <summary>Sets the stub of IXmlNodeBuilder.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITest.ArgumentsGet">
            <summary>Sets the stub of ITest.get_Arguments()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITest.ClassNameGet">
            <summary>Sets the stub of ITest.get_ClassName()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITest.FixtureGet">
            <summary>Sets the stub of ITest.get_Fixture()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITest.FullNameGet">
            <summary>Sets the stub of ITest.get_FullName()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITest.HasChildrenGet">
            <summary>Sets the stub of ITest.get_HasChildren()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITest.IdGet">
            <summary>Sets the stub of ITest.get_Id()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITest.IsSuiteGet">
            <summary>Sets the stub of ITest.get_IsSuite()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITest.MethodGet">
            <summary>Sets the stub of ITest.get_Method()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITest.MethodNameGet">
            <summary>Sets the stub of ITest.get_MethodName()</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITest.n::NUnit#Framework#Interfaces#IXmlNodeBuilder#AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of IXmlNodeBuilder.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITest.n::NUnit#Framework#Interfaces#IXmlNodeBuilder#ToXml(System.Boolean)">
            <summary>Sets the stub of IXmlNodeBuilder.ToXml(Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITest.NameGet">
            <summary>Sets the stub of ITest.get_Name()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITest.ParentGet">
            <summary>Sets the stub of ITest.get_Parent()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITest.PropertiesGet">
            <summary>Sets the stub of ITest.get_Properties()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITest.RunStateGet">
            <summary>Sets the stub of ITest.get_RunState()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITest.TestCaseCountGet">
            <summary>Sets the stub of ITest.get_TestCaseCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITest.TestTypeGet">
            <summary>Sets the stub of ITest.get_TestType()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITest.TestsGet">
            <summary>Sets the stub of ITest.get_Tests()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITest.ToXmlBoolean">
            <summary>Sets the stub of IXmlNodeBuilder.ToXml(Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITest.TypeInfoGet">
            <summary>Sets the stub of ITest.get_TypeInfo()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITest.n::NUnit#Framework#Interfaces#ITest#Arguments">
            <summary>Sets the stub of ITest.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITest.n::NUnit#Framework#Interfaces#ITest#ClassName">
            <summary>Sets the stub of ITest.get_ClassName()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITest.n::NUnit#Framework#Interfaces#ITest#Fixture">
            <summary>Sets the stub of ITest.get_Fixture()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITest.n::NUnit#Framework#Interfaces#ITest#FullName">
            <summary>Sets the stub of ITest.get_FullName()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITest.n::NUnit#Framework#Interfaces#ITest#HasChildren">
            <summary>Sets the stub of ITest.get_HasChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITest.n::NUnit#Framework#Interfaces#ITest#Id">
            <summary>Sets the stub of ITest.get_Id()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITest.n::NUnit#Framework#Interfaces#ITest#IsSuite">
            <summary>Sets the stub of ITest.get_IsSuite()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITest.n::NUnit#Framework#Interfaces#ITest#Method">
            <summary>Sets the stub of ITest.get_Method()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITest.n::NUnit#Framework#Interfaces#ITest#MethodName">
            <summary>Sets the stub of ITest.get_MethodName()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITest.n::NUnit#Framework#Interfaces#ITest#Name">
            <summary>Sets the stub of ITest.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITest.n::NUnit#Framework#Interfaces#ITest#Parent">
            <summary>Sets the stub of ITest.get_Parent()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITest.n::NUnit#Framework#Interfaces#ITest#Properties">
            <summary>Sets the stub of ITest.get_Properties()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITest.n::NUnit#Framework#Interfaces#ITest#RunState">
            <summary>Sets the stub of ITest.get_RunState()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITest.n::NUnit#Framework#Interfaces#ITest#TestCaseCount">
            <summary>Sets the stub of ITest.get_TestCaseCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITest.n::NUnit#Framework#Interfaces#ITest#TestType">
            <summary>Sets the stub of ITest.get_TestType()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITest.n::NUnit#Framework#Interfaces#ITest#Tests">
            <summary>Sets the stub of ITest.get_Tests()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITest.n::NUnit#Framework#Interfaces#ITest#TypeInfo">
            <summary>Sets the stub of ITest.get_TypeInfo()</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubITestBuilder">
            <summary>Stub type of NUnit.Framework.Interfaces.ITestBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITestBuilder.#ctor">
            <summary>Initializes a new instance of type StubITestBuilder</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestBuilder.BuildFromIMethodInfoTest">
            <summary>Sets the stub of ITestBuilder.BuildFrom(IMethodInfo method, Test suite)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITestBuilder.n::NUnit#Framework#Interfaces#ITestBuilder#BuildFrom(NUnit.Framework.Interfaces.IMethodInfo,NUnit.Framework.Internal.Test)">
            <summary>Sets the stub of ITestBuilder.BuildFrom(IMethodInfo method, Test suite)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubITestCaseBuilder">
            <summary>Stub type of NUnit.Framework.Interfaces.ITestCaseBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITestCaseBuilder.#ctor">
            <summary>Initializes a new instance of type StubITestCaseBuilder</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestCaseBuilder.BuildFromIMethodInfoTest">
            <summary>Sets the stub of ITestCaseBuilder.BuildFrom(IMethodInfo method, Test suite)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestCaseBuilder.CanBuildFromIMethodInfoTest">
            <summary>Sets the stub of ITestCaseBuilder.CanBuildFrom(IMethodInfo method, Test suite)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITestCaseBuilder.n::NUnit#Framework#Interfaces#ITestCaseBuilder#BuildFrom(NUnit.Framework.Interfaces.IMethodInfo,NUnit.Framework.Internal.Test)">
            <summary>Sets the stub of ITestCaseBuilder.BuildFrom(IMethodInfo method, Test suite)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITestCaseBuilder.n::NUnit#Framework#Interfaces#ITestCaseBuilder#CanBuildFrom(NUnit.Framework.Interfaces.IMethodInfo,NUnit.Framework.Internal.Test)">
            <summary>Sets the stub of ITestCaseBuilder.CanBuildFrom(IMethodInfo method, Test suite)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubITestCaseData">
            <summary>Stub type of NUnit.Framework.Interfaces.ITestCaseData</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITestCaseData.#ctor">
            <summary>Initializes a new instance of type StubITestCaseData</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestCaseData.ArgumentsGet">
            <summary>Sets the stub of ITestData.get_Arguments()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestCaseData.ExpectedResultGet">
            <summary>Sets the stub of ITestCaseData.get_ExpectedResult()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestCaseData.HasExpectedResultGet">
            <summary>Sets the stub of ITestCaseData.get_HasExpectedResult()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestCaseData.PropertiesGet">
            <summary>Sets the stub of ITestData.get_Properties()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestCaseData.RunStateGet">
            <summary>Sets the stub of ITestData.get_RunState()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestCaseData.TestNameGet">
            <summary>Sets the stub of ITestData.get_TestName()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestCaseData.n::NUnit#Framework#Interfaces#ITestData#Arguments">
            <summary>Sets the stub of ITestData.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestCaseData.n::NUnit#Framework#Interfaces#ITestCaseData#ExpectedResult">
            <summary>Sets the stub of ITestCaseData.get_ExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestCaseData.n::NUnit#Framework#Interfaces#ITestCaseData#HasExpectedResult">
            <summary>Sets the stub of ITestCaseData.get_HasExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestCaseData.n::NUnit#Framework#Interfaces#ITestData#Properties">
            <summary>Sets the stub of ITestData.get_Properties()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestCaseData.n::NUnit#Framework#Interfaces#ITestData#RunState">
            <summary>Sets the stub of ITestData.get_RunState()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestCaseData.n::NUnit#Framework#Interfaces#ITestData#TestName">
            <summary>Sets the stub of ITestData.get_TestName()</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubITestData">
            <summary>Stub type of NUnit.Framework.Interfaces.ITestData</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITestData.#ctor">
            <summary>Initializes a new instance of type StubITestData</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestData.ArgumentsGet">
            <summary>Sets the stub of ITestData.get_Arguments()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestData.PropertiesGet">
            <summary>Sets the stub of ITestData.get_Properties()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestData.RunStateGet">
            <summary>Sets the stub of ITestData.get_RunState()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestData.TestNameGet">
            <summary>Sets the stub of ITestData.get_TestName()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestData.n::NUnit#Framework#Interfaces#ITestData#Arguments">
            <summary>Sets the stub of ITestData.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestData.n::NUnit#Framework#Interfaces#ITestData#Properties">
            <summary>Sets the stub of ITestData.get_Properties()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestData.n::NUnit#Framework#Interfaces#ITestData#RunState">
            <summary>Sets the stub of ITestData.get_RunState()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestData.n::NUnit#Framework#Interfaces#ITestData#TestName">
            <summary>Sets the stub of ITestData.get_TestName()</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubITestFilter">
            <summary>Stub type of NUnit.Framework.Interfaces.ITestFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITestFilter.#ctor">
            <summary>Initializes a new instance of type StubITestFilter</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestFilter.AddToXmlTNodeBoolean">
            <summary>Sets the stub of IXmlNodeBuilder.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestFilter.IsExplicitMatchITest">
            <summary>Sets the stub of ITestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITestFilter.n::NUnit#Framework#Interfaces#ITestFilter#IsExplicitMatch(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of ITestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITestFilter.n::NUnit#Framework#Interfaces#ITestFilter#Pass(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of ITestFilter.Pass(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITestFilter.n::NUnit#Framework#Interfaces#IXmlNodeBuilder#AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of IXmlNodeBuilder.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITestFilter.n::NUnit#Framework#Interfaces#IXmlNodeBuilder#ToXml(System.Boolean)">
            <summary>Sets the stub of IXmlNodeBuilder.ToXml(Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestFilter.PassITest">
            <summary>Sets the stub of ITestFilter.Pass(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestFilter.ToXmlBoolean">
            <summary>Sets the stub of IXmlNodeBuilder.ToXml(Boolean recursive)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubITestFixtureData">
            <summary>Stub type of NUnit.Framework.Interfaces.ITestFixtureData</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITestFixtureData.#ctor">
            <summary>Initializes a new instance of type StubITestFixtureData</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestFixtureData.ArgumentsGet">
            <summary>Sets the stub of ITestData.get_Arguments()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestFixtureData.PropertiesGet">
            <summary>Sets the stub of ITestData.get_Properties()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestFixtureData.RunStateGet">
            <summary>Sets the stub of ITestData.get_RunState()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestFixtureData.TestNameGet">
            <summary>Sets the stub of ITestData.get_TestName()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestFixtureData.TypeArgsGet">
            <summary>Sets the stub of ITestFixtureData.get_TypeArgs()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestFixtureData.n::NUnit#Framework#Interfaces#ITestData#Arguments">
            <summary>Sets the stub of ITestData.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestFixtureData.n::NUnit#Framework#Interfaces#ITestData#Properties">
            <summary>Sets the stub of ITestData.get_Properties()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestFixtureData.n::NUnit#Framework#Interfaces#ITestData#RunState">
            <summary>Sets the stub of ITestData.get_RunState()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestFixtureData.n::NUnit#Framework#Interfaces#ITestData#TestName">
            <summary>Sets the stub of ITestData.get_TestName()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestFixtureData.n::NUnit#Framework#Interfaces#ITestFixtureData#TypeArgs">
            <summary>Sets the stub of ITestFixtureData.get_TypeArgs()</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubITestListener">
            <summary>Stub type of NUnit.Framework.Interfaces.ITestListener</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITestListener.#ctor">
            <summary>Initializes a new instance of type StubITestListener</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITestListener.n::NUnit#Framework#Interfaces#ITestListener#TestFinished(NUnit.Framework.Interfaces.ITestResult)">
            <summary>Sets the stub of ITestListener.TestFinished(ITestResult result)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITestListener.n::NUnit#Framework#Interfaces#ITestListener#TestOutput(NUnit.Framework.Interfaces.TestOutput)">
            <summary>Sets the stub of ITestListener.TestOutput(TestOutput output)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITestListener.n::NUnit#Framework#Interfaces#ITestListener#TestStarted(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of ITestListener.TestStarted(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestListener.TestFinishedITestResult">
            <summary>Sets the stub of ITestListener.TestFinished(ITestResult result)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestListener.TestOutputTestOutput">
            <summary>Sets the stub of ITestListener.TestOutput(TestOutput output)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestListener.TestStartedITest">
            <summary>Sets the stub of ITestListener.TestStarted(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubITestResult">
            <summary>Stub type of NUnit.Framework.Interfaces.ITestResult</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITestResult.#ctor">
            <summary>Initializes a new instance of type StubITestResult</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestResult.AddToXmlTNodeBoolean">
            <summary>Sets the stub of IXmlNodeBuilder.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestResult.AssertCountGet">
            <summary>Sets the stub of ITestResult.get_AssertCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestResult.AssertionResultsGet">
            <summary>Sets the stub of ITestResult.get_AssertionResults()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestResult.ChildrenGet">
            <summary>Sets the stub of ITestResult.get_Children()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestResult.DurationGet">
            <summary>Sets the stub of ITestResult.get_Duration()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestResult.EndTimeGet">
            <summary>Sets the stub of ITestResult.get_EndTime()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestResult.FailCountGet">
            <summary>Sets the stub of ITestResult.get_FailCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestResult.FullNameGet">
            <summary>Sets the stub of ITestResult.get_FullName()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestResult.HasChildrenGet">
            <summary>Sets the stub of ITestResult.get_HasChildren()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestResult.InconclusiveCountGet">
            <summary>Sets the stub of ITestResult.get_InconclusiveCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestResult.MessageGet">
            <summary>Sets the stub of ITestResult.get_Message()</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITestResult.n::NUnit#Framework#Interfaces#IXmlNodeBuilder#AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of IXmlNodeBuilder.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITestResult.n::NUnit#Framework#Interfaces#IXmlNodeBuilder#ToXml(System.Boolean)">
            <summary>Sets the stub of IXmlNodeBuilder.ToXml(Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestResult.NameGet">
            <summary>Sets the stub of ITestResult.get_Name()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestResult.OutputGet">
            <summary>Sets the stub of ITestResult.get_Output()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestResult.PassCountGet">
            <summary>Sets the stub of ITestResult.get_PassCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestResult.ResultStateGet">
            <summary>Sets the stub of ITestResult.get_ResultState()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestResult.SkipCountGet">
            <summary>Sets the stub of ITestResult.get_SkipCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestResult.StackTraceGet">
            <summary>Sets the stub of ITestResult.get_StackTrace()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestResult.StartTimeGet">
            <summary>Sets the stub of ITestResult.get_StartTime()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestResult.TestAttachmentsGet">
            <summary>Sets the stub of ITestResult.get_TestAttachments()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestResult.TestGet">
            <summary>Sets the stub of ITestResult.get_Test()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestResult.ToXmlBoolean">
            <summary>Sets the stub of IXmlNodeBuilder.ToXml(Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITestResult.WarningCountGet">
            <summary>Sets the stub of ITestResult.get_WarningCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestResult.n::NUnit#Framework#Interfaces#ITestResult#AssertCount">
            <summary>Sets the stub of ITestResult.get_AssertCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestResult.n::NUnit#Framework#Interfaces#ITestResult#AssertionResults">
            <summary>Sets the stub of ITestResult.get_AssertionResults()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestResult.n::NUnit#Framework#Interfaces#ITestResult#Children">
            <summary>Sets the stub of ITestResult.get_Children()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestResult.n::NUnit#Framework#Interfaces#ITestResult#Duration">
            <summary>Sets the stub of ITestResult.get_Duration()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestResult.n::NUnit#Framework#Interfaces#ITestResult#EndTime">
            <summary>Sets the stub of ITestResult.get_EndTime()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestResult.n::NUnit#Framework#Interfaces#ITestResult#FailCount">
            <summary>Sets the stub of ITestResult.get_FailCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestResult.n::NUnit#Framework#Interfaces#ITestResult#FullName">
            <summary>Sets the stub of ITestResult.get_FullName()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestResult.n::NUnit#Framework#Interfaces#ITestResult#HasChildren">
            <summary>Sets the stub of ITestResult.get_HasChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestResult.n::NUnit#Framework#Interfaces#ITestResult#InconclusiveCount">
            <summary>Sets the stub of ITestResult.get_InconclusiveCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestResult.n::NUnit#Framework#Interfaces#ITestResult#Message">
            <summary>Sets the stub of ITestResult.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestResult.n::NUnit#Framework#Interfaces#ITestResult#Name">
            <summary>Sets the stub of ITestResult.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestResult.n::NUnit#Framework#Interfaces#ITestResult#Output">
            <summary>Sets the stub of ITestResult.get_Output()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestResult.n::NUnit#Framework#Interfaces#ITestResult#PassCount">
            <summary>Sets the stub of ITestResult.get_PassCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestResult.n::NUnit#Framework#Interfaces#ITestResult#ResultState">
            <summary>Sets the stub of ITestResult.get_ResultState()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestResult.n::NUnit#Framework#Interfaces#ITestResult#SkipCount">
            <summary>Sets the stub of ITestResult.get_SkipCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestResult.n::NUnit#Framework#Interfaces#ITestResult#StackTrace">
            <summary>Sets the stub of ITestResult.get_StackTrace()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestResult.n::NUnit#Framework#Interfaces#ITestResult#StartTime">
            <summary>Sets the stub of ITestResult.get_StartTime()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestResult.n::NUnit#Framework#Interfaces#ITestResult#Test">
            <summary>Sets the stub of ITestResult.get_Test()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestResult.n::NUnit#Framework#Interfaces#ITestResult#TestAttachments">
            <summary>Sets the stub of ITestResult.get_TestAttachments()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITestResult.n::NUnit#Framework#Interfaces#ITestResult#WarningCount">
            <summary>Sets the stub of ITestResult.get_WarningCount()</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubITypeInfo">
            <summary>Stub type of NUnit.Framework.Interfaces.ITypeInfo</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.#ctor">
            <summary>Initializes a new instance of type StubITypeInfo</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.AssemblyGet">
            <summary>Sets the stub of ITypeInfo.get_Assembly()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.BaseTypeGet">
            <summary>Sets the stub of ITypeInfo.get_BaseType()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.ConstructObjectArray">
            <summary>Sets the stub of ITypeInfo.Construct(Object[] args)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.ContainsGenericParametersGet">
            <summary>Sets the stub of ITypeInfo.get_ContainsGenericParameters()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.FullNameGet">
            <summary>Sets the stub of ITypeInfo.get_FullName()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.GetConstructorTypeArray">
            <summary>Sets the stub of ITypeInfo.GetConstructor(Type[] argTypes)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.GetCustomAttributesOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0[]})">
            <summary>Sets stubs of GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.GetDisplayName">
            <summary>Sets the stub of ITypeInfo.GetDisplayName()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.GetDisplayNameObjectArray">
            <summary>Sets the stub of ITypeInfo.GetDisplayName(Object[] args)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.GetGenericTypeDefinition">
            <summary>Sets the stub of ITypeInfo.GetGenericTypeDefinition()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.GetMethodsBindingFlags">
            <summary>Sets the stub of ITypeInfo.GetMethods(BindingFlags flags)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.HasConstructorTypeArray">
            <summary>Sets the stub of ITypeInfo.HasConstructor(Type[] argTypes)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.HasMethodWithAttributeType">
            <summary>Sets the stub of ITypeInfo.HasMethodWithAttribute(Type attrType)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.IsAbstractGet">
            <summary>Sets the stub of ITypeInfo.get_IsAbstract()</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.IsDefinedOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,System.Boolean})">
            <summary>Sets stubs of IsDefined(Boolean inherit)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.IsGenericTypeDefinitionGet">
            <summary>Sets the stub of ITypeInfo.get_IsGenericTypeDefinition()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.IsGenericTypeGet">
            <summary>Sets the stub of ITypeInfo.get_IsGenericType()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.IsSealedGet">
            <summary>Sets the stub of ITypeInfo.get_IsSealed()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.IsStaticClassGet">
            <summary>Sets the stub of ITypeInfo.get_IsStaticClass()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.IsTypeType">
            <summary>Sets the stub of ITypeInfo.IsType(Type type)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.MakeGenericTypeTypeArray">
            <summary>Sets the stub of ITypeInfo.MakeGenericType(Type[] typeArgs)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#IReflectionInfo#GetCustomAttributes``1(System.Boolean)">
            <summary>Sets the stub of IReflectionInfo.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#IReflectionInfo#IsDefined``1(System.Boolean)">
            <summary>Sets the stub of IReflectionInfo.IsDefined(Boolean inherit)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#ITypeInfo#Construct(System.Object[])">
            <summary>Sets the stub of ITypeInfo.Construct(Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#ITypeInfo#GetConstructor(System.Type[])">
            <summary>Sets the stub of ITypeInfo.GetConstructor(Type[] argTypes)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#ITypeInfo#GetDisplayName">
            <summary>Sets the stub of ITypeInfo.GetDisplayName()</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#ITypeInfo#GetDisplayName(System.Object[])">
            <summary>Sets the stub of ITypeInfo.GetDisplayName(Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#ITypeInfo#GetGenericTypeDefinition">
            <summary>Sets the stub of ITypeInfo.GetGenericTypeDefinition()</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#ITypeInfo#GetMethods(System.Reflection.BindingFlags)">
            <summary>Sets the stub of ITypeInfo.GetMethods(BindingFlags flags)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#ITypeInfo#HasConstructor(System.Type[])">
            <summary>Sets the stub of ITypeInfo.HasConstructor(Type[] argTypes)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#ITypeInfo#HasMethodWithAttribute(System.Type)">
            <summary>Sets the stub of ITypeInfo.HasMethodWithAttribute(Type attrType)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#ITypeInfo#IsType(System.Type)">
            <summary>Sets the stub of ITypeInfo.IsType(Type type)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#ITypeInfo#MakeGenericType(System.Type[])">
            <summary>Sets the stub of ITypeInfo.MakeGenericType(Type[] typeArgs)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.NameGet">
            <summary>Sets the stub of ITypeInfo.get_Name()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.NamespaceGet">
            <summary>Sets the stub of ITypeInfo.get_Namespace()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.TypeGet">
            <summary>Sets the stub of ITypeInfo.get_Type()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#ITypeInfo#Assembly">
            <summary>Sets the stub of ITypeInfo.get_Assembly()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#ITypeInfo#BaseType">
            <summary>Sets the stub of ITypeInfo.get_BaseType()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#ITypeInfo#ContainsGenericParameters">
            <summary>Sets the stub of ITypeInfo.get_ContainsGenericParameters()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#ITypeInfo#FullName">
            <summary>Sets the stub of ITypeInfo.get_FullName()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#ITypeInfo#IsAbstract">
            <summary>Sets the stub of ITypeInfo.get_IsAbstract()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#ITypeInfo#IsGenericType">
            <summary>Sets the stub of ITypeInfo.get_IsGenericType()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#ITypeInfo#IsGenericTypeDefinition">
            <summary>Sets the stub of ITypeInfo.get_IsGenericTypeDefinition()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#ITypeInfo#IsSealed">
            <summary>Sets the stub of ITypeInfo.get_IsSealed()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#ITypeInfo#IsStaticClass">
            <summary>Sets the stub of ITypeInfo.get_IsStaticClass()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#ITypeInfo#Name">
            <summary>Sets the stub of ITypeInfo.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#ITypeInfo#Namespace">
            <summary>Sets the stub of ITypeInfo.get_Namespace()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubITypeInfo.n::NUnit#Framework#Interfaces#ITypeInfo#Type">
            <summary>Sets the stub of ITypeInfo.get_Type()</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubIWrapSetUpTearDown">
            <summary>Stub type of NUnit.Framework.Interfaces.IWrapSetUpTearDown</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIWrapSetUpTearDown.#ctor">
            <summary>Initializes a new instance of type StubIWrapSetUpTearDown</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIWrapSetUpTearDown.n::NUnit#Framework#Interfaces#ICommandWrapper#Wrap(NUnit.Framework.Internal.Commands.TestCommand)">
            <summary>Sets the stub of ICommandWrapper.Wrap(TestCommand command)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIWrapSetUpTearDown.WrapTestCommand">
            <summary>Sets the stub of ICommandWrapper.Wrap(TestCommand command)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubIWrapTestMethod">
            <summary>Stub type of NUnit.Framework.Interfaces.IWrapTestMethod</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIWrapTestMethod.#ctor">
            <summary>Initializes a new instance of type StubIWrapTestMethod</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIWrapTestMethod.n::NUnit#Framework#Interfaces#ICommandWrapper#Wrap(NUnit.Framework.Internal.Commands.TestCommand)">
            <summary>Sets the stub of ICommandWrapper.Wrap(TestCommand command)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIWrapTestMethod.WrapTestCommand">
            <summary>Sets the stub of ICommandWrapper.Wrap(TestCommand command)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubIXmlNodeBuilder">
            <summary>Stub type of NUnit.Framework.Interfaces.IXmlNodeBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIXmlNodeBuilder.#ctor">
            <summary>Initializes a new instance of type StubIXmlNodeBuilder</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIXmlNodeBuilder.AddToXmlTNodeBoolean">
            <summary>Sets the stub of IXmlNodeBuilder.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIXmlNodeBuilder.n::NUnit#Framework#Interfaces#IXmlNodeBuilder#AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of IXmlNodeBuilder.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubIXmlNodeBuilder.n::NUnit#Framework#Interfaces#IXmlNodeBuilder#ToXml(System.Boolean)">
            <summary>Sets the stub of IXmlNodeBuilder.ToXml(Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubIXmlNodeBuilder.ToXmlBoolean">
            <summary>Sets the stub of IXmlNodeBuilder.ToXml(Boolean recursive)</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubNodeList">
            <summary>Stub type of NUnit.Framework.Interfaces.NodeList</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubNodeList.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubNodeList.InitializeStub">
            <summary>Initializes a new instance of type StubNodeList</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubNodeList.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubNodeList.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubNodeList.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubResultState">
            <summary>Stub type of NUnit.Framework.Interfaces.ResultState</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubResultState.#ctor(NUnit.Framework.Interfaces.TestStatus)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubResultState.#ctor(NUnit.Framework.Interfaces.TestStatus,NUnit.Framework.Interfaces.FailureSite)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubResultState.#ctor(NUnit.Framework.Interfaces.TestStatus,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubResultState.#ctor(NUnit.Framework.Interfaces.TestStatus,System.String,NUnit.Framework.Interfaces.FailureSite)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubResultState.Equals(System.Object)">
            <summary>Sets the stub of ResultState.Equals(Object obj)</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubResultState.EqualsObject">
            <summary>Sets the stub of ResultState.Equals(Object obj)</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubResultState.GetHashCode">
            <summary>Sets the stub of ResultState.GetHashCode()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubResultState.GetHashCode01">
            <summary>Sets the stub of ResultState.GetHashCode()</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubResultState.InitializeStub">
            <summary>Initializes a new instance of type StubResultState</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubResultState.ToString">
            <summary>Sets the stub of ResultState.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubResultState.ToString01">
            <summary>Sets the stub of ResultState.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubResultState.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubResultState.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubResultState.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubTNode">
            <summary>Stub type of NUnit.Framework.Interfaces.TNode</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubTNode.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubTNode.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubTNode.#ctor(System.String,System.String,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubTNode.InitializeStub">
            <summary>Initializes a new instance of type StubTNode</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubTNode.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubTNode.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubTNode.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubTestAttachment">
            <summary>Stub type of NUnit.Framework.Interfaces.TestAttachment</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubTestAttachment.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubTestAttachment.InitializeStub">
            <summary>Initializes a new instance of type StubTestAttachment</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubTestAttachment.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubTestAttachment.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubTestAttachment.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Interfaces.Fakes.StubTestOutput">
            <summary>Stub type of NUnit.Framework.Interfaces.TestOutput</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubTestOutput.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubTestOutput.InitializeStub">
            <summary>Initializes a new instance of type StubTestOutput</summary>
        </member>
        <member name="M:NUnit.Framework.Interfaces.Fakes.StubTestOutput.ToString">
            <summary>Sets the stub of TestOutput.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Interfaces.Fakes.StubTestOutput.ToString01">
            <summary>Sets the stub of TestOutput.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubTestOutput.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubTestOutput.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Interfaces.Fakes.StubTestOutput.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.ShimCombinatorialStrategy">
            <summary>Shim type of NUnit.Framework.Internal.Builders.CombinatorialStrategy</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimCombinatorialStrategy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimCombinatorialStrategy.#ctor(NUnit.Framework.Internal.Builders.CombinatorialStrategy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimCombinatorialStrategy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimCombinatorialStrategy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimCombinatorialStrategy.Bind(NUnit.Framework.Interfaces.ICombiningStrategy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimCombinatorialStrategy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimCombinatorialStrategy.Constructor">
            <summary>Sets the shim of CombinatorialStrategy.CombinatorialStrategy()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimCombinatorialStrategy.GetTestCasesIEnumerableArray">
            <summary>Sets the shim of CombinatorialStrategy.GetTestCases(IEnumerable[] sources)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.ShimCombinatorialStrategy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimCombinatorialStrategy.AllInstances.GetTestCasesIEnumerableArray">
            <summary>Sets the shim of CombinatorialStrategy.GetTestCases(IEnumerable[] sources)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.ShimDatapointProvider">
            <summary>Shim type of NUnit.Framework.Internal.Builders.DatapointProvider</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimDatapointProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimDatapointProvider.#ctor(NUnit.Framework.Internal.Builders.DatapointProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimDatapointProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimDatapointProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimDatapointProvider.Bind(NUnit.Framework.Interfaces.IParameterDataProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDatapointProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDatapointProvider.Constructor">
            <summary>Sets the shim of DatapointProvider.DatapointProvider()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDatapointProvider.GetDataForIParameterInfo">
            <summary>Sets the shim of DatapointProvider.GetDataFor(IParameterInfo parameter)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDatapointProvider.GetElementTypeFromMemberInfoMemberInfo">
            <summary>Sets the shim of DatapointProvider.GetElementTypeFromMemberInfo(MemberInfo member)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDatapointProvider.GetTypeFromMemberInfoMemberInfo">
            <summary>Sets the shim of DatapointProvider.GetTypeFromMemberInfo(MemberInfo member)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDatapointProvider.HasDataForIParameterInfo">
            <summary>Sets the shim of DatapointProvider.HasDataFor(IParameterInfo parameter)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.ShimDatapointProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDatapointProvider.AllInstances.GetDataForIParameterInfo">
            <summary>Sets the shim of DatapointProvider.GetDataFor(IParameterInfo parameter)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDatapointProvider.AllInstances.GetElementTypeFromMemberInfoMemberInfo">
            <summary>Sets the shim of DatapointProvider.GetElementTypeFromMemberInfo(MemberInfo member)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDatapointProvider.AllInstances.GetTypeFromMemberInfoMemberInfo">
            <summary>Sets the shim of DatapointProvider.GetTypeFromMemberInfo(MemberInfo member)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDatapointProvider.AllInstances.HasDataForIParameterInfo">
            <summary>Sets the shim of DatapointProvider.HasDataFor(IParameterInfo parameter)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultSuiteBuilder">
            <summary>Shim type of NUnit.Framework.Internal.Builders.DefaultSuiteBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultSuiteBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultSuiteBuilder.#ctor(NUnit.Framework.Internal.Builders.DefaultSuiteBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultSuiteBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultSuiteBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultSuiteBuilder.Bind(NUnit.Framework.Interfaces.ISuiteBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultSuiteBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultSuiteBuilder.BuildFromITypeInfo">
            <summary>Sets the shim of DefaultSuiteBuilder.BuildFrom(ITypeInfo typeInfo)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultSuiteBuilder.BuildMultipleFixturesITypeInfoIEnumerableOfTestSuite">
            <summary>Sets the shim of DefaultSuiteBuilder.BuildMultipleFixtures(ITypeInfo typeInfo, IEnumerable`1&lt;TestSuite&gt; fixtures)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultSuiteBuilder.CanBuildFromITypeInfo">
            <summary>Sets the shim of DefaultSuiteBuilder.CanBuildFrom(ITypeInfo typeInfo)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultSuiteBuilder.Constructor">
            <summary>Sets the shim of DefaultSuiteBuilder.DefaultSuiteBuilder()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultSuiteBuilder.GetFixtureBuilderAttributesITypeInfo">
            <summary>Sets the shim of DefaultSuiteBuilder.GetFixtureBuilderAttributes(ITypeInfo typeInfo)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultSuiteBuilder.HasArgumentsIFixtureBuilder">
            <summary>Sets the shim of DefaultSuiteBuilder.HasArguments(IFixtureBuilder attr)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultSuiteBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultSuiteBuilder.AllInstances.BuildFromITypeInfo">
            <summary>Sets the shim of DefaultSuiteBuilder.BuildFrom(ITypeInfo typeInfo)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultSuiteBuilder.AllInstances.BuildMultipleFixturesITypeInfoIEnumerableOfTestSuite">
            <summary>Sets the shim of DefaultSuiteBuilder.BuildMultipleFixtures(ITypeInfo typeInfo, IEnumerable`1&lt;TestSuite&gt; fixtures)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultSuiteBuilder.AllInstances.CanBuildFromITypeInfo">
            <summary>Sets the shim of DefaultSuiteBuilder.CanBuildFrom(ITypeInfo typeInfo)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultSuiteBuilder.AllInstances.GetFixtureBuilderAttributesITypeInfo">
            <summary>Sets the shim of DefaultSuiteBuilder.GetFixtureBuilderAttributes(ITypeInfo typeInfo)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultSuiteBuilder.AllInstances.HasArgumentsIFixtureBuilder">
            <summary>Sets the shim of DefaultSuiteBuilder.HasArguments(IFixtureBuilder attr)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultTestCaseBuilder">
            <summary>Shim type of NUnit.Framework.Internal.Builders.DefaultTestCaseBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultTestCaseBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultTestCaseBuilder.#ctor(NUnit.Framework.Internal.Builders.DefaultTestCaseBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultTestCaseBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultTestCaseBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultTestCaseBuilder.Bind(NUnit.Framework.Interfaces.ITestCaseBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultTestCaseBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultTestCaseBuilder.BuildFromIMethodInfo">
            <summary>Sets the shim of DefaultTestCaseBuilder.BuildFrom(IMethodInfo method)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultTestCaseBuilder.BuildFromIMethodInfoTest">
            <summary>Sets the shim of DefaultTestCaseBuilder.BuildFrom(IMethodInfo method, Test parentSuite)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultTestCaseBuilder.BuildParameterizedMethodSuiteIMethodInfoIEnumerableOfTestMethod">
            <summary>Sets the shim of DefaultTestCaseBuilder.BuildParameterizedMethodSuite(IMethodInfo method, IEnumerable`1&lt;TestMethod&gt; tests)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultTestCaseBuilder.BuildSingleTestMethodIMethodInfoTest">
            <summary>Sets the shim of DefaultTestCaseBuilder.BuildSingleTestMethod(IMethodInfo method, Test suite)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultTestCaseBuilder.CanBuildFromIMethodInfo">
            <summary>Sets the shim of DefaultTestCaseBuilder.CanBuildFrom(IMethodInfo method)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultTestCaseBuilder.CanBuildFromIMethodInfoTest">
            <summary>Sets the shim of DefaultTestCaseBuilder.CanBuildFrom(IMethodInfo method, Test parentSuite)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultTestCaseBuilder.Constructor">
            <summary>Sets the shim of DefaultTestCaseBuilder.DefaultTestCaseBuilder()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultTestCaseBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultTestCaseBuilder.AllInstances.BuildFromIMethodInfo">
            <summary>Sets the shim of DefaultTestCaseBuilder.BuildFrom(IMethodInfo method)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultTestCaseBuilder.AllInstances.BuildFromIMethodInfoTest">
            <summary>Sets the shim of DefaultTestCaseBuilder.BuildFrom(IMethodInfo method, Test parentSuite)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultTestCaseBuilder.AllInstances.BuildParameterizedMethodSuiteIMethodInfoIEnumerableOfTestMethod">
            <summary>Sets the shim of DefaultTestCaseBuilder.BuildParameterizedMethodSuite(IMethodInfo method, IEnumerable`1&lt;TestMethod&gt; tests)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultTestCaseBuilder.AllInstances.BuildSingleTestMethodIMethodInfoTest">
            <summary>Sets the shim of DefaultTestCaseBuilder.BuildSingleTestMethod(IMethodInfo method, Test suite)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultTestCaseBuilder.AllInstances.CanBuildFromIMethodInfo">
            <summary>Sets the shim of DefaultTestCaseBuilder.CanBuildFrom(IMethodInfo method)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimDefaultTestCaseBuilder.AllInstances.CanBuildFromIMethodInfoTest">
            <summary>Sets the shim of DefaultTestCaseBuilder.CanBuildFrom(IMethodInfo method, Test parentSuite)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestCaseBuilder">
            <summary>Shim type of NUnit.Framework.Internal.Builders.NUnitTestCaseBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestCaseBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestCaseBuilder.#ctor(NUnit.Framework.Internal.Builders.NUnitTestCaseBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestCaseBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestCaseBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestCaseBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestCaseBuilder.BuildTestMethodIMethodInfoTestTestCaseParameters">
            <summary>Sets the shim of NUnitTestCaseBuilder.BuildTestMethod(IMethodInfo method, Test parentSuite, TestCaseParameters parms)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestCaseBuilder.CheckTestMethodSignatureTestMethodTestCaseParameters">
            <summary>Sets the shim of NUnitTestCaseBuilder.CheckTestMethodSignature(TestMethod testMethod, TestCaseParameters parms)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestCaseBuilder.Constructor">
            <summary>Sets the shim of NUnitTestCaseBuilder.NUnitTestCaseBuilder()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestCaseBuilder.MarkAsNotRunnableTestMethodString">
            <summary>Sets the shim of NUnitTestCaseBuilder.MarkAsNotRunnable(TestMethod testMethod, String reason)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestCaseBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestCaseBuilder.AllInstances.BuildTestMethodIMethodInfoTestTestCaseParameters">
            <summary>Sets the shim of NUnitTestCaseBuilder.BuildTestMethod(IMethodInfo method, Test parentSuite, TestCaseParameters parms)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestFixtureBuilder">
            <summary>Shim type of NUnit.Framework.Internal.Builders.NUnitTestFixtureBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestFixtureBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestFixtureBuilder.#ctor(NUnit.Framework.Internal.Builders.NUnitTestFixtureBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestFixtureBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestFixtureBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestFixtureBuilder.AddTestCasesToFixtureTestFixture">
            <summary>Sets the shim of NUnitTestFixtureBuilder.AddTestCasesToFixture(TestFixture fixture)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestFixtureBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestFixtureBuilder.BuildFromITypeInfo">
            <summary>Sets the shim of NUnitTestFixtureBuilder.BuildFrom(ITypeInfo typeInfo)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestFixtureBuilder.BuildFromITypeInfoITestFixtureData">
            <summary>Sets the shim of NUnitTestFixtureBuilder.BuildFrom(ITypeInfo typeInfo, ITestFixtureData testFixtureData)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestFixtureBuilder.BuildTestCaseIMethodInfoTestSuite">
            <summary>Sets the shim of NUnitTestFixtureBuilder.BuildTestCase(IMethodInfo method, TestSuite suite)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestFixtureBuilder.CheckTestFixtureIsValidTestFixture">
            <summary>Sets the shim of NUnitTestFixtureBuilder.CheckTestFixtureIsValid(TestFixture fixture)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestFixtureBuilder.Constructor">
            <summary>Sets the shim of NUnitTestFixtureBuilder.NUnitTestFixtureBuilder()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestFixtureBuilder.IsStaticClassType">
            <summary>Sets the shim of NUnitTestFixtureBuilder.IsStaticClass(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestFixtureBuilder.StaticConstructor">
            <summary>Sets the shim of NUnitTestFixtureBuilder.NUnitTestFixtureBuilder()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestFixtureBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestFixtureBuilder.AllInstances.AddTestCasesToFixtureTestFixture">
            <summary>Sets the shim of NUnitTestFixtureBuilder.AddTestCasesToFixture(TestFixture fixture)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestFixtureBuilder.AllInstances.BuildFromITypeInfo">
            <summary>Sets the shim of NUnitTestFixtureBuilder.BuildFrom(ITypeInfo typeInfo)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestFixtureBuilder.AllInstances.BuildFromITypeInfoITestFixtureData">
            <summary>Sets the shim of NUnitTestFixtureBuilder.BuildFrom(ITypeInfo typeInfo, ITestFixtureData testFixtureData)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNUnitTestFixtureBuilder.AllInstances.BuildTestCaseIMethodInfoTestSuite">
            <summary>Sets the shim of NUnitTestFixtureBuilder.BuildTestCase(IMethodInfo method, TestSuite suite)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.ShimNamespaceTreeBuilder">
            <summary>Shim type of NUnit.Framework.Internal.Builders.NamespaceTreeBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimNamespaceTreeBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimNamespaceTreeBuilder.#ctor(NUnit.Framework.Internal.Builders.NamespaceTreeBuilder)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimNamespaceTreeBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimNamespaceTreeBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNamespaceTreeBuilder.AddIListOfTest">
            <summary>Sets the shim of NamespaceTreeBuilder.Add(IList`1&lt;Test&gt; fixtures)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNamespaceTreeBuilder.AddSetUpFixtureTestSuiteTestSuiteString">
            <summary>Sets the shim of NamespaceTreeBuilder.AddSetUpFixture(TestSuite newSetupFixture, TestSuite containingSuite, String ns)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNamespaceTreeBuilder.AddTestSuite">
            <summary>Sets the shim of NamespaceTreeBuilder.Add(TestSuite fixture)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNamespaceTreeBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNamespaceTreeBuilder.BuildFromNameSpaceString">
            <summary>Sets the shim of NamespaceTreeBuilder.BuildFromNameSpace(String ns)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNamespaceTreeBuilder.ConstructorTestSuite">
            <summary>Sets the shim of NamespaceTreeBuilder.NamespaceTreeBuilder(TestSuite rootSuite)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNamespaceTreeBuilder.GetNamespaceForFixtureTestSuite">
            <summary>Sets the shim of NamespaceTreeBuilder.GetNamespaceForFixture(TestSuite fixture)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNamespaceTreeBuilder.RootSuiteGet">
            <summary>Sets the shim of NamespaceTreeBuilder.get_RootSuite()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.ShimNamespaceTreeBuilder.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNamespaceTreeBuilder.AllInstances.AddIListOfTest">
            <summary>Sets the shim of NamespaceTreeBuilder.Add(IList`1&lt;Test&gt; fixtures)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNamespaceTreeBuilder.AllInstances.AddSetUpFixtureTestSuiteTestSuiteString">
            <summary>Sets the shim of NamespaceTreeBuilder.AddSetUpFixture(TestSuite newSetupFixture, TestSuite containingSuite, String ns)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNamespaceTreeBuilder.AllInstances.AddTestSuite">
            <summary>Sets the shim of NamespaceTreeBuilder.Add(TestSuite fixture)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNamespaceTreeBuilder.AllInstances.BuildFromNameSpaceString">
            <summary>Sets the shim of NamespaceTreeBuilder.BuildFromNameSpace(String ns)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimNamespaceTreeBuilder.AllInstances.RootSuiteGet">
            <summary>Sets the shim of NamespaceTreeBuilder.get_RootSuite()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.ShimPairwiseStrategy">
            <summary>Shim type of NUnit.Framework.Internal.Builders.PairwiseStrategy</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimPairwiseStrategy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimPairwiseStrategy.#ctor(NUnit.Framework.Internal.Builders.PairwiseStrategy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimPairwiseStrategy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimPairwiseStrategy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimPairwiseStrategy.Bind(NUnit.Framework.Interfaces.ICombiningStrategy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimPairwiseStrategy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimPairwiseStrategy.Constructor">
            <summary>Sets the shim of PairwiseStrategy.PairwiseStrategy()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimPairwiseStrategy.CreateDimensionsListOfObjectArray">
            <summary>Sets the shim of PairwiseStrategy.CreateDimensions(List`1&lt;Object&gt;[] valueSet)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimPairwiseStrategy.CreateValueSetIEnumerableArray">
            <summary>Sets the shim of PairwiseStrategy.CreateValueSet(IEnumerable[] sources)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimPairwiseStrategy.GetTestCasesIEnumerableArray">
            <summary>Sets the shim of PairwiseStrategy.GetTestCases(IEnumerable[] sources)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.ShimPairwiseStrategy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimPairwiseStrategy.AllInstances.CreateDimensionsListOfObjectArray">
            <summary>Sets the shim of PairwiseStrategy.CreateDimensions(List`1&lt;Object&gt;[] valueSet)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimPairwiseStrategy.AllInstances.CreateValueSetIEnumerableArray">
            <summary>Sets the shim of PairwiseStrategy.CreateValueSet(IEnumerable[] sources)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimPairwiseStrategy.AllInstances.GetTestCasesIEnumerableArray">
            <summary>Sets the shim of PairwiseStrategy.GetTestCases(IEnumerable[] sources)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataProvider">
            <summary>Shim type of NUnit.Framework.Internal.Builders.ParameterDataProvider</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataProvider.#ctor(NUnit.Framework.Internal.Builders.ParameterDataProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataProvider.Bind(NUnit.Framework.Interfaces.IParameterDataProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataProvider.ConstructorIParameterDataProviderArray">
            <summary>Sets the shim of ParameterDataProvider.ParameterDataProvider(IParameterDataProvider[] providers)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataProvider.GetDataForIParameterInfo">
            <summary>Sets the shim of ParameterDataProvider.GetDataFor(IParameterInfo parameter)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataProvider.HasDataForIParameterInfo">
            <summary>Sets the shim of ParameterDataProvider.HasDataFor(IParameterInfo parameter)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataProvider.AllInstances.GetDataForIParameterInfo">
            <summary>Sets the shim of ParameterDataProvider.GetDataFor(IParameterInfo parameter)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataProvider.AllInstances.HasDataForIParameterInfo">
            <summary>Sets the shim of ParameterDataProvider.HasDataFor(IParameterInfo parameter)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataSourceProvider">
            <summary>Shim type of NUnit.Framework.Internal.Builders.ParameterDataSourceProvider</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataSourceProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataSourceProvider.#ctor(NUnit.Framework.Internal.Builders.ParameterDataSourceProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataSourceProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataSourceProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataSourceProvider.Bind(NUnit.Framework.Interfaces.IParameterDataProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataSourceProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataSourceProvider.Constructor">
            <summary>Sets the shim of ParameterDataSourceProvider.ParameterDataSourceProvider()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataSourceProvider.GetDataForIParameterInfo">
            <summary>Sets the shim of ParameterDataSourceProvider.GetDataFor(IParameterInfo parameter)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataSourceProvider.HasDataForIParameterInfo">
            <summary>Sets the shim of ParameterDataSourceProvider.HasDataFor(IParameterInfo parameter)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataSourceProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataSourceProvider.AllInstances.GetDataForIParameterInfo">
            <summary>Sets the shim of ParameterDataSourceProvider.GetDataFor(IParameterInfo parameter)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimParameterDataSourceProvider.AllInstances.HasDataForIParameterInfo">
            <summary>Sets the shim of ParameterDataSourceProvider.HasDataFor(IParameterInfo parameter)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.ShimSequentialStrategy">
            <summary>Shim type of NUnit.Framework.Internal.Builders.SequentialStrategy</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimSequentialStrategy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimSequentialStrategy.#ctor(NUnit.Framework.Internal.Builders.SequentialStrategy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimSequentialStrategy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimSequentialStrategy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.ShimSequentialStrategy.Bind(NUnit.Framework.Interfaces.ICombiningStrategy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimSequentialStrategy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimSequentialStrategy.Constructor">
            <summary>Sets the shim of SequentialStrategy.SequentialStrategy()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimSequentialStrategy.GetTestCasesIEnumerableArray">
            <summary>Sets the shim of SequentialStrategy.GetTestCases(IEnumerable[] sources)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.ShimSequentialStrategy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.ShimSequentialStrategy.AllInstances.GetTestCasesIEnumerableArray">
            <summary>Sets the shim of SequentialStrategy.GetTestCases(IEnumerable[] sources)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.StubCombinatorialStrategy">
            <summary>Stub type of NUnit.Framework.Internal.Builders.CombinatorialStrategy</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.StubCombinatorialStrategy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.StubCombinatorialStrategy.InitializeStub">
            <summary>Initializes a new instance of type StubCombinatorialStrategy</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubCombinatorialStrategy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubCombinatorialStrategy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubCombinatorialStrategy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.StubDatapointProvider">
            <summary>Stub type of NUnit.Framework.Internal.Builders.DatapointProvider</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.StubDatapointProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.StubDatapointProvider.InitializeStub">
            <summary>Initializes a new instance of type StubDatapointProvider</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubDatapointProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubDatapointProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubDatapointProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.StubDefaultSuiteBuilder">
            <summary>Stub type of NUnit.Framework.Internal.Builders.DefaultSuiteBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.StubDefaultSuiteBuilder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.StubDefaultSuiteBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultSuiteBuilder</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubDefaultSuiteBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubDefaultSuiteBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubDefaultSuiteBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.StubDefaultTestCaseBuilder">
            <summary>Stub type of NUnit.Framework.Internal.Builders.DefaultTestCaseBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.StubDefaultTestCaseBuilder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.StubDefaultTestCaseBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultTestCaseBuilder</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubDefaultTestCaseBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubDefaultTestCaseBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubDefaultTestCaseBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.StubNUnitTestCaseBuilder">
            <summary>Stub type of NUnit.Framework.Internal.Builders.NUnitTestCaseBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.StubNUnitTestCaseBuilder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.StubNUnitTestCaseBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubNUnitTestCaseBuilder</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubNUnitTestCaseBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubNUnitTestCaseBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubNUnitTestCaseBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.StubNUnitTestFixtureBuilder">
            <summary>Stub type of NUnit.Framework.Internal.Builders.NUnitTestFixtureBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.StubNUnitTestFixtureBuilder.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.StubNUnitTestFixtureBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubNUnitTestFixtureBuilder</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubNUnitTestFixtureBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubNUnitTestFixtureBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubNUnitTestFixtureBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.StubNamespaceTreeBuilder">
            <summary>Stub type of NUnit.Framework.Internal.Builders.NamespaceTreeBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.StubNamespaceTreeBuilder.#ctor(NUnit.Framework.Internal.TestSuite)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.StubNamespaceTreeBuilder.InitializeStub">
            <summary>Initializes a new instance of type StubNamespaceTreeBuilder</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubNamespaceTreeBuilder.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubNamespaceTreeBuilder.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubNamespaceTreeBuilder.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.StubPairwiseStrategy">
            <summary>Stub type of NUnit.Framework.Internal.Builders.PairwiseStrategy</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.StubPairwiseStrategy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.StubPairwiseStrategy.InitializeStub">
            <summary>Initializes a new instance of type StubPairwiseStrategy</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubPairwiseStrategy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubPairwiseStrategy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubPairwiseStrategy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.StubParameterDataProvider">
            <summary>Stub type of NUnit.Framework.Internal.Builders.ParameterDataProvider</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.StubParameterDataProvider.#ctor(NUnit.Framework.Interfaces.IParameterDataProvider[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.StubParameterDataProvider.InitializeStub">
            <summary>Initializes a new instance of type StubParameterDataProvider</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubParameterDataProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubParameterDataProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubParameterDataProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.StubParameterDataSourceProvider">
            <summary>Stub type of NUnit.Framework.Internal.Builders.ParameterDataSourceProvider</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.StubParameterDataSourceProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.StubParameterDataSourceProvider.InitializeStub">
            <summary>Initializes a new instance of type StubParameterDataSourceProvider</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubParameterDataSourceProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubParameterDataSourceProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubParameterDataSourceProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Builders.Fakes.StubSequentialStrategy">
            <summary>Stub type of NUnit.Framework.Internal.Builders.SequentialStrategy</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.StubSequentialStrategy.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Builders.Fakes.StubSequentialStrategy.InitializeStub">
            <summary>Initializes a new instance of type StubSequentialStrategy</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubSequentialStrategy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubSequentialStrategy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Builders.Fakes.StubSequentialStrategy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimAfterTestActionCommand">
            <summary>Shim type of NUnit.Framework.Internal.Commands.AfterTestActionCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimAfterTestActionCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimAfterTestActionCommand.#ctor(NUnit.Framework.Internal.Commands.AfterTestActionCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimAfterTestActionCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimAfterTestActionCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimAfterTestActionCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimAfterTestActionCommand.ConstructorTestCommandTestActionItem">
            <summary>Sets the shim of AfterTestActionCommand.AfterTestActionCommand(TestCommand innerCommand, TestActionItem action)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimAfterTestActionCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimAfterTestCommand">
            <summary>Shim type of NUnit.Framework.Internal.Commands.AfterTestCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimAfterTestCommand.#ctor(NUnit.Framework.Internal.Commands.AfterTestCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimAfterTestCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimAfterTestCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimAfterTestCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimAfterTestCommand.ConstructorTestCommand">
            <summary>Sets the shim of AfterTestCommand.AfterTestCommand(TestCommand innerCommand)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimAfterTestCommand.ExecuteTestExecutionContext">
            <summary>Sets the shim of AfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimAfterTestCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimAfterTestCommand.AllInstances.ExecuteTestExecutionContext">
            <summary>Sets the shim of AfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeAndAfterTestCommand">
            <summary>Shim type of NUnit.Framework.Internal.Commands.BeforeAndAfterTestCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeAndAfterTestCommand.#ctor(NUnit.Framework.Internal.Commands.BeforeAndAfterTestCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeAndAfterTestCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeAndAfterTestCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeAndAfterTestCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeAndAfterTestCommand.ConstructorTestCommand">
            <summary>Sets the shim of BeforeAndAfterTestCommand.BeforeAndAfterTestCommand(TestCommand innerCommand)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeAndAfterTestCommand.ExecuteTestExecutionContext">
            <summary>Sets the shim of BeforeAndAfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeAndAfterTestCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeAndAfterTestCommand.AllInstances.ExecuteTestExecutionContext">
            <summary>Sets the shim of BeforeAndAfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeTestActionCommand">
            <summary>Shim type of NUnit.Framework.Internal.Commands.BeforeTestActionCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeTestActionCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeTestActionCommand.#ctor(NUnit.Framework.Internal.Commands.BeforeTestActionCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeTestActionCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeTestActionCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeTestActionCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeTestActionCommand.ConstructorTestCommandTestActionItem">
            <summary>Sets the shim of BeforeTestActionCommand.BeforeTestActionCommand(TestCommand innerCommand, TestActionItem action)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeTestActionCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeTestCommand">
            <summary>Shim type of NUnit.Framework.Internal.Commands.BeforeTestCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeTestCommand.#ctor(NUnit.Framework.Internal.Commands.BeforeTestCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeTestCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeTestCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeTestCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeTestCommand.ConstructorTestCommand">
            <summary>Sets the shim of BeforeTestCommand.BeforeTestCommand(TestCommand innerCommand)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeTestCommand.ExecuteTestExecutionContext">
            <summary>Sets the shim of BeforeTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeTestCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimBeforeTestCommand.AllInstances.ExecuteTestExecutionContext">
            <summary>Sets the shim of BeforeTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimConstructFixtureCommand">
            <summary>Shim type of NUnit.Framework.Internal.Commands.ConstructFixtureCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimConstructFixtureCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimConstructFixtureCommand.#ctor(NUnit.Framework.Internal.Commands.ConstructFixtureCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimConstructFixtureCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimConstructFixtureCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimConstructFixtureCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimConstructFixtureCommand.ConstructorTestCommand">
            <summary>Sets the shim of ConstructFixtureCommand.ConstructFixtureCommand(TestCommand innerCommand)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimConstructFixtureCommand._ctorb__0_0TestExecutionContext">
            <summary>Sets the shim of ConstructFixtureCommand.&lt;.ctor&gt;b__0_0(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimConstructFixtureCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimConstructFixtureCommand.AllInstances._ctorb__0_0TestExecutionContext">
            <summary>Sets the shim of ConstructFixtureCommand.&lt;.ctor&gt;b__0_0(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimDelegatingTestCommand">
            <summary>Shim type of NUnit.Framework.Internal.Commands.DelegatingTestCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimDelegatingTestCommand.#ctor(NUnit.Framework.Internal.Commands.DelegatingTestCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimDelegatingTestCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimDelegatingTestCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimDelegatingTestCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimDelegatingTestCommand.ConstructorTestCommand">
            <summary>Sets the shim of DelegatingTestCommand.DelegatingTestCommand(TestCommand innerCommand)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimDelegatingTestCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimDisposeFixtureCommand">
            <summary>Shim type of NUnit.Framework.Internal.Commands.DisposeFixtureCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimDisposeFixtureCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimDisposeFixtureCommand.#ctor(NUnit.Framework.Internal.Commands.DisposeFixtureCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimDisposeFixtureCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimDisposeFixtureCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimDisposeFixtureCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimDisposeFixtureCommand.ConstructorTestCommand">
            <summary>Sets the shim of DisposeFixtureCommand.DisposeFixtureCommand(TestCommand innerCommand)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimDisposeFixtureCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimEmptyTestCommand">
            <summary>Shim type of NUnit.Framework.Internal.Commands.EmptyTestCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimEmptyTestCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimEmptyTestCommand.#ctor(NUnit.Framework.Internal.Commands.EmptyTestCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimEmptyTestCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimEmptyTestCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimEmptyTestCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimEmptyTestCommand.ConstructorTest">
            <summary>Sets the shim of EmptyTestCommand.EmptyTestCommand(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimEmptyTestCommand.ExecuteTestExecutionContext">
            <summary>Sets the shim of EmptyTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimEmptyTestCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimEmptyTestCommand.AllInstances.ExecuteTestExecutionContext">
            <summary>Sets the shim of EmptyTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimMaxTimeCommand">
            <summary>Shim type of NUnit.Framework.Internal.Commands.MaxTimeCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimMaxTimeCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimMaxTimeCommand.#ctor(NUnit.Framework.Internal.Commands.MaxTimeCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimMaxTimeCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimMaxTimeCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimMaxTimeCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimMaxTimeCommand.ConstructorTestCommandInt32">
            <summary>Sets the shim of MaxTimeCommand.MaxTimeCommand(TestCommand innerCommand, Int32 maxTime)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimMaxTimeCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimOneTimeSetUpCommand">
            <summary>Shim type of NUnit.Framework.Internal.Commands.OneTimeSetUpCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimOneTimeSetUpCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimOneTimeSetUpCommand.#ctor(NUnit.Framework.Internal.Commands.OneTimeSetUpCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimOneTimeSetUpCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimOneTimeSetUpCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimOneTimeSetUpCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimOneTimeSetUpCommand.ConstructorTestCommandSetUpTearDownItem">
            <summary>Sets the shim of OneTimeSetUpCommand.OneTimeSetUpCommand(TestCommand innerCommand, SetUpTearDownItem setUpTearDown)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimOneTimeSetUpCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimOneTimeTearDownCommand">
            <summary>Shim type of NUnit.Framework.Internal.Commands.OneTimeTearDownCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimOneTimeTearDownCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimOneTimeTearDownCommand.#ctor(NUnit.Framework.Internal.Commands.OneTimeTearDownCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimOneTimeTearDownCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimOneTimeTearDownCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimOneTimeTearDownCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimOneTimeTearDownCommand.ConstructorTestCommandSetUpTearDownItem">
            <summary>Sets the shim of OneTimeTearDownCommand.OneTimeTearDownCommand(TestCommand innerCommand, SetUpTearDownItem setUpTearDownItem)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimOneTimeTearDownCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownCommand">
            <summary>Shim type of NUnit.Framework.Internal.Commands.SetUpTearDownCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownCommand.#ctor(NUnit.Framework.Internal.Commands.SetUpTearDownCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownCommand.ConstructorTestCommandSetUpTearDownItem">
            <summary>Sets the shim of SetUpTearDownCommand.SetUpTearDownCommand(TestCommand innerCommand, SetUpTearDownItem setUpTearDown)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownItem">
            <summary>Shim type of NUnit.Framework.Internal.Commands.SetUpTearDownItem</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownItem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownItem.#ctor(NUnit.Framework.Internal.Commands.SetUpTearDownItem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownItem.ConstructorIListOfMethodInfoIListOfMethodInfo">
            <summary>Sets the shim of SetUpTearDownItem.SetUpTearDownItem(IList`1&lt;MethodInfo&gt; setUpMethods, IList`1&lt;MethodInfo&gt; tearDownMethods)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownItem.HasMethodsGet">
            <summary>Sets the shim of SetUpTearDownItem.get_HasMethods()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownItem.RunAsyncMethodMethodInfoTestExecutionContext">
            <summary>Sets the shim of SetUpTearDownItem.RunAsyncMethod(MethodInfo method, TestExecutionContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownItem.RunNonAsyncMethodMethodInfoTestExecutionContext">
            <summary>Sets the shim of SetUpTearDownItem.RunNonAsyncMethod(MethodInfo method, TestExecutionContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownItem.RunSetUpOrTearDownMethodTestExecutionContextMethodInfo">
            <summary>Sets the shim of SetUpTearDownItem.RunSetUpOrTearDownMethod(TestExecutionContext context, MethodInfo method)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownItem.RunSetUpTestExecutionContext">
            <summary>Sets the shim of SetUpTearDownItem.RunSetUp(TestExecutionContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownItem.RunTearDownTestExecutionContext">
            <summary>Sets the shim of SetUpTearDownItem.RunTearDown(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownItem.AllInstances.HasMethodsGet">
            <summary>Sets the shim of SetUpTearDownItem.get_HasMethods()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownItem.AllInstances.RunAsyncMethodMethodInfoTestExecutionContext">
            <summary>Sets the shim of SetUpTearDownItem.RunAsyncMethod(MethodInfo method, TestExecutionContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownItem.AllInstances.RunNonAsyncMethodMethodInfoTestExecutionContext">
            <summary>Sets the shim of SetUpTearDownItem.RunNonAsyncMethod(MethodInfo method, TestExecutionContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownItem.AllInstances.RunSetUpOrTearDownMethodTestExecutionContextMethodInfo">
            <summary>Sets the shim of SetUpTearDownItem.RunSetUpOrTearDownMethod(TestExecutionContext context, MethodInfo method)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownItem.AllInstances.RunSetUpTestExecutionContext">
            <summary>Sets the shim of SetUpTearDownItem.RunSetUp(TestExecutionContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSetUpTearDownItem.AllInstances.RunTearDownTestExecutionContext">
            <summary>Sets the shim of SetUpTearDownItem.RunTearDown(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimSkipCommand">
            <summary>Shim type of NUnit.Framework.Internal.Commands.SkipCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimSkipCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimSkipCommand.#ctor(NUnit.Framework.Internal.Commands.SkipCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimSkipCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimSkipCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSkipCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSkipCommand.ConstructorTest">
            <summary>Sets the shim of SkipCommand.SkipCommand(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSkipCommand.ExecuteTestExecutionContext">
            <summary>Sets the shim of SkipCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSkipCommand.GetProviderStackTrace">
            <summary>Sets the shim of SkipCommand.GetProviderStackTrace()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSkipCommand.GetSkipReason">
            <summary>Sets the shim of SkipCommand.GetSkipReason()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimSkipCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSkipCommand.AllInstances.ExecuteTestExecutionContext">
            <summary>Sets the shim of SkipCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSkipCommand.AllInstances.GetProviderStackTrace">
            <summary>Sets the shim of SkipCommand.GetProviderStackTrace()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimSkipCommand.AllInstances.GetSkipReason">
            <summary>Sets the shim of SkipCommand.GetSkipReason()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionCommand">
            <summary>Shim type of NUnit.Framework.Internal.Commands.TestActionCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionCommand.#ctor(NUnit.Framework.Internal.Commands.TestActionCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionCommand.ConstructorTestCommandITestAction">
            <summary>Sets the shim of TestActionCommand.TestActionCommand(TestCommand innerCommand, ITestAction action)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionItem">
            <summary>Shim type of NUnit.Framework.Internal.Commands.TestActionItem</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionItem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionItem.#ctor(NUnit.Framework.Internal.Commands.TestActionItem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionItem.AfterTestITest">
            <summary>Sets the shim of TestActionItem.AfterTest(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionItem.BeforeTestITest">
            <summary>Sets the shim of TestActionItem.BeforeTest(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionItem.BeforeTestWasRunGet">
            <summary>Sets the shim of TestActionItem.get_BeforeTestWasRun()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionItem.BeforeTestWasRunSetBoolean">
            <summary>Sets the shim of TestActionItem.set_BeforeTestWasRun(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionItem.ConstructorITestAction">
            <summary>Sets the shim of TestActionItem.TestActionItem(ITestAction action)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionItem.AllInstances.AfterTestITest">
            <summary>Sets the shim of TestActionItem.AfterTest(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionItem.AllInstances.BeforeTestITest">
            <summary>Sets the shim of TestActionItem.BeforeTest(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionItem.AllInstances.BeforeTestWasRunGet">
            <summary>Sets the shim of TestActionItem.get_BeforeTestWasRun()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestActionItem.AllInstances.BeforeTestWasRunSetBoolean">
            <summary>Sets the shim of TestActionItem.set_BeforeTestWasRun(Boolean value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimTestCommand">
            <summary>Shim type of NUnit.Framework.Internal.Commands.TestCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTestCommand.#ctor(NUnit.Framework.Internal.Commands.TestCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTestCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTestCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestCommand.ConstructorTest">
            <summary>Sets the shim of TestCommand.TestCommand(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestCommand.TestGet">
            <summary>Sets the shim of TestCommand.get_Test()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestCommand.TestSetTest">
            <summary>Sets the shim of TestCommand.set_Test(Test value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimTestCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestCommand.AllInstances.TestGet">
            <summary>Sets the shim of TestCommand.get_Test()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestCommand.AllInstances.TestSetTest">
            <summary>Sets the shim of TestCommand.set_Test(Test value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimTestMethodCommand">
            <summary>Shim type of NUnit.Framework.Internal.Commands.TestMethodCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTestMethodCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTestMethodCommand.#ctor(NUnit.Framework.Internal.Commands.TestMethodCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTestMethodCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTestMethodCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestMethodCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestMethodCommand.ConstructorTestMethod">
            <summary>Sets the shim of TestMethodCommand.TestMethodCommand(TestMethod testMethod)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestMethodCommand.ExecuteTestExecutionContext">
            <summary>Sets the shim of TestMethodCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestMethodCommand.RunAsyncTestMethodTestExecutionContext">
            <summary>Sets the shim of TestMethodCommand.RunAsyncTestMethod(TestExecutionContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestMethodCommand.RunNonAsyncTestMethodTestExecutionContext">
            <summary>Sets the shim of TestMethodCommand.RunNonAsyncTestMethod(TestExecutionContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestMethodCommand.RunTestMethodTestExecutionContext">
            <summary>Sets the shim of TestMethodCommand.RunTestMethod(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimTestMethodCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestMethodCommand.AllInstances.ExecuteTestExecutionContext">
            <summary>Sets the shim of TestMethodCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestMethodCommand.AllInstances.RunAsyncTestMethodTestExecutionContext">
            <summary>Sets the shim of TestMethodCommand.RunAsyncTestMethod(TestExecutionContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestMethodCommand.AllInstances.RunNonAsyncTestMethodTestExecutionContext">
            <summary>Sets the shim of TestMethodCommand.RunNonAsyncTestMethod(TestExecutionContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTestMethodCommand.AllInstances.RunTestMethodTestExecutionContext">
            <summary>Sets the shim of TestMethodCommand.RunTestMethod(TestExecutionContext context)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimTheoryResultCommand">
            <summary>Shim type of NUnit.Framework.Internal.Commands.TheoryResultCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTheoryResultCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTheoryResultCommand.#ctor(NUnit.Framework.Internal.Commands.TheoryResultCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTheoryResultCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTheoryResultCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTheoryResultCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTheoryResultCommand.ConstructorTestCommand">
            <summary>Sets the shim of TheoryResultCommand.TheoryResultCommand(TestCommand command)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimTheoryResultCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimTimeoutCommand">
            <summary>Shim type of NUnit.Framework.Internal.Commands.TimeoutCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTimeoutCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTimeoutCommand.#ctor(NUnit.Framework.Internal.Commands.TimeoutCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTimeoutCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.ShimTimeoutCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTimeoutCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.ShimTimeoutCommand.ConstructorTestCommandInt32">
            <summary>Sets the shim of TimeoutCommand.TimeoutCommand(TestCommand innerCommand, Int32 timeout)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.ShimTimeoutCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.StubAfterTestActionCommand">
            <summary>Stub type of NUnit.Framework.Internal.Commands.AfterTestActionCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubAfterTestActionCommand.#ctor(NUnit.Framework.Internal.Commands.TestCommand,NUnit.Framework.Internal.Commands.TestActionItem)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubAfterTestActionCommand.Execute(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Sets the stub of AfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Commands.Fakes.StubAfterTestActionCommand.ExecuteTestExecutionContext">
            <summary>Sets the stub of AfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubAfterTestActionCommand.InitializeStub">
            <summary>Initializes a new instance of type StubAfterTestActionCommand</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubAfterTestActionCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubAfterTestActionCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubAfterTestActionCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.StubAfterTestCommand">
            <summary>Stub type of NUnit.Framework.Internal.Commands.AfterTestCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubAfterTestCommand.#ctor(NUnit.Framework.Internal.Commands.TestCommand)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubAfterTestCommand.Execute(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Sets the stub of AfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Commands.Fakes.StubAfterTestCommand.ExecuteTestExecutionContext">
            <summary>Sets the stub of AfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubAfterTestCommand.InitializeStub">
            <summary>Initializes a new instance of type StubAfterTestCommand</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubAfterTestCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubAfterTestCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubAfterTestCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.StubBeforeAndAfterTestCommand">
            <summary>Stub type of NUnit.Framework.Internal.Commands.BeforeAndAfterTestCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubBeforeAndAfterTestCommand.#ctor(NUnit.Framework.Internal.Commands.TestCommand)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubBeforeAndAfterTestCommand.Execute(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Sets the stub of BeforeAndAfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Commands.Fakes.StubBeforeAndAfterTestCommand.ExecuteTestExecutionContext">
            <summary>Sets the stub of BeforeAndAfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubBeforeAndAfterTestCommand.InitializeStub">
            <summary>Initializes a new instance of type StubBeforeAndAfterTestCommand</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubBeforeAndAfterTestCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubBeforeAndAfterTestCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubBeforeAndAfterTestCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.StubBeforeTestActionCommand">
            <summary>Stub type of NUnit.Framework.Internal.Commands.BeforeTestActionCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubBeforeTestActionCommand.#ctor(NUnit.Framework.Internal.Commands.TestCommand,NUnit.Framework.Internal.Commands.TestActionItem)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubBeforeTestActionCommand.Execute(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Sets the stub of BeforeTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Commands.Fakes.StubBeforeTestActionCommand.ExecuteTestExecutionContext">
            <summary>Sets the stub of BeforeTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubBeforeTestActionCommand.InitializeStub">
            <summary>Initializes a new instance of type StubBeforeTestActionCommand</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubBeforeTestActionCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubBeforeTestActionCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubBeforeTestActionCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.StubBeforeTestCommand">
            <summary>Stub type of NUnit.Framework.Internal.Commands.BeforeTestCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubBeforeTestCommand.#ctor(NUnit.Framework.Internal.Commands.TestCommand)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubBeforeTestCommand.Execute(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Sets the stub of BeforeTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Commands.Fakes.StubBeforeTestCommand.ExecuteTestExecutionContext">
            <summary>Sets the stub of BeforeTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubBeforeTestCommand.InitializeStub">
            <summary>Initializes a new instance of type StubBeforeTestCommand</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubBeforeTestCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubBeforeTestCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubBeforeTestCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.StubConstructFixtureCommand">
            <summary>Stub type of NUnit.Framework.Internal.Commands.ConstructFixtureCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubConstructFixtureCommand.#ctor(NUnit.Framework.Internal.Commands.TestCommand)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubConstructFixtureCommand.Execute(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Sets the stub of BeforeTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Commands.Fakes.StubConstructFixtureCommand.ExecuteTestExecutionContext">
            <summary>Sets the stub of BeforeTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubConstructFixtureCommand.InitializeStub">
            <summary>Initializes a new instance of type StubConstructFixtureCommand</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubConstructFixtureCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubConstructFixtureCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubConstructFixtureCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.StubDelegatingTestCommand">
            <summary>Stub type of NUnit.Framework.Internal.Commands.DelegatingTestCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubDelegatingTestCommand.#ctor(NUnit.Framework.Internal.Commands.TestCommand)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubDelegatingTestCommand.Execute(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Sets the stub of TestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Commands.Fakes.StubDelegatingTestCommand.ExecuteTestExecutionContext">
            <summary>Sets the stub of TestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubDelegatingTestCommand.InitializeStub">
            <summary>Initializes a new instance of type StubDelegatingTestCommand</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubDelegatingTestCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubDelegatingTestCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubDelegatingTestCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.StubDisposeFixtureCommand">
            <summary>Stub type of NUnit.Framework.Internal.Commands.DisposeFixtureCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubDisposeFixtureCommand.#ctor(NUnit.Framework.Internal.Commands.TestCommand)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubDisposeFixtureCommand.Execute(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Sets the stub of AfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Commands.Fakes.StubDisposeFixtureCommand.ExecuteTestExecutionContext">
            <summary>Sets the stub of AfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubDisposeFixtureCommand.InitializeStub">
            <summary>Initializes a new instance of type StubDisposeFixtureCommand</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubDisposeFixtureCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubDisposeFixtureCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubDisposeFixtureCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.StubEmptyTestCommand">
            <summary>Stub type of NUnit.Framework.Internal.Commands.EmptyTestCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubEmptyTestCommand.#ctor(NUnit.Framework.Internal.Test)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubEmptyTestCommand.Execute(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Sets the stub of EmptyTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Commands.Fakes.StubEmptyTestCommand.ExecuteTestExecutionContext">
            <summary>Sets the stub of EmptyTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubEmptyTestCommand.InitializeStub">
            <summary>Initializes a new instance of type StubEmptyTestCommand</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubEmptyTestCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubEmptyTestCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubEmptyTestCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.StubMaxTimeCommand">
            <summary>Stub type of NUnit.Framework.Internal.Commands.MaxTimeCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubMaxTimeCommand.#ctor(NUnit.Framework.Internal.Commands.TestCommand,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubMaxTimeCommand.Execute(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Sets the stub of AfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Commands.Fakes.StubMaxTimeCommand.ExecuteTestExecutionContext">
            <summary>Sets the stub of AfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubMaxTimeCommand.InitializeStub">
            <summary>Initializes a new instance of type StubMaxTimeCommand</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubMaxTimeCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubMaxTimeCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubMaxTimeCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.StubOneTimeSetUpCommand">
            <summary>Stub type of NUnit.Framework.Internal.Commands.OneTimeSetUpCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubOneTimeSetUpCommand.#ctor(NUnit.Framework.Internal.Commands.TestCommand,NUnit.Framework.Internal.Commands.SetUpTearDownItem)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubOneTimeSetUpCommand.Execute(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Sets the stub of BeforeTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Commands.Fakes.StubOneTimeSetUpCommand.ExecuteTestExecutionContext">
            <summary>Sets the stub of BeforeTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubOneTimeSetUpCommand.InitializeStub">
            <summary>Initializes a new instance of type StubOneTimeSetUpCommand</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubOneTimeSetUpCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubOneTimeSetUpCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubOneTimeSetUpCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.StubOneTimeTearDownCommand">
            <summary>Stub type of NUnit.Framework.Internal.Commands.OneTimeTearDownCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubOneTimeTearDownCommand.#ctor(NUnit.Framework.Internal.Commands.TestCommand,NUnit.Framework.Internal.Commands.SetUpTearDownItem)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubOneTimeTearDownCommand.Execute(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Sets the stub of AfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Commands.Fakes.StubOneTimeTearDownCommand.ExecuteTestExecutionContext">
            <summary>Sets the stub of AfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubOneTimeTearDownCommand.InitializeStub">
            <summary>Initializes a new instance of type StubOneTimeTearDownCommand</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubOneTimeTearDownCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubOneTimeTearDownCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubOneTimeTearDownCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.StubSetUpTearDownCommand">
            <summary>Stub type of NUnit.Framework.Internal.Commands.SetUpTearDownCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubSetUpTearDownCommand.#ctor(NUnit.Framework.Internal.Commands.TestCommand,NUnit.Framework.Internal.Commands.SetUpTearDownItem)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubSetUpTearDownCommand.Execute(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Sets the stub of BeforeAndAfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Commands.Fakes.StubSetUpTearDownCommand.ExecuteTestExecutionContext">
            <summary>Sets the stub of BeforeAndAfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubSetUpTearDownCommand.InitializeStub">
            <summary>Initializes a new instance of type StubSetUpTearDownCommand</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubSetUpTearDownCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubSetUpTearDownCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubSetUpTearDownCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.StubSetUpTearDownItem">
            <summary>Stub type of NUnit.Framework.Internal.Commands.SetUpTearDownItem</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubSetUpTearDownItem.#ctor(System.Collections.Generic.IList{System.Reflection.MethodInfo},System.Collections.Generic.IList{System.Reflection.MethodInfo})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubSetUpTearDownItem.InitializeStub">
            <summary>Initializes a new instance of type StubSetUpTearDownItem</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubSetUpTearDownItem.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubSetUpTearDownItem.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubSetUpTearDownItem.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.StubSkipCommand">
            <summary>Stub type of NUnit.Framework.Internal.Commands.SkipCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubSkipCommand.#ctor(NUnit.Framework.Internal.Test)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubSkipCommand.Execute(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Sets the stub of SkipCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Commands.Fakes.StubSkipCommand.ExecuteTestExecutionContext">
            <summary>Sets the stub of SkipCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubSkipCommand.InitializeStub">
            <summary>Initializes a new instance of type StubSkipCommand</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubSkipCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubSkipCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubSkipCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.StubTestActionCommand">
            <summary>Stub type of NUnit.Framework.Internal.Commands.TestActionCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubTestActionCommand.#ctor(NUnit.Framework.Internal.Commands.TestCommand,NUnit.Framework.ITestAction)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubTestActionCommand.Execute(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Sets the stub of BeforeAndAfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Commands.Fakes.StubTestActionCommand.ExecuteTestExecutionContext">
            <summary>Sets the stub of BeforeAndAfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubTestActionCommand.InitializeStub">
            <summary>Initializes a new instance of type StubTestActionCommand</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubTestActionCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubTestActionCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubTestActionCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.StubTestActionItem">
            <summary>Stub type of NUnit.Framework.Internal.Commands.TestActionItem</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubTestActionItem.#ctor(NUnit.Framework.ITestAction)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubTestActionItem.InitializeStub">
            <summary>Initializes a new instance of type StubTestActionItem</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubTestActionItem.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubTestActionItem.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubTestActionItem.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.StubTestCommand">
            <summary>Stub type of NUnit.Framework.Internal.Commands.TestCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubTestCommand.#ctor(NUnit.Framework.Internal.Test)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubTestCommand.Execute(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Sets the stub of TestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Commands.Fakes.StubTestCommand.ExecuteTestExecutionContext">
            <summary>Sets the stub of TestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubTestCommand.InitializeStub">
            <summary>Initializes a new instance of type StubTestCommand</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubTestCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubTestCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubTestCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.StubTestMethodCommand">
            <summary>Stub type of NUnit.Framework.Internal.Commands.TestMethodCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubTestMethodCommand.#ctor(NUnit.Framework.Internal.TestMethod)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubTestMethodCommand.Execute(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Sets the stub of TestMethodCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Commands.Fakes.StubTestMethodCommand.ExecuteTestExecutionContext">
            <summary>Sets the stub of TestMethodCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubTestMethodCommand.InitializeStub">
            <summary>Initializes a new instance of type StubTestMethodCommand</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubTestMethodCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubTestMethodCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubTestMethodCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.StubTheoryResultCommand">
            <summary>Stub type of NUnit.Framework.Internal.Commands.TheoryResultCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubTheoryResultCommand.#ctor(NUnit.Framework.Internal.Commands.TestCommand)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubTheoryResultCommand.Execute(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Sets the stub of AfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Commands.Fakes.StubTheoryResultCommand.ExecuteTestExecutionContext">
            <summary>Sets the stub of AfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubTheoryResultCommand.InitializeStub">
            <summary>Initializes a new instance of type StubTheoryResultCommand</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubTheoryResultCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubTheoryResultCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubTheoryResultCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Commands.Fakes.StubTimeoutCommand">
            <summary>Stub type of NUnit.Framework.Internal.Commands.TimeoutCommand</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubTimeoutCommand.#ctor(NUnit.Framework.Internal.Commands.TestCommand,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubTimeoutCommand.Execute(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Sets the stub of BeforeAndAfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Commands.Fakes.StubTimeoutCommand.ExecuteTestExecutionContext">
            <summary>Sets the stub of BeforeAndAfterTestCommand.Execute(TestExecutionContext context)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Commands.Fakes.StubTimeoutCommand.InitializeStub">
            <summary>Initializes a new instance of type StubTimeoutCommand</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubTimeoutCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubTimeoutCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Commands.Fakes.StubTimeoutCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem">
            <summary>Shim type of NUnit.Framework.Internal.Execution.CompositeWorkItem</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.#ctor(NUnit.Framework.Internal.Execution.CompositeWorkItem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.CancelBoolean">
            <summary>Sets the shim of CompositeWorkItem.Cancel(Boolean force)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.CheckForCancellation">
            <summary>Sets the shim of CompositeWorkItem.CheckForCancellation()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.ChildrenGet">
            <summary>Sets the shim of CompositeWorkItem.get_Children()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.ConstructorTestSuiteITestFilter">
            <summary>Sets the shim of CompositeWorkItem.CompositeWorkItem(TestSuite suite, ITestFilter childFilter)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.GetProviderStackTrace">
            <summary>Sets the shim of CompositeWorkItem.GetProviderStackTrace()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.GetSkipReason">
            <summary>Sets the shim of CompositeWorkItem.GetSkipReason()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.InitializeSetUpAndTearDownCommands">
            <summary>Sets the shim of CompositeWorkItem.InitializeSetUpAndTearDownCommands()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.IsStaticClassType">
            <summary>Sets the shim of CompositeWorkItem.IsStaticClass(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.MakeOneTimeSetUpCommandListOfSetUpTearDownItemListOfTestActionItem">
            <summary>Sets the shim of CompositeWorkItem.MakeOneTimeSetUpCommand(List`1&lt;SetUpTearDownItem&gt; setUpTearDown, List`1&lt;TestActionItem&gt; actions)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.MakeOneTimeTearDownCommandListOfSetUpTearDownItemListOfTestActionItem">
            <summary>Sets the shim of CompositeWorkItem.MakeOneTimeTearDownCommand(List`1&lt;SetUpTearDownItem&gt; setUpTearDownItems, List`1&lt;TestActionItem&gt; actions)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.OnAllChildItemsCompleted">
            <summary>Sets the shim of CompositeWorkItem.OnAllChildItemsCompleted()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.OnChildItemCompletedObjectEventArgs">
            <summary>Sets the shim of CompositeWorkItem.OnChildItemCompleted(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.PerformOneTimeSetUp">
            <summary>Sets the shim of CompositeWorkItem.PerformOneTimeSetUp()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.PerformOneTimeTearDown">
            <summary>Sets the shim of CompositeWorkItem.PerformOneTimeTearDown()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.PerformWork">
            <summary>Sets the shim of CompositeWorkItem.PerformWork()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.RunChildren">
            <summary>Sets the shim of CompositeWorkItem.RunChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.SkipChildrenCompositeWorkItemResultStateString">
            <summary>Sets the shim of CompositeWorkItem.SkipChildren(CompositeWorkItem workItem, ResultState resultState, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.SkipFixtureResultStateStringString">
            <summary>Sets the shim of CompositeWorkItem.SkipFixture(ResultState resultState, String message, String stackTrace)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.AllInstances.CancelBoolean">
            <summary>Sets the shim of CompositeWorkItem.Cancel(Boolean force)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.AllInstances.CheckForCancellation">
            <summary>Sets the shim of CompositeWorkItem.CheckForCancellation()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.AllInstances.ChildrenGet">
            <summary>Sets the shim of CompositeWorkItem.get_Children()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.AllInstances.GetProviderStackTrace">
            <summary>Sets the shim of CompositeWorkItem.GetProviderStackTrace()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.AllInstances.GetSkipReason">
            <summary>Sets the shim of CompositeWorkItem.GetSkipReason()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.AllInstances.InitializeSetUpAndTearDownCommands">
            <summary>Sets the shim of CompositeWorkItem.InitializeSetUpAndTearDownCommands()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.AllInstances.MakeOneTimeSetUpCommandListOfSetUpTearDownItemListOfTestActionItem">
            <summary>Sets the shim of CompositeWorkItem.MakeOneTimeSetUpCommand(List`1&lt;SetUpTearDownItem&gt; setUpTearDown, List`1&lt;TestActionItem&gt; actions)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.AllInstances.MakeOneTimeTearDownCommandListOfSetUpTearDownItemListOfTestActionItem">
            <summary>Sets the shim of CompositeWorkItem.MakeOneTimeTearDownCommand(List`1&lt;SetUpTearDownItem&gt; setUpTearDownItems, List`1&lt;TestActionItem&gt; actions)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.AllInstances.OnAllChildItemsCompleted">
            <summary>Sets the shim of CompositeWorkItem.OnAllChildItemsCompleted()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.AllInstances.OnChildItemCompletedObjectEventArgs">
            <summary>Sets the shim of CompositeWorkItem.OnChildItemCompleted(Object sender, EventArgs e)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.AllInstances.PerformOneTimeSetUp">
            <summary>Sets the shim of CompositeWorkItem.PerformOneTimeSetUp()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.AllInstances.PerformOneTimeTearDown">
            <summary>Sets the shim of CompositeWorkItem.PerformOneTimeTearDown()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.AllInstances.PerformWork">
            <summary>Sets the shim of CompositeWorkItem.PerformWork()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.AllInstances.RunChildren">
            <summary>Sets the shim of CompositeWorkItem.RunChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.AllInstances.SkipChildrenCompositeWorkItemResultStateString">
            <summary>Sets the shim of CompositeWorkItem.SkipChildren(CompositeWorkItem workItem, ResultState resultState, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.AllInstances.SkipFixtureResultStateStringString">
            <summary>Sets the shim of CompositeWorkItem.SkipFixture(ResultState resultState, String message, String stackTrace)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.ShimOneTimeTearDownWorkItem">
            <summary>Shim type of NUnit.Framework.Internal.Execution.CompositeWorkItem+OneTimeTearDownWorkItem</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.ShimOneTimeTearDownWorkItem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.ShimOneTimeTearDownWorkItem.#ctor(NUnit.Framework.Internal.Execution.CompositeWorkItem.OneTimeTearDownWorkItem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.ShimOneTimeTearDownWorkItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.ShimOneTimeTearDownWorkItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.ShimOneTimeTearDownWorkItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.ShimOneTimeTearDownWorkItem.ConstructorCompositeWorkItem">
            <summary>Sets the shim of OneTimeTearDownWorkItem.OneTimeTearDownWorkItem(CompositeWorkItem originalItem)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.ShimOneTimeTearDownWorkItem.Execute">
            <summary>Sets the shim of OneTimeTearDownWorkItem.Execute()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.ShimOneTimeTearDownWorkItem.NameGet">
            <summary>Sets the shim of OneTimeTearDownWorkItem.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.ShimOneTimeTearDownWorkItem.PerformWork">
            <summary>Sets the shim of OneTimeTearDownWorkItem.PerformWork()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.ShimOneTimeTearDownWorkItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.ShimOneTimeTearDownWorkItem.AllInstances.Execute">
            <summary>Sets the shim of OneTimeTearDownWorkItem.Execute()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.ShimOneTimeTearDownWorkItem.AllInstances.NameGet">
            <summary>Sets the shim of OneTimeTearDownWorkItem.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimCompositeWorkItem.ShimOneTimeTearDownWorkItem.AllInstances.PerformWork">
            <summary>Sets the shim of OneTimeTearDownWorkItem.PerformWork()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimEvent">
            <summary>Shim type of NUnit.Framework.Internal.Execution.Event</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimEvent.#ctor(NUnit.Framework.Internal.Execution.Event)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEvent.Constructor">
            <summary>Sets the shim of Event.Event()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter">
            <summary>Shim type of NUnit.Framework.Internal.Execution.EventListenerTextWriter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.#ctor(NUnit.Framework.Internal.Execution.EventListenerTextWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.ConstructorStringTextWriter">
            <summary>Sets the shim of EventListenerTextWriter.EventListenerTextWriter(String streamName, TextWriter defaultWriter)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.EncodingGet">
            <summary>Sets the shim of EventListenerTextWriter.get_Encoding()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.TrySendLineToListenerString">
            <summary>Sets the shim of EventListenerTextWriter.TrySendLineToListener(String text)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.TrySendToListenerString">
            <summary>Sets the shim of EventListenerTextWriter.TrySendToListener(String text)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteBoolean">
            <summary>Sets the shim of EventListenerTextWriter.Write(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteChar">
            <summary>Sets the shim of EventListenerTextWriter.Write(Char value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteCharArray">
            <summary>Sets the shim of EventListenerTextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteCharArrayInt32Int32">
            <summary>Sets the shim of EventListenerTextWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteDecimal">
            <summary>Sets the shim of EventListenerTextWriter.Write(Decimal value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteDouble">
            <summary>Sets the shim of EventListenerTextWriter.Write(Double value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteInt32">
            <summary>Sets the shim of EventListenerTextWriter.Write(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteInt64">
            <summary>Sets the shim of EventListenerTextWriter.Write(Int64 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteLine">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteLineBoolean">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteLineChar">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteLineCharArray">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteLineCharArrayInt32Int32">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteLineDecimal">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(Decimal value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteLineDouble">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteLineInt32">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteLineInt64">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteLineObject">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteLineSingle">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteLineString">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteLineStringObject">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteLineStringObjectArray">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteLineStringObjectObject">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteLineStringObjectObjectObject">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteLineUInt32">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteLineUInt64">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(UInt64 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteObject">
            <summary>Sets the shim of EventListenerTextWriter.Write(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteSingle">
            <summary>Sets the shim of EventListenerTextWriter.Write(Single value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteString">
            <summary>Sets the shim of EventListenerTextWriter.Write(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteStringObject">
            <summary>Sets the shim of EventListenerTextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteStringObjectArray">
            <summary>Sets the shim of EventListenerTextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteStringObjectObject">
            <summary>Sets the shim of EventListenerTextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteStringObjectObjectObject">
            <summary>Sets the shim of EventListenerTextWriter.Write(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteUInt32">
            <summary>Sets the shim of EventListenerTextWriter.Write(UInt32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.WriteUInt64">
            <summary>Sets the shim of EventListenerTextWriter.Write(UInt64 value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.EncodingGet">
            <summary>Sets the shim of EventListenerTextWriter.get_Encoding()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.TrySendLineToListenerString">
            <summary>Sets the shim of EventListenerTextWriter.TrySendLineToListener(String text)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.TrySendToListenerString">
            <summary>Sets the shim of EventListenerTextWriter.TrySendToListener(String text)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteBoolean">
            <summary>Sets the shim of EventListenerTextWriter.Write(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteChar">
            <summary>Sets the shim of EventListenerTextWriter.Write(Char value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteCharArray">
            <summary>Sets the shim of EventListenerTextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteCharArrayInt32Int32">
            <summary>Sets the shim of EventListenerTextWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteDecimal">
            <summary>Sets the shim of EventListenerTextWriter.Write(Decimal value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteDouble">
            <summary>Sets the shim of EventListenerTextWriter.Write(Double value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteInt32">
            <summary>Sets the shim of EventListenerTextWriter.Write(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteInt64">
            <summary>Sets the shim of EventListenerTextWriter.Write(Int64 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteLine">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteLineBoolean">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteLineChar">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteLineCharArray">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteLineCharArrayInt32Int32">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteLineDecimal">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(Decimal value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteLineDouble">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteLineInt32">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteLineInt64">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteLineObject">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteLineSingle">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteLineString">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteLineStringObject">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteLineStringObjectArray">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteLineStringObjectObject">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteLineStringObjectObjectObject">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteLineUInt32">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteLineUInt64">
            <summary>Sets the shim of EventListenerTextWriter.WriteLine(UInt64 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteObject">
            <summary>Sets the shim of EventListenerTextWriter.Write(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteSingle">
            <summary>Sets the shim of EventListenerTextWriter.Write(Single value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteString">
            <summary>Sets the shim of EventListenerTextWriter.Write(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteStringObject">
            <summary>Sets the shim of EventListenerTextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteStringObjectArray">
            <summary>Sets the shim of EventListenerTextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteStringObjectObject">
            <summary>Sets the shim of EventListenerTextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteStringObjectObjectObject">
            <summary>Sets the shim of EventListenerTextWriter.Write(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteUInt32">
            <summary>Sets the shim of EventListenerTextWriter.Write(UInt32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventListenerTextWriter.AllInstances.WriteUInt64">
            <summary>Sets the shim of EventListenerTextWriter.Write(UInt64 value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump">
            <summary>Shim type of NUnit.Framework.Internal.Execution.EventPump</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.#ctor(NUnit.Framework.Internal.Execution.EventPump)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.ConstructorITestListenerEventQueue">
            <summary>Sets the shim of EventPump.EventPump(ITestListener eventListener, EventQueue events)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.Dispose">
            <summary>Sets the shim of EventPump.Dispose()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.NameGet">
            <summary>Sets the shim of EventPump.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.NameSetString">
            <summary>Sets the shim of EventPump.set_Name(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.PumpStateGet">
            <summary>Sets the shim of EventPump.get_PumpState()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.PumpThreadProc">
            <summary>Sets the shim of EventPump.PumpThreadProc()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.Start">
            <summary>Sets the shim of EventPump.Start()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.StaticConstructor">
            <summary>Sets the shim of EventPump.EventPump()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.Stop">
            <summary>Sets the shim of EventPump.Stop()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.AllInstances.Dispose">
            <summary>Sets the shim of EventPump.Dispose()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.AllInstances.NameGet">
            <summary>Sets the shim of EventPump.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.AllInstances.NameSetString">
            <summary>Sets the shim of EventPump.set_Name(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.AllInstances.PumpStateGet">
            <summary>Sets the shim of EventPump.get_PumpState()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.AllInstances.PumpThreadProc">
            <summary>Sets the shim of EventPump.PumpThreadProc()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.AllInstances.Start">
            <summary>Sets the shim of EventPump.Start()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventPump.AllInstances.Stop">
            <summary>Sets the shim of EventPump.Stop()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimEventQueue">
            <summary>Shim type of NUnit.Framework.Internal.Execution.EventQueue</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimEventQueue.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimEventQueue.#ctor(NUnit.Framework.Internal.Execution.EventQueue)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimEventQueue.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimEventQueue.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventQueue.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventQueue.Constructor">
            <summary>Sets the shim of EventQueue.EventQueue()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventQueue.CountGet">
            <summary>Sets the shim of EventQueue.get_Count()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventQueue.DequeueBoolean">
            <summary>Sets the shim of EventQueue.Dequeue(Boolean blockWhenEmpty)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventQueue.EnqueueEvent">
            <summary>Sets the shim of EventQueue.Enqueue(Event e)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventQueue.Stop">
            <summary>Sets the shim of EventQueue.Stop()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimEventQueue.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventQueue.AllInstances.CountGet">
            <summary>Sets the shim of EventQueue.get_Count()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventQueue.AllInstances.DequeueBoolean">
            <summary>Sets the shim of EventQueue.Dequeue(Boolean blockWhenEmpty)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventQueue.AllInstances.EnqueueEvent">
            <summary>Sets the shim of EventQueue.Enqueue(Event e)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimEventQueue.AllInstances.Stop">
            <summary>Sets the shim of EventQueue.Stop()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher">
            <summary>Shim type of NUnit.Framework.Internal.Execution.ParallelWorkItemDispatcher</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.#ctor(NUnit.Framework.Internal.Execution.ParallelWorkItemDispatcher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.Bind(NUnit.Framework.Internal.Execution.IWorkItemDispatcher)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.CancelRunBoolean">
            <summary>Sets the shim of ParallelWorkItemDispatcher.CancelRun(Boolean force)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.ConstructorInt32">
            <summary>Sets the shim of ParallelWorkItemDispatcher.ParallelWorkItemDispatcher(Int32 levelOfParallelism)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.DispatchWorkItem">
            <summary>Sets the shim of ParallelWorkItemDispatcher.Dispatch(WorkItem work)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.NonParallelQueueGet">
            <summary>Sets the shim of ParallelWorkItemDispatcher.get_NonParallelQueue()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.NonParallelSTAQueueGet">
            <summary>Sets the shim of ParallelWorkItemDispatcher.get_NonParallelSTAQueue()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.NonParallelSTAShiftGet">
            <summary>Sets the shim of ParallelWorkItemDispatcher.get_NonParallelSTAShift()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.NonParallelShiftGet">
            <summary>Sets the shim of ParallelWorkItemDispatcher.get_NonParallelShift()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.OnEndOfShiftObjectEventArgs">
            <summary>Sets the shim of ParallelWorkItemDispatcher.OnEndOfShift(Object sender, EventArgs ea)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.OnStartNonParallelWorkItemTestWorkerWorkItem">
            <summary>Sets the shim of ParallelWorkItemDispatcher.OnStartNonParallelWorkItem(TestWorker worker, WorkItem work)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.ParallelQueueGet">
            <summary>Sets the shim of ParallelWorkItemDispatcher.get_ParallelQueue()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.ParallelSTAQueueGet">
            <summary>Sets the shim of ParallelWorkItemDispatcher.get_ParallelSTAQueue()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.ParallelShiftGet">
            <summary>Sets the shim of ParallelWorkItemDispatcher.get_ParallelShift()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.QueuesGet">
            <summary>Sets the shim of ParallelWorkItemDispatcher.get_Queues()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.RestoreQueueState">
            <summary>Sets the shim of ParallelWorkItemDispatcher.RestoreQueueState()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.SaveQueueStateWorkItem">
            <summary>Sets the shim of ParallelWorkItemDispatcher.SaveQueueState(WorkItem work)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.ShiftsGet">
            <summary>Sets the shim of ParallelWorkItemDispatcher.get_Shifts()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.StartNextShift">
            <summary>Sets the shim of ParallelWorkItemDispatcher.StartNextShift()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.StartWorkItem">
            <summary>Sets the shim of ParallelWorkItemDispatcher.Start(WorkItem topLevelWorkItem)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.StaticConstructor">
            <summary>Sets the shim of ParallelWorkItemDispatcher.ParallelWorkItemDispatcher()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.AllInstances.CancelRunBoolean">
            <summary>Sets the shim of ParallelWorkItemDispatcher.CancelRun(Boolean force)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.AllInstances.DispatchWorkItem">
            <summary>Sets the shim of ParallelWorkItemDispatcher.Dispatch(WorkItem work)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.AllInstances.NonParallelQueueGet">
            <summary>Sets the shim of ParallelWorkItemDispatcher.get_NonParallelQueue()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.AllInstances.NonParallelSTAQueueGet">
            <summary>Sets the shim of ParallelWorkItemDispatcher.get_NonParallelSTAQueue()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.AllInstances.NonParallelSTAShiftGet">
            <summary>Sets the shim of ParallelWorkItemDispatcher.get_NonParallelSTAShift()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.AllInstances.NonParallelShiftGet">
            <summary>Sets the shim of ParallelWorkItemDispatcher.get_NonParallelShift()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.AllInstances.OnEndOfShiftObjectEventArgs">
            <summary>Sets the shim of ParallelWorkItemDispatcher.OnEndOfShift(Object sender, EventArgs ea)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.AllInstances.OnStartNonParallelWorkItemTestWorkerWorkItem">
            <summary>Sets the shim of ParallelWorkItemDispatcher.OnStartNonParallelWorkItem(TestWorker worker, WorkItem work)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.AllInstances.ParallelQueueGet">
            <summary>Sets the shim of ParallelWorkItemDispatcher.get_ParallelQueue()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.AllInstances.ParallelSTAQueueGet">
            <summary>Sets the shim of ParallelWorkItemDispatcher.get_ParallelSTAQueue()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.AllInstances.ParallelShiftGet">
            <summary>Sets the shim of ParallelWorkItemDispatcher.get_ParallelShift()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.AllInstances.QueuesGet">
            <summary>Sets the shim of ParallelWorkItemDispatcher.get_Queues()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.AllInstances.RestoreQueueState">
            <summary>Sets the shim of ParallelWorkItemDispatcher.RestoreQueueState()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.AllInstances.SaveQueueStateWorkItem">
            <summary>Sets the shim of ParallelWorkItemDispatcher.SaveQueueState(WorkItem work)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.AllInstances.ShiftsGet">
            <summary>Sets the shim of ParallelWorkItemDispatcher.get_Shifts()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.AllInstances.StartNextShift">
            <summary>Sets the shim of ParallelWorkItemDispatcher.StartNextShift()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimParallelWorkItemDispatcher.AllInstances.StartWorkItem">
            <summary>Sets the shim of ParallelWorkItemDispatcher.Start(WorkItem topLevelWorkItem)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimQueuingEventListener">
            <summary>Shim type of NUnit.Framework.Internal.Execution.QueuingEventListener</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimQueuingEventListener.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimQueuingEventListener.#ctor(NUnit.Framework.Internal.Execution.QueuingEventListener)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimQueuingEventListener.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimQueuingEventListener.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimQueuingEventListener.Bind(NUnit.Framework.Interfaces.ITestListener)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimQueuingEventListener.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimQueuingEventListener.Constructor">
            <summary>Sets the shim of QueuingEventListener.QueuingEventListener()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimQueuingEventListener.EventsGet">
            <summary>Sets the shim of QueuingEventListener.get_Events()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimQueuingEventListener.EventsSetEventQueue">
            <summary>Sets the shim of QueuingEventListener.set_Events(EventQueue value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimQueuingEventListener.TestFinishedITestResult">
            <summary>Sets the shim of QueuingEventListener.TestFinished(ITestResult result)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimQueuingEventListener.TestOutputTestOutput">
            <summary>Sets the shim of QueuingEventListener.TestOutput(TestOutput output)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimQueuingEventListener.TestStartedITest">
            <summary>Sets the shim of QueuingEventListener.TestStarted(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimQueuingEventListener.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimQueuingEventListener.AllInstances.EventsGet">
            <summary>Sets the shim of QueuingEventListener.get_Events()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimQueuingEventListener.AllInstances.EventsSetEventQueue">
            <summary>Sets the shim of QueuingEventListener.set_Events(EventQueue value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimQueuingEventListener.AllInstances.TestFinishedITestResult">
            <summary>Sets the shim of QueuingEventListener.TestFinished(ITestResult result)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimQueuingEventListener.AllInstances.TestOutputTestOutput">
            <summary>Sets the shim of QueuingEventListener.TestOutput(TestOutput output)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimQueuingEventListener.AllInstances.TestStartedITest">
            <summary>Sets the shim of QueuingEventListener.TestStarted(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItem">
            <summary>Shim type of NUnit.Framework.Internal.Execution.SimpleWorkItem</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItem.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItem.#ctor(NUnit.Framework.Internal.Execution.SimpleWorkItem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItem.ConstructorTestMethodITestFilter">
            <summary>Sets the shim of SimpleWorkItem.SimpleWorkItem(TestMethod test, ITestFilter filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItem.MakeTestCommand">
            <summary>Sets the shim of SimpleWorkItem.MakeTestCommand()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItem.PerformWork">
            <summary>Sets the shim of SimpleWorkItem.PerformWork()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItem.AllInstances.MakeTestCommand">
            <summary>Sets the shim of SimpleWorkItem.MakeTestCommand()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItem.AllInstances.PerformWork">
            <summary>Sets the shim of SimpleWorkItem.PerformWork()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItemDispatcher">
            <summary>Shim type of NUnit.Framework.Internal.Execution.SimpleWorkItemDispatcher</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItemDispatcher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItemDispatcher.#ctor(NUnit.Framework.Internal.Execution.SimpleWorkItemDispatcher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItemDispatcher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItemDispatcher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItemDispatcher.Bind(NUnit.Framework.Internal.Execution.IWorkItemDispatcher)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItemDispatcher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItemDispatcher.CancelRunBoolean">
            <summary>Sets the shim of SimpleWorkItemDispatcher.CancelRun(Boolean force)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItemDispatcher.Constructor">
            <summary>Sets the shim of SimpleWorkItemDispatcher.SimpleWorkItemDispatcher()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItemDispatcher.DispatchWorkItem">
            <summary>Sets the shim of SimpleWorkItemDispatcher.Dispatch(WorkItem work)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItemDispatcher.RunnerThreadProc">
            <summary>Sets the shim of SimpleWorkItemDispatcher.RunnerThreadProc()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItemDispatcher.StartWorkItem">
            <summary>Sets the shim of SimpleWorkItemDispatcher.Start(WorkItem topLevelWorkItem)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItemDispatcher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItemDispatcher.AllInstances.CancelRunBoolean">
            <summary>Sets the shim of SimpleWorkItemDispatcher.CancelRun(Boolean force)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItemDispatcher.AllInstances.DispatchWorkItem">
            <summary>Sets the shim of SimpleWorkItemDispatcher.Dispatch(WorkItem work)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItemDispatcher.AllInstances.RunnerThreadProc">
            <summary>Sets the shim of SimpleWorkItemDispatcher.RunnerThreadProc()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimSimpleWorkItemDispatcher.AllInstances.StartWorkItem">
            <summary>Sets the shim of SimpleWorkItemDispatcher.Start(WorkItem topLevelWorkItem)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimTestFinishedEvent">
            <summary>Shim type of NUnit.Framework.Internal.Execution.TestFinishedEvent</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimTestFinishedEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimTestFinishedEvent.#ctor(NUnit.Framework.Internal.Execution.TestFinishedEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimTestFinishedEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimTestFinishedEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestFinishedEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestFinishedEvent.ConstructorITestResult">
            <summary>Sets the shim of TestFinishedEvent.TestFinishedEvent(ITestResult result)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestFinishedEvent.SendITestListener">
            <summary>Sets the shim of TestFinishedEvent.Send(ITestListener listener)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimTestFinishedEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestFinishedEvent.AllInstances.SendITestListener">
            <summary>Sets the shim of TestFinishedEvent.Send(ITestListener listener)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimTestOutputEvent">
            <summary>Shim type of NUnit.Framework.Internal.Execution.TestOutputEvent</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimTestOutputEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimTestOutputEvent.#ctor(NUnit.Framework.Internal.Execution.TestOutputEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimTestOutputEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimTestOutputEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestOutputEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestOutputEvent.ConstructorTestOutput">
            <summary>Sets the shim of TestOutputEvent.TestOutputEvent(TestOutput output)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestOutputEvent.SendITestListener">
            <summary>Sets the shim of TestOutputEvent.Send(ITestListener listener)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimTestOutputEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestOutputEvent.AllInstances.SendITestListener">
            <summary>Sets the shim of TestOutputEvent.Send(ITestListener listener)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimTestStartedEvent">
            <summary>Shim type of NUnit.Framework.Internal.Execution.TestStartedEvent</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimTestStartedEvent.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimTestStartedEvent.#ctor(NUnit.Framework.Internal.Execution.TestStartedEvent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimTestStartedEvent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimTestStartedEvent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestStartedEvent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestStartedEvent.ConstructorITest">
            <summary>Sets the shim of TestStartedEvent.TestStartedEvent(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestStartedEvent.SendITestListener">
            <summary>Sets the shim of TestStartedEvent.Send(ITestListener listener)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimTestStartedEvent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestStartedEvent.AllInstances.SendITestListener">
            <summary>Sets the shim of TestStartedEvent.Send(ITestListener listener)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker">
            <summary>Shim type of NUnit.Framework.Internal.Execution.TestWorker</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.#ctor(NUnit.Framework.Internal.Execution.TestWorker)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.BusyAddTestWorkerTestWorkerEventHandler">
            <summary>Sets the shim of TestWorker.add_Busy(TestWorkerEventHandler value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.BusyRemoveTestWorkerTestWorkerEventHandler">
            <summary>Sets the shim of TestWorker.remove_Busy(TestWorkerEventHandler value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.CancelBoolean">
            <summary>Sets the shim of TestWorker.Cancel(Boolean force)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.ConstructorWorkItemQueueString">
            <summary>Sets the shim of TestWorker.TestWorker(WorkItemQueue queue, String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.IdleAddTestWorkerTestWorkerEventHandler">
            <summary>Sets the shim of TestWorker.add_Idle(TestWorkerEventHandler value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.IdleRemoveTestWorkerTestWorkerEventHandler">
            <summary>Sets the shim of TestWorker.remove_Idle(TestWorkerEventHandler value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.IsAliveGet">
            <summary>Sets the shim of TestWorker.get_IsAlive()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.NameGet">
            <summary>Sets the shim of TestWorker.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.NameSetString">
            <summary>Sets the shim of TestWorker.set_Name(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.Start">
            <summary>Sets the shim of TestWorker.Start()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.StaticConstructor">
            <summary>Sets the shim of TestWorker.TestWorker()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.TestWorkerThreadProc">
            <summary>Sets the shim of TestWorker.TestWorkerThreadProc()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.WorkQueueGet">
            <summary>Sets the shim of TestWorker.get_WorkQueue()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.WorkQueueSetWorkItemQueue">
            <summary>Sets the shim of TestWorker.set_WorkQueue(WorkItemQueue value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.AllInstances.BusyAddTestWorkerTestWorkerEventHandler">
            <summary>Sets the shim of TestWorker.add_Busy(TestWorkerEventHandler value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.AllInstances.BusyRemoveTestWorkerTestWorkerEventHandler">
            <summary>Sets the shim of TestWorker.remove_Busy(TestWorkerEventHandler value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.AllInstances.CancelBoolean">
            <summary>Sets the shim of TestWorker.Cancel(Boolean force)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.AllInstances.IdleAddTestWorkerTestWorkerEventHandler">
            <summary>Sets the shim of TestWorker.add_Idle(TestWorkerEventHandler value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.AllInstances.IdleRemoveTestWorkerTestWorkerEventHandler">
            <summary>Sets the shim of TestWorker.remove_Idle(TestWorkerEventHandler value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.AllInstances.IsAliveGet">
            <summary>Sets the shim of TestWorker.get_IsAlive()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.AllInstances.NameGet">
            <summary>Sets the shim of TestWorker.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.AllInstances.NameSetString">
            <summary>Sets the shim of TestWorker.set_Name(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.AllInstances.Start">
            <summary>Sets the shim of TestWorker.Start()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.AllInstances.TestWorkerThreadProc">
            <summary>Sets the shim of TestWorker.TestWorkerThreadProc()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.AllInstances.WorkQueueGet">
            <summary>Sets the shim of TestWorker.get_WorkQueue()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTestWorker.AllInstances.WorkQueueSetWorkItemQueue">
            <summary>Sets the shim of TestWorker.set_WorkQueue(WorkItemQueue value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimTextCapture">
            <summary>Shim type of NUnit.Framework.Internal.Execution.TextCapture</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimTextCapture.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimTextCapture.#ctor(NUnit.Framework.Internal.Execution.TextCapture)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimTextCapture.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimTextCapture.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimTextCapture.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTextCapture.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTextCapture.ConstructorTextWriter">
            <summary>Sets the shim of TextCapture.TextCapture(TextWriter defaultWriter)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTextCapture.EncodingGet">
            <summary>Sets the shim of TextCapture.get_Encoding()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTextCapture.WriteChar">
            <summary>Sets the shim of TextCapture.Write(Char value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTextCapture.WriteLineString">
            <summary>Sets the shim of TextCapture.WriteLine(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTextCapture.WriteString">
            <summary>Sets the shim of TextCapture.Write(String value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimTextCapture.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTextCapture.AllInstances.EncodingGet">
            <summary>Sets the shim of TextCapture.get_Encoding()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTextCapture.AllInstances.WriteChar">
            <summary>Sets the shim of TextCapture.Write(Char value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTextCapture.AllInstances.WriteLineString">
            <summary>Sets the shim of TextCapture.WriteLine(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimTextCapture.AllInstances.WriteString">
            <summary>Sets the shim of TextCapture.Write(String value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem">
            <summary>Shim type of NUnit.Framework.Internal.Execution.WorkItem</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.#ctor(NUnit.Framework.Internal.Execution.WorkItem)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.BuildNodeTypeIListOfMethodInfoIListOfMethodInfo">
            <summary>Sets the shim of WorkItem.BuildNode(Type fixtureType, IList`1&lt;MethodInfo&gt; setUpMethods, IList`1&lt;MethodInfo&gt; tearDownMethods)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.BuildSetUpTearDownListMethodInfoArrayMethodInfoArray">
            <summary>Sets the shim of WorkItem.BuildSetUpTearDownList(MethodInfo[] setUpMethods, MethodInfo[] tearDownMethods)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.CancelBoolean">
            <summary>Sets the shim of WorkItem.Cancel(Boolean force)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.ChangeResultResultStateString">
            <summary>Sets the shim of WorkItem.ChangeResult(ResultState resultState, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.CompletedAddEventHandler">
            <summary>Sets the shim of WorkItem.add_Completed(EventHandler value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.CompletedRemoveEventHandler">
            <summary>Sets the shim of WorkItem.remove_Completed(EventHandler value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.ConstructorTestITestFilter">
            <summary>Sets the shim of WorkItem.WorkItem(Test test, ITestFilter filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.ConstructorWorkItem">
            <summary>Sets the shim of WorkItem.WorkItem(WorkItem wrappedItem)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.ContextGet">
            <summary>Sets the shim of WorkItem.get_Context()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.ContextSetTestExecutionContext">
            <summary>Sets the shim of WorkItem.set_Context(TestExecutionContext value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.CurrentApartmentGet">
            <summary>Sets the shim of WorkItem.get_CurrentApartment()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.CurrentApartmentSetApartmentState">
            <summary>Sets the shim of WorkItem.set_CurrentApartment(ApartmentState value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.Execute">
            <summary>Sets the shim of WorkItem.Execute()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.FilterGet">
            <summary>Sets the shim of WorkItem.get_Filter()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.FilterSetITestFilter">
            <summary>Sets the shim of WorkItem.set_Filter(ITestFilter value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.InitializeContextTestExecutionContext">
            <summary>Sets the shim of WorkItem.InitializeContext(TestExecutionContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.MarkNotRunnableString">
            <summary>Sets the shim of WorkItem.MarkNotRunnable(String reason)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.NameGet">
            <summary>Sets the shim of WorkItem.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.ParallelScopeGet">
            <summary>Sets the shim of WorkItem.get_ParallelScope()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.ParallelScopeSetParallelScope">
            <summary>Sets the shim of WorkItem.set_ParallelScope(ParallelScope value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.ResultGet">
            <summary>Sets the shim of WorkItem.get_Result()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.ResultSetTestResult">
            <summary>Sets the shim of WorkItem.set_Result(TestResult value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.RunOnCurrentThread">
            <summary>Sets the shim of WorkItem.RunOnCurrentThread()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.RunOnSeparateThreadApartmentState">
            <summary>Sets the shim of WorkItem.RunOnSeparateThread(ApartmentState apartment)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.SelectMethodsByDeclaringTypeTypeIListOfMethodInfo">
            <summary>Sets the shim of WorkItem.SelectMethodsByDeclaringType(Type type, IList`1&lt;MethodInfo&gt; methods)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.StateGet">
            <summary>Sets the shim of WorkItem.get_State()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.StateSetWorkItemState">
            <summary>Sets the shim of WorkItem.set_State(WorkItemState value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.StaticConstructor">
            <summary>Sets the shim of WorkItem.WorkItem()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.TargetApartmentGet">
            <summary>Sets the shim of WorkItem.get_TargetApartment()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.TargetApartmentSetApartmentState">
            <summary>Sets the shim of WorkItem.set_TargetApartment(ApartmentState value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.TestGet">
            <summary>Sets the shim of WorkItem.get_Test()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.TestSetTest">
            <summary>Sets the shim of WorkItem.set_Test(Test value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.TestWorkerGet">
            <summary>Sets the shim of WorkItem.get_TestWorker()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.TestWorkerSetTestWorker">
            <summary>Sets the shim of WorkItem.set_TestWorker(TestWorker value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.WorkItemComplete">
            <summary>Sets the shim of WorkItem.WorkItemComplete()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem._RunOnSeparateThreadb__57_0">
            <summary>Sets the shim of WorkItem.&lt;RunOnSeparateThread&gt;b__57_0()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.BuildSetUpTearDownListMethodInfoArrayMethodInfoArray">
            <summary>Sets the shim of WorkItem.BuildSetUpTearDownList(MethodInfo[] setUpMethods, MethodInfo[] tearDownMethods)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.CancelBoolean">
            <summary>Sets the shim of WorkItem.Cancel(Boolean force)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.ChangeResultResultStateString">
            <summary>Sets the shim of WorkItem.ChangeResult(ResultState resultState, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.CompletedAddEventHandler">
            <summary>Sets the shim of WorkItem.add_Completed(EventHandler value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.CompletedRemoveEventHandler">
            <summary>Sets the shim of WorkItem.remove_Completed(EventHandler value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.ContextGet">
            <summary>Sets the shim of WorkItem.get_Context()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.ContextSetTestExecutionContext">
            <summary>Sets the shim of WorkItem.set_Context(TestExecutionContext value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.CurrentApartmentGet">
            <summary>Sets the shim of WorkItem.get_CurrentApartment()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.CurrentApartmentSetApartmentState">
            <summary>Sets the shim of WorkItem.set_CurrentApartment(ApartmentState value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.Execute">
            <summary>Sets the shim of WorkItem.Execute()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.FilterGet">
            <summary>Sets the shim of WorkItem.get_Filter()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.FilterSetITestFilter">
            <summary>Sets the shim of WorkItem.set_Filter(ITestFilter value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.InitializeContextTestExecutionContext">
            <summary>Sets the shim of WorkItem.InitializeContext(TestExecutionContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.MarkNotRunnableString">
            <summary>Sets the shim of WorkItem.MarkNotRunnable(String reason)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.NameGet">
            <summary>Sets the shim of WorkItem.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.ParallelScopeGet">
            <summary>Sets the shim of WorkItem.get_ParallelScope()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.ParallelScopeSetParallelScope">
            <summary>Sets the shim of WorkItem.set_ParallelScope(ParallelScope value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.ResultGet">
            <summary>Sets the shim of WorkItem.get_Result()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.ResultSetTestResult">
            <summary>Sets the shim of WorkItem.set_Result(TestResult value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.RunOnCurrentThread">
            <summary>Sets the shim of WorkItem.RunOnCurrentThread()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.RunOnSeparateThreadApartmentState">
            <summary>Sets the shim of WorkItem.RunOnSeparateThread(ApartmentState apartment)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.StateGet">
            <summary>Sets the shim of WorkItem.get_State()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.StateSetWorkItemState">
            <summary>Sets the shim of WorkItem.set_State(WorkItemState value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.TargetApartmentGet">
            <summary>Sets the shim of WorkItem.get_TargetApartment()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.TargetApartmentSetApartmentState">
            <summary>Sets the shim of WorkItem.set_TargetApartment(ApartmentState value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.TestGet">
            <summary>Sets the shim of WorkItem.get_Test()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.TestSetTest">
            <summary>Sets the shim of WorkItem.set_Test(Test value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.TestWorkerGet">
            <summary>Sets the shim of WorkItem.get_TestWorker()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.TestWorkerSetTestWorker">
            <summary>Sets the shim of WorkItem.set_TestWorker(TestWorker value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances.WorkItemComplete">
            <summary>Sets the shim of WorkItem.WorkItemComplete()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItem.AllInstances._RunOnSeparateThreadb__57_0">
            <summary>Sets the shim of WorkItem.&lt;RunOnSeparateThread&gt;b__57_0()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemBuilder">
            <summary>Shim type of NUnit.Framework.Internal.Execution.WorkItemBuilder</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemBuilder.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemBuilder.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemBuilder.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemBuilder.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemBuilder.CreateWorkItemITestITestFilterBoolean">
            <summary>Sets the shim of WorkItemBuilder.CreateWorkItem(ITest test, ITestFilter filter, Boolean recursive)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue">
            <summary>Shim type of NUnit.Framework.Internal.Execution.WorkItemQueue</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.#ctor(NUnit.Framework.Internal.Execution.WorkItemQueue)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.ConstructorStringBooleanApartmentState">
            <summary>Sets the shim of WorkItemQueue.WorkItemQueue(String name, Boolean isParallel, ApartmentState apartment)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.Dequeue">
            <summary>Sets the shim of WorkItemQueue.Dequeue()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.EnqueueWorkItem">
            <summary>Sets the shim of WorkItemQueue.Enqueue(WorkItem work)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.IsEmptyGet">
            <summary>Sets the shim of WorkItemQueue.get_IsEmpty()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.IsParallelQueueGet">
            <summary>Sets the shim of WorkItemQueue.get_IsParallelQueue()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.IsParallelQueueSetBoolean">
            <summary>Sets the shim of WorkItemQueue.set_IsParallelQueue(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.ItemsProcessedGet">
            <summary>Sets the shim of WorkItemQueue.get_ItemsProcessed()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.ItemsProcessedSetInt32">
            <summary>Sets the shim of WorkItemQueue.set_ItemsProcessed(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.MaxCountGet">
            <summary>Sets the shim of WorkItemQueue.get_MaxCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.MaxCountSetInt32">
            <summary>Sets the shim of WorkItemQueue.set_MaxCount(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.NameGet">
            <summary>Sets the shim of WorkItemQueue.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.NameSetString">
            <summary>Sets the shim of WorkItemQueue.set_Name(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.Pause">
            <summary>Sets the shim of WorkItemQueue.Pause()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.Restore">
            <summary>Sets the shim of WorkItemQueue.Restore()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.Save">
            <summary>Sets the shim of WorkItemQueue.Save()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.Start">
            <summary>Sets the shim of WorkItemQueue.Start()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.StateGet">
            <summary>Sets the shim of WorkItemQueue.get_State()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.StateSetWorkItemQueueState">
            <summary>Sets the shim of WorkItemQueue.set_State(WorkItemQueueState value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.Stop">
            <summary>Sets the shim of WorkItemQueue.Stop()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.TargetApartmentGet">
            <summary>Sets the shim of WorkItemQueue.get_TargetApartment()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.TargetApartmentSetApartmentState">
            <summary>Sets the shim of WorkItemQueue.set_TargetApartment(ApartmentState value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.AllInstances.Dequeue">
            <summary>Sets the shim of WorkItemQueue.Dequeue()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.AllInstances.EnqueueWorkItem">
            <summary>Sets the shim of WorkItemQueue.Enqueue(WorkItem work)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.AllInstances.IsEmptyGet">
            <summary>Sets the shim of WorkItemQueue.get_IsEmpty()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.AllInstances.IsParallelQueueGet">
            <summary>Sets the shim of WorkItemQueue.get_IsParallelQueue()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.AllInstances.IsParallelQueueSetBoolean">
            <summary>Sets the shim of WorkItemQueue.set_IsParallelQueue(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.AllInstances.ItemsProcessedGet">
            <summary>Sets the shim of WorkItemQueue.get_ItemsProcessed()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.AllInstances.ItemsProcessedSetInt32">
            <summary>Sets the shim of WorkItemQueue.set_ItemsProcessed(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.AllInstances.MaxCountGet">
            <summary>Sets the shim of WorkItemQueue.get_MaxCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.AllInstances.MaxCountSetInt32">
            <summary>Sets the shim of WorkItemQueue.set_MaxCount(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.AllInstances.NameGet">
            <summary>Sets the shim of WorkItemQueue.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.AllInstances.NameSetString">
            <summary>Sets the shim of WorkItemQueue.set_Name(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.AllInstances.Pause">
            <summary>Sets the shim of WorkItemQueue.Pause()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.AllInstances.Restore">
            <summary>Sets the shim of WorkItemQueue.Restore()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.AllInstances.Save">
            <summary>Sets the shim of WorkItemQueue.Save()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.AllInstances.Start">
            <summary>Sets the shim of WorkItemQueue.Start()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.AllInstances.StateGet">
            <summary>Sets the shim of WorkItemQueue.get_State()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.AllInstances.StateSetWorkItemQueueState">
            <summary>Sets the shim of WorkItemQueue.set_State(WorkItemQueueState value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.AllInstances.Stop">
            <summary>Sets the shim of WorkItemQueue.Stop()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.AllInstances.TargetApartmentGet">
            <summary>Sets the shim of WorkItemQueue.get_TargetApartment()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkItemQueue.AllInstances.TargetApartmentSetApartmentState">
            <summary>Sets the shim of WorkItemQueue.set_TargetApartment(ApartmentState value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift">
            <summary>Shim type of NUnit.Framework.Internal.Execution.WorkShift</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.#ctor(NUnit.Framework.Internal.Execution.WorkShift)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.AddQueueWorkItemQueue">
            <summary>Sets the shim of WorkShift.AddQueue(WorkItemQueue queue)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.AssignTestWorker">
            <summary>Sets the shim of WorkShift.Assign(TestWorker worker)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.CancelBoolean">
            <summary>Sets the shim of WorkShift.Cancel(Boolean force)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.ConstructorString">
            <summary>Sets the shim of WorkShift.WorkShift(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.EndOfShiftAddEventHandler">
            <summary>Sets the shim of WorkShift.add_EndOfShift(EventHandler value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.EndOfShiftRemoveEventHandler">
            <summary>Sets the shim of WorkShift.remove_EndOfShift(EventHandler value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.EndShift">
            <summary>Sets the shim of WorkShift.EndShift()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.HasWorkGet">
            <summary>Sets the shim of WorkShift.get_HasWork()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.IsActiveGet">
            <summary>Sets the shim of WorkShift.get_IsActive()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.IsActiveSetBoolean">
            <summary>Sets the shim of WorkShift.set_IsActive(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.NameGet">
            <summary>Sets the shim of WorkShift.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.QueuesGet">
            <summary>Sets the shim of WorkShift.get_Queues()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.ShutDown">
            <summary>Sets the shim of WorkShift.ShutDown()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.Start">
            <summary>Sets the shim of WorkShift.Start()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.StartWorkers">
            <summary>Sets the shim of WorkShift.StartWorkers()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.StaticConstructor">
            <summary>Sets the shim of WorkShift.WorkShift()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.WorkersGet">
            <summary>Sets the shim of WorkShift.get_Workers()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift._StartWorkersb__26_0TestWorkerWorkItem">
            <summary>Sets the shim of WorkShift.&lt;StartWorkers&gt;b__26_0(TestWorker s, WorkItem ea)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift._StartWorkersb__26_1TestWorkerWorkItem">
            <summary>Sets the shim of WorkShift.&lt;StartWorkers&gt;b__26_1(TestWorker s, WorkItem ea)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.AllInstances.AddQueueWorkItemQueue">
            <summary>Sets the shim of WorkShift.AddQueue(WorkItemQueue queue)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.AllInstances.AssignTestWorker">
            <summary>Sets the shim of WorkShift.Assign(TestWorker worker)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.AllInstances.CancelBoolean">
            <summary>Sets the shim of WorkShift.Cancel(Boolean force)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.AllInstances.EndOfShiftAddEventHandler">
            <summary>Sets the shim of WorkShift.add_EndOfShift(EventHandler value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.AllInstances.EndOfShiftRemoveEventHandler">
            <summary>Sets the shim of WorkShift.remove_EndOfShift(EventHandler value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.AllInstances.EndShift">
            <summary>Sets the shim of WorkShift.EndShift()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.AllInstances.HasWorkGet">
            <summary>Sets the shim of WorkShift.get_HasWork()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.AllInstances.IsActiveGet">
            <summary>Sets the shim of WorkShift.get_IsActive()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.AllInstances.IsActiveSetBoolean">
            <summary>Sets the shim of WorkShift.set_IsActive(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.AllInstances.NameGet">
            <summary>Sets the shim of WorkShift.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.AllInstances.QueuesGet">
            <summary>Sets the shim of WorkShift.get_Queues()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.AllInstances.ShutDown">
            <summary>Sets the shim of WorkShift.ShutDown()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.AllInstances.Start">
            <summary>Sets the shim of WorkShift.Start()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.AllInstances.StartWorkers">
            <summary>Sets the shim of WorkShift.StartWorkers()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.AllInstances.WorkersGet">
            <summary>Sets the shim of WorkShift.get_Workers()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.AllInstances._StartWorkersb__26_0TestWorkerWorkItem">
            <summary>Sets the shim of WorkShift.&lt;StartWorkers&gt;b__26_0(TestWorker s, WorkItem ea)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.ShimWorkShift.AllInstances._StartWorkersb__26_1TestWorkerWorkItem">
            <summary>Sets the shim of WorkShift.&lt;StartWorkers&gt;b__26_1(TestWorker s, WorkItem ea)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.StubCompositeWorkItem">
            <summary>Stub type of NUnit.Framework.Internal.Execution.CompositeWorkItem</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubCompositeWorkItem.#ctor(NUnit.Framework.Internal.TestSuite,NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubCompositeWorkItem.Cancel(System.Boolean)">
            <summary>Sets the stub of CompositeWorkItem.Cancel(Boolean force)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubCompositeWorkItem.CancelBoolean">
            <summary>Sets the stub of CompositeWorkItem.Cancel(Boolean force)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubCompositeWorkItem.Execute">
            <summary>Sets the stub of WorkItem.Execute()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubCompositeWorkItem.Execute01">
            <summary>Sets the stub of WorkItem.Execute()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubCompositeWorkItem.InitializeStub">
            <summary>Initializes a new instance of type StubCompositeWorkItem</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubCompositeWorkItem.NameGet">
            <summary>Sets the stub of WorkItem.get_Name()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubCompositeWorkItem.PerformWork">
            <summary>Sets the stub of CompositeWorkItem.PerformWork()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubCompositeWorkItem.PerformWork01">
            <summary>Sets the stub of CompositeWorkItem.PerformWork()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubCompositeWorkItem.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubCompositeWorkItem.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubCompositeWorkItem.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubCompositeWorkItem.Name">
            <summary>Sets the stub of WorkItem.get_Name()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.StubEvent">
            <summary>Stub type of NUnit.Framework.Internal.Execution.Event</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEvent.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEvent.InitializeStub">
            <summary>Initializes a new instance of type StubEvent</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEvent.Send(NUnit.Framework.Interfaces.ITestListener)">
            <summary>Sets the stub of Event.Send(ITestListener listener)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEvent.SendITestListener">
            <summary>Sets the stub of Event.Send(ITestListener listener)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter">
            <summary>Stub type of NUnit.Framework.Internal.Execution.EventListenerTextWriter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.#ctor(System.String,System.IO.TextWriter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.AttachBackingFieldToNewLine">
            <summary>Attaches delegates to emulate StubEventListenerTextWriter.NewLine as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Close">
            <summary>Sets the stub of TextWriter.Close()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Close01">
            <summary>Sets the stub of TextWriter.Close()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Dispose(System.Boolean)">
            <summary>Sets the stub of TextWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.DisposeBoolean">
            <summary>Sets the stub of TextWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.EncodingGet">
            <summary>Sets the stub of EventListenerTextWriter.get_Encoding()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Flush">
            <summary>Sets the stub of TextWriter.Flush()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Flush01">
            <summary>Sets the stub of TextWriter.Flush()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.FormatProviderGet">
            <summary>Sets the stub of TextWriter.get_FormatProvider()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.InitializeStub">
            <summary>Initializes a new instance of type StubEventListenerTextWriter</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.NewLineGet">
            <summary>Sets the stub of TextWriter.get_NewLine()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.NewLineSetString">
            <summary>Sets the stub of TextWriter.set_NewLine(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Write(System.String)">
            <summary>Sets the stub of EventListenerTextWriter.Write(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Write(System.Boolean)">
            <summary>Sets the stub of EventListenerTextWriter.Write(Boolean value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Write(System.Char)">
            <summary>Sets the stub of EventListenerTextWriter.Write(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Write(System.Decimal)">
            <summary>Sets the stub of EventListenerTextWriter.Write(Decimal value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Write(System.Double)">
            <summary>Sets the stub of EventListenerTextWriter.Write(Double value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Write(System.Int32)">
            <summary>Sets the stub of EventListenerTextWriter.Write(Int32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Write(System.Int64)">
            <summary>Sets the stub of EventListenerTextWriter.Write(Int64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Write(System.Char[])">
            <summary>Sets the stub of EventListenerTextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Write(System.Object)">
            <summary>Sets the stub of EventListenerTextWriter.Write(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Write(System.Single)">
            <summary>Sets the stub of EventListenerTextWriter.Write(Single value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Write(System.UInt32)">
            <summary>Sets the stub of EventListenerTextWriter.Write(UInt32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Write(System.UInt64)">
            <summary>Sets the stub of EventListenerTextWriter.Write(UInt64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Write(System.String,System.Object)">
            <summary>Sets the stub of EventListenerTextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Write(System.String,System.Object[])">
            <summary>Sets the stub of EventListenerTextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of EventListenerTextWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Write(System.String,System.Object,System.Object)">
            <summary>Sets the stub of EventListenerTextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>Sets the stub of EventListenerTextWriter.Write(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteBoolean">
            <summary>Sets the stub of EventListenerTextWriter.Write(Boolean value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteChar">
            <summary>Sets the stub of EventListenerTextWriter.Write(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteCharArray">
            <summary>Sets the stub of EventListenerTextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteCharArrayInt32Int32">
            <summary>Sets the stub of EventListenerTextWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteDecimal">
            <summary>Sets the stub of EventListenerTextWriter.Write(Decimal value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteDouble">
            <summary>Sets the stub of EventListenerTextWriter.Write(Double value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteInt32">
            <summary>Sets the stub of EventListenerTextWriter.Write(Int32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteInt64">
            <summary>Sets the stub of EventListenerTextWriter.Write(Int64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLine">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLine(System.Boolean)">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLine(System.Char)">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLine(System.Decimal)">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(Decimal value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLine(System.Double)">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLine(System.Int32)">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLine(System.Int64)">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLine(System.UInt32)">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLine(System.Object)">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLine(System.String)">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLine(System.Single)">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLine(System.UInt64)">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(UInt64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLine(System.Char[])">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLine(System.String,System.Object[])">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLine(System.String,System.Object)">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLine(System.String,System.Object,System.Object)">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLine01">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLineBoolean">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLineChar">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLineCharArray">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLineCharArrayInt32Int32">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLineDecimal">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(Decimal value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLineDouble">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLineInt32">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLineInt64">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLineObject">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLineSingle">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLineString">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLineStringObject">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLineStringObjectArray">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLineStringObjectObject">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLineStringObjectObjectObject">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLineUInt32">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteLineUInt64">
            <summary>Sets the stub of EventListenerTextWriter.WriteLine(UInt64 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteObject">
            <summary>Sets the stub of EventListenerTextWriter.Write(Object value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteSingle">
            <summary>Sets the stub of EventListenerTextWriter.Write(Single value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteString">
            <summary>Sets the stub of EventListenerTextWriter.Write(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteStringObject">
            <summary>Sets the stub of EventListenerTextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteStringObjectArray">
            <summary>Sets the stub of EventListenerTextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteStringObjectObject">
            <summary>Sets the stub of EventListenerTextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteStringObjectObjectObject">
            <summary>Sets the stub of EventListenerTextWriter.Write(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteUInt32">
            <summary>Sets the stub of EventListenerTextWriter.Write(UInt32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.WriteUInt64">
            <summary>Sets the stub of EventListenerTextWriter.Write(UInt64 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.Encoding">
            <summary>Sets the stub of EventListenerTextWriter.get_Encoding()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.FormatProvider">
            <summary>Sets the stub of TextWriter.get_FormatProvider()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubEventListenerTextWriter.NewLine">
            <summary>Sets the stub of TextWriter.get_NewLine()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.StubEventPump">
            <summary>Stub type of NUnit.Framework.Internal.Execution.EventPump</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventPump.#ctor(NUnit.Framework.Interfaces.ITestListener,NUnit.Framework.Internal.Execution.EventQueue)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventPump.InitializeStub">
            <summary>Initializes a new instance of type StubEventPump</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubEventPump.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubEventPump.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubEventPump.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.StubEventQueue">
            <summary>Stub type of NUnit.Framework.Internal.Execution.EventQueue</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventQueue.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubEventQueue.InitializeStub">
            <summary>Initializes a new instance of type StubEventQueue</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubEventQueue.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubEventQueue.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubEventQueue.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.StubIWorkItemDispatcher">
            <summary>Stub type of NUnit.Framework.Internal.Execution.IWorkItemDispatcher</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubIWorkItemDispatcher.#ctor">
            <summary>Initializes a new instance of type StubIWorkItemDispatcher</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubIWorkItemDispatcher.CancelRunBoolean">
            <summary>Sets the stub of IWorkItemDispatcher.CancelRun(Boolean force)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubIWorkItemDispatcher.DispatchWorkItem">
            <summary>Sets the stub of IWorkItemDispatcher.Dispatch(WorkItem work)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubIWorkItemDispatcher.n::NUnit#Framework#Internal#Execution#IWorkItemDispatcher#CancelRun(System.Boolean)">
            <summary>Sets the stub of IWorkItemDispatcher.CancelRun(Boolean force)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubIWorkItemDispatcher.n::NUnit#Framework#Internal#Execution#IWorkItemDispatcher#Dispatch(NUnit.Framework.Internal.Execution.WorkItem)">
            <summary>Sets the stub of IWorkItemDispatcher.Dispatch(WorkItem work)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubIWorkItemDispatcher.n::NUnit#Framework#Internal#Execution#IWorkItemDispatcher#Start(NUnit.Framework.Internal.Execution.WorkItem)">
            <summary>Sets the stub of IWorkItemDispatcher.Start(WorkItem topLevelWorkItem)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubIWorkItemDispatcher.StartWorkItem">
            <summary>Sets the stub of IWorkItemDispatcher.Start(WorkItem topLevelWorkItem)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.StubParallelWorkItemDispatcher">
            <summary>Stub type of NUnit.Framework.Internal.Execution.ParallelWorkItemDispatcher</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubParallelWorkItemDispatcher.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubParallelWorkItemDispatcher.InitializeStub">
            <summary>Initializes a new instance of type StubParallelWorkItemDispatcher</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubParallelWorkItemDispatcher.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubParallelWorkItemDispatcher.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubParallelWorkItemDispatcher.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.StubQueuingEventListener">
            <summary>Stub type of NUnit.Framework.Internal.Execution.QueuingEventListener</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubQueuingEventListener.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubQueuingEventListener.InitializeStub">
            <summary>Initializes a new instance of type StubQueuingEventListener</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubQueuingEventListener.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubQueuingEventListener.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubQueuingEventListener.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.StubSimpleWorkItem">
            <summary>Stub type of NUnit.Framework.Internal.Execution.SimpleWorkItem</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubSimpleWorkItem.#ctor(NUnit.Framework.Internal.TestMethod,NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubSimpleWorkItem.Cancel(System.Boolean)">
            <summary>Sets the stub of WorkItem.Cancel(Boolean force)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubSimpleWorkItem.CancelBoolean">
            <summary>Sets the stub of WorkItem.Cancel(Boolean force)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubSimpleWorkItem.Execute">
            <summary>Sets the stub of WorkItem.Execute()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubSimpleWorkItem.Execute01">
            <summary>Sets the stub of WorkItem.Execute()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubSimpleWorkItem.InitializeStub">
            <summary>Initializes a new instance of type StubSimpleWorkItem</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubSimpleWorkItem.NameGet">
            <summary>Sets the stub of WorkItem.get_Name()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubSimpleWorkItem.PerformWork">
            <summary>Sets the stub of SimpleWorkItem.PerformWork()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubSimpleWorkItem.PerformWork01">
            <summary>Sets the stub of SimpleWorkItem.PerformWork()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubSimpleWorkItem.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubSimpleWorkItem.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubSimpleWorkItem.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubSimpleWorkItem.Name">
            <summary>Sets the stub of WorkItem.get_Name()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.StubSimpleWorkItemDispatcher">
            <summary>Stub type of NUnit.Framework.Internal.Execution.SimpleWorkItemDispatcher</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubSimpleWorkItemDispatcher.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubSimpleWorkItemDispatcher.InitializeStub">
            <summary>Initializes a new instance of type StubSimpleWorkItemDispatcher</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubSimpleWorkItemDispatcher.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubSimpleWorkItemDispatcher.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubSimpleWorkItemDispatcher.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.StubTestFinishedEvent">
            <summary>Stub type of NUnit.Framework.Internal.Execution.TestFinishedEvent</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTestFinishedEvent.#ctor(NUnit.Framework.Interfaces.ITestResult)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTestFinishedEvent.InitializeStub">
            <summary>Initializes a new instance of type StubTestFinishedEvent</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTestFinishedEvent.Send(NUnit.Framework.Interfaces.ITestListener)">
            <summary>Sets the stub of TestFinishedEvent.Send(ITestListener listener)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTestFinishedEvent.SendITestListener">
            <summary>Sets the stub of TestFinishedEvent.Send(ITestListener listener)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubTestFinishedEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubTestFinishedEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubTestFinishedEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.StubTestOutputEvent">
            <summary>Stub type of NUnit.Framework.Internal.Execution.TestOutputEvent</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTestOutputEvent.#ctor(NUnit.Framework.Interfaces.TestOutput)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTestOutputEvent.InitializeStub">
            <summary>Initializes a new instance of type StubTestOutputEvent</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTestOutputEvent.Send(NUnit.Framework.Interfaces.ITestListener)">
            <summary>Sets the stub of TestOutputEvent.Send(ITestListener listener)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTestOutputEvent.SendITestListener">
            <summary>Sets the stub of TestOutputEvent.Send(ITestListener listener)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubTestOutputEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubTestOutputEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubTestOutputEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.StubTestStartedEvent">
            <summary>Stub type of NUnit.Framework.Internal.Execution.TestStartedEvent</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTestStartedEvent.#ctor(NUnit.Framework.Interfaces.ITest)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTestStartedEvent.InitializeStub">
            <summary>Initializes a new instance of type StubTestStartedEvent</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTestStartedEvent.Send(NUnit.Framework.Interfaces.ITestListener)">
            <summary>Sets the stub of TestStartedEvent.Send(ITestListener listener)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTestStartedEvent.SendITestListener">
            <summary>Sets the stub of TestStartedEvent.Send(ITestListener listener)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubTestStartedEvent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubTestStartedEvent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubTestStartedEvent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.StubTestWorker">
            <summary>Stub type of NUnit.Framework.Internal.Execution.TestWorker</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTestWorker.#ctor(NUnit.Framework.Internal.Execution.WorkItemQueue,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTestWorker.InitializeStub">
            <summary>Initializes a new instance of type StubTestWorker</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubTestWorker.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubTestWorker.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubTestWorker.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture">
            <summary>Stub type of NUnit.Framework.Internal.Execution.TextCapture</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.#ctor(System.IO.TextWriter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.AttachBackingFieldToNewLine">
            <summary>Attaches delegates to emulate StubTextCapture.NewLine as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Close">
            <summary>Sets the stub of TextWriter.Close()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Close01">
            <summary>Sets the stub of TextWriter.Close()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Dispose(System.Boolean)">
            <summary>Sets the stub of TextWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.DisposeBoolean">
            <summary>Sets the stub of TextWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.EncodingGet">
            <summary>Sets the stub of TextCapture.get_Encoding()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Flush">
            <summary>Sets the stub of TextWriter.Flush()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Flush01">
            <summary>Sets the stub of TextWriter.Flush()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.FlushAsync">
            <summary>Sets the stub of TextWriter.FlushAsync()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.FlushAsync01">
            <summary>Sets the stub of TextWriter.FlushAsync()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.FormatProviderGet">
            <summary>Sets the stub of TextWriter.get_FormatProvider()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.InitializeStub">
            <summary>Initializes a new instance of type StubTextCapture</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.NewLineGet">
            <summary>Sets the stub of TextWriter.get_NewLine()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.NewLineSetString">
            <summary>Sets the stub of TextWriter.set_NewLine(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Write(System.Boolean)">
            <summary>Sets the stub of TextWriter.Write(Boolean value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Write(System.Char[])">
            <summary>Sets the stub of TextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Write(System.Object)">
            <summary>Sets the stub of TextWriter.Write(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Write(System.Char)">
            <summary>Sets the stub of TextCapture.Write(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Write(System.Double)">
            <summary>Sets the stub of TextWriter.Write(Double value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Write(System.String)">
            <summary>Sets the stub of TextCapture.Write(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Write(System.Decimal)">
            <summary>Sets the stub of TextWriter.Write(Decimal value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Write(System.Int32)">
            <summary>Sets the stub of TextWriter.Write(Int32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Write(System.Int64)">
            <summary>Sets the stub of TextWriter.Write(Int64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Write(System.Single)">
            <summary>Sets the stub of TextWriter.Write(Single value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Write(System.UInt32)">
            <summary>Sets the stub of TextWriter.Write(UInt32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Write(System.UInt64)">
            <summary>Sets the stub of TextWriter.Write(UInt64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Write(System.String,System.Object)">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Write(System.String,System.Object[])">
            <summary>Sets the stub of TextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Write(System.String,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Write(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of TextWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteAsync(System.Char)">
            <summary>Sets the stub of TextWriter.WriteAsync(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteAsync(System.String)">
            <summary>Sets the stub of TextWriter.WriteAsync(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteAsync(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of TextWriter.WriteAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteAsyncChar">
            <summary>Sets the stub of TextWriter.WriteAsync(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteAsyncCharArrayInt32Int32">
            <summary>Sets the stub of TextWriter.WriteAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteAsyncString">
            <summary>Sets the stub of TextWriter.WriteAsync(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteBoolean">
            <summary>Sets the stub of TextWriter.Write(Boolean value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteChar">
            <summary>Sets the stub of TextCapture.Write(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteCharArray">
            <summary>Sets the stub of TextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteCharArrayInt32Int32">
            <summary>Sets the stub of TextWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteDecimal">
            <summary>Sets the stub of TextWriter.Write(Decimal value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteDouble">
            <summary>Sets the stub of TextWriter.Write(Double value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteInt32">
            <summary>Sets the stub of TextWriter.Write(Int32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteInt64">
            <summary>Sets the stub of TextWriter.Write(Int64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLine">
            <summary>Sets the stub of TextWriter.WriteLine()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLine(System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLine(System.Boolean)">
            <summary>Sets the stub of TextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLine(System.Char)">
            <summary>Sets the stub of TextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLine(System.Decimal)">
            <summary>Sets the stub of TextWriter.WriteLine(Decimal value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLine(System.Double)">
            <summary>Sets the stub of TextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLine(System.Int32)">
            <summary>Sets the stub of TextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLine(System.Int64)">
            <summary>Sets the stub of TextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLine(System.String)">
            <summary>Sets the stub of TextCapture.WriteLine(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLine(System.Single)">
            <summary>Sets the stub of TextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLine(System.UInt32)">
            <summary>Sets the stub of TextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLine(System.Char[])">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLine(System.UInt64)">
            <summary>Sets the stub of TextWriter.WriteLine(UInt64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLine(System.String,System.Object[])">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLine(System.String,System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLine(System.String,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLine01">
            <summary>Sets the stub of TextWriter.WriteLine()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineAsync">
            <summary>Sets the stub of TextWriter.WriteLineAsync()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineAsync(System.Char)">
            <summary>Sets the stub of TextWriter.WriteLineAsync(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineAsync(System.String)">
            <summary>Sets the stub of TextWriter.WriteLineAsync(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of TextWriter.WriteLineAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineAsync01">
            <summary>Sets the stub of TextWriter.WriteLineAsync()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineAsyncChar">
            <summary>Sets the stub of TextWriter.WriteLineAsync(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineAsyncCharArrayInt32Int32">
            <summary>Sets the stub of TextWriter.WriteLineAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineAsyncString">
            <summary>Sets the stub of TextWriter.WriteLineAsync(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineBoolean">
            <summary>Sets the stub of TextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineChar">
            <summary>Sets the stub of TextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineCharArray">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineCharArrayInt32Int32">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineDecimal">
            <summary>Sets the stub of TextWriter.WriteLine(Decimal value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineDouble">
            <summary>Sets the stub of TextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineInt32">
            <summary>Sets the stub of TextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineInt64">
            <summary>Sets the stub of TextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineObject">
            <summary>Sets the stub of TextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineSingle">
            <summary>Sets the stub of TextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineString">
            <summary>Sets the stub of TextCapture.WriteLine(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineStringObject">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineStringObjectArray">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineStringObjectObject">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineStringObjectObjectObject">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineUInt32">
            <summary>Sets the stub of TextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteLineUInt64">
            <summary>Sets the stub of TextWriter.WriteLine(UInt64 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteObject">
            <summary>Sets the stub of TextWriter.Write(Object value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteSingle">
            <summary>Sets the stub of TextWriter.Write(Single value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteString">
            <summary>Sets the stub of TextCapture.Write(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteStringObject">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteStringObjectArray">
            <summary>Sets the stub of TextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteStringObjectObject">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteStringObjectObjectObject">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteUInt32">
            <summary>Sets the stub of TextWriter.Write(UInt32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.WriteUInt64">
            <summary>Sets the stub of TextWriter.Write(UInt64 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.Encoding">
            <summary>Sets the stub of TextCapture.get_Encoding()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.FormatProvider">
            <summary>Sets the stub of TextWriter.get_FormatProvider()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubTextCapture.NewLine">
            <summary>Sets the stub of TextWriter.get_NewLine()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.StubWorkItem">
            <summary>Stub type of NUnit.Framework.Internal.Execution.WorkItem</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubWorkItem.#ctor(NUnit.Framework.Internal.Execution.WorkItem)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubWorkItem.#ctor(NUnit.Framework.Internal.Test,NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubWorkItem.Cancel(System.Boolean)">
            <summary>Sets the stub of WorkItem.Cancel(Boolean force)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubWorkItem.CancelBoolean">
            <summary>Sets the stub of WorkItem.Cancel(Boolean force)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubWorkItem.Execute">
            <summary>Sets the stub of WorkItem.Execute()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubWorkItem.Execute01">
            <summary>Sets the stub of WorkItem.Execute()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubWorkItem.InitializeStub">
            <summary>Initializes a new instance of type StubWorkItem</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubWorkItem.NameGet">
            <summary>Sets the stub of WorkItem.get_Name()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubWorkItem.PerformWork">
            <summary>Sets the stub of WorkItem.PerformWork()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Execution.Fakes.StubWorkItem.PerformWork01">
            <summary>Sets the stub of WorkItem.PerformWork()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubWorkItem.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubWorkItem.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubWorkItem.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubWorkItem.Name">
            <summary>Sets the stub of WorkItem.get_Name()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.StubWorkItemQueue">
            <summary>Stub type of NUnit.Framework.Internal.Execution.WorkItemQueue</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubWorkItemQueue.#ctor(System.String,System.Boolean,System.Threading.ApartmentState)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubWorkItemQueue.InitializeStub">
            <summary>Initializes a new instance of type StubWorkItemQueue</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubWorkItemQueue.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubWorkItemQueue.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubWorkItemQueue.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Execution.Fakes.StubWorkShift">
            <summary>Stub type of NUnit.Framework.Internal.Execution.WorkShift</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubWorkShift.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Execution.Fakes.StubWorkShift.InitializeStub">
            <summary>Initializes a new instance of type StubWorkShift</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubWorkShift.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubWorkShift.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Execution.Fakes.StubWorkShift.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimAssemblyHelper">
            <summary>Shim type of NUnit.Framework.Internal.AssemblyHelper</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimAssemblyHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimAssemblyHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimAssemblyHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimAssemblyHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimAssemblyHelper.GetAssemblyNameAssembly">
            <summary>Sets the shim of AssemblyHelper.GetAssemblyName(Assembly assembly)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimAssemblyHelper.GetAssemblyPathAssembly">
            <summary>Sets the shim of AssemblyHelper.GetAssemblyPath(Assembly assembly)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimAssemblyHelper.GetAssemblyPathFromCodeBaseString">
            <summary>Sets the shim of AssemblyHelper.GetAssemblyPathFromCodeBase(String codeBase)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimAssemblyHelper.GetDirectoryNameAssembly">
            <summary>Sets the shim of AssemblyHelper.GetDirectoryName(Assembly assembly)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimAssemblyHelper.IsFileUriString">
            <summary>Sets the shim of AssemblyHelper.IsFileUri(String uri)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimAssemblyHelper.LoadString">
            <summary>Sets the shim of AssemblyHelper.Load(String nameOrPath)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimAssemblyHelper.StaticConstructor">
            <summary>Sets the shim of AssemblyHelper.AssemblyHelper()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimCultureDetector">
            <summary>Shim type of NUnit.Framework.Internal.CultureDetector</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimCultureDetector.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimCultureDetector.#ctor(NUnit.Framework.Internal.CultureDetector)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimCultureDetector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimCultureDetector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimCultureDetector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimCultureDetector.Constructor">
            <summary>Sets the shim of CultureDetector.CultureDetector()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimCultureDetector.ConstructorString">
            <summary>Sets the shim of CultureDetector.CultureDetector(String culture)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimCultureDetector.IsCultureSupportedCultureAttribute">
            <summary>Sets the shim of CultureDetector.IsCultureSupported(CultureAttribute cultureAttribute)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimCultureDetector.IsCultureSupportedString">
            <summary>Sets the shim of CultureDetector.IsCultureSupported(String culture)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimCultureDetector.IsCultureSupportedStringArray">
            <summary>Sets the shim of CultureDetector.IsCultureSupported(String[] cultures)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimCultureDetector.ReasonGet">
            <summary>Sets the shim of CultureDetector.get_Reason()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimCultureDetector.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimCultureDetector.AllInstances.IsCultureSupportedCultureAttribute">
            <summary>Sets the shim of CultureDetector.IsCultureSupported(CultureAttribute cultureAttribute)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimCultureDetector.AllInstances.IsCultureSupportedString">
            <summary>Sets the shim of CultureDetector.IsCultureSupported(String culture)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimCultureDetector.AllInstances.IsCultureSupportedStringArray">
            <summary>Sets the shim of CultureDetector.IsCultureSupported(String[] cultures)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimCultureDetector.AllInstances.ReasonGet">
            <summary>Sets the shim of CultureDetector.get_Reason()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimExceptionHelper">
            <summary>Shim type of NUnit.Framework.Internal.ExceptionHelper</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimExceptionHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimExceptionHelper.#ctor(NUnit.Framework.Internal.ExceptionHelper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimExceptionHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimExceptionHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimExceptionHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimExceptionHelper.BuildFriendlyMessageException">
            <summary>Sets the shim of ExceptionHelper.BuildFriendlyMessage(Exception exception)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimExceptionHelper.BuildMessageException">
            <summary>Sets the shim of ExceptionHelper.BuildMessage(Exception exception)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimExceptionHelper.BuildMessageExceptionBoolean">
            <summary>Sets the shim of ExceptionHelper.BuildMessage(Exception exception, Boolean isFriendlyMessage)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimExceptionHelper.BuildStackTraceException">
            <summary>Sets the shim of ExceptionHelper.BuildStackTrace(Exception exception)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimExceptionHelper.Constructor">
            <summary>Sets the shim of ExceptionHelper.ExceptionHelper()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimExceptionHelper.FlattenExceptionHierarchyException">
            <summary>Sets the shim of ExceptionHelper.FlattenExceptionHierarchy(Exception exception)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimExceptionHelper.GetStackTraceException">
            <summary>Sets the shim of ExceptionHelper.GetStackTrace(Exception exception)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimExceptionHelper.RethrowException">
            <summary>Sets the shim of ExceptionHelper.Rethrow(Exception exception)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimExceptionHelper.WriteExceptionStringBuilderExceptionBoolean">
            <summary>Sets the shim of ExceptionHelper.WriteException(StringBuilder sb, Exception inner, Boolean isFriendlyMessage)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimExceptionHelper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper">
            <summary>Shim type of NUnit.Framework.Internal.GenericMethodHelper</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.#ctor(NUnit.Framework.Internal.GenericMethodHelper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.ApplyArgTypeTypeType">
            <summary>Sets the shim of GenericMethodHelper.ApplyArgType(Type parmType, Type argType)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.ConstructorMethodInfo">
            <summary>Sets the shim of GenericMethodHelper.GenericMethodHelper(MethodInfo method)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.GetTypeArgumentsObjectArray">
            <summary>Sets the shim of GenericMethodHelper.GetTypeArguments(Object[] argList)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.IsAssignableToGenericTypeTypeType">
            <summary>Sets the shim of GenericMethodHelper.IsAssignableToGenericType(Type givenType, Type genericType)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.MethodGet">
            <summary>Sets the shim of GenericMethodHelper.get_Method()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.MethodSetMethodInfo">
            <summary>Sets the shim of GenericMethodHelper.set_Method(MethodInfo value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.ParmTypesGet">
            <summary>Sets the shim of GenericMethodHelper.get_ParmTypes()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.ParmTypesSetTypeArray">
            <summary>Sets the shim of GenericMethodHelper.set_ParmTypes(Type[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.TryApplyArgTypeTypeType">
            <summary>Sets the shim of GenericMethodHelper.TryApplyArgType(Type parmType, Type argType)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.TypeArgsGet">
            <summary>Sets the shim of GenericMethodHelper.get_TypeArgs()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.TypeArgsSetTypeArray">
            <summary>Sets the shim of GenericMethodHelper.set_TypeArgs(Type[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.TypeParmsGet">
            <summary>Sets the shim of GenericMethodHelper.get_TypeParms()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.TypeParmsSetTypeArray">
            <summary>Sets the shim of GenericMethodHelper.set_TypeParms(Type[] value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.AllInstances.ApplyArgTypeTypeType">
            <summary>Sets the shim of GenericMethodHelper.ApplyArgType(Type parmType, Type argType)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.AllInstances.GetTypeArgumentsObjectArray">
            <summary>Sets the shim of GenericMethodHelper.GetTypeArguments(Object[] argList)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.AllInstances.IsAssignableToGenericTypeTypeType">
            <summary>Sets the shim of GenericMethodHelper.IsAssignableToGenericType(Type givenType, Type genericType)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.AllInstances.MethodGet">
            <summary>Sets the shim of GenericMethodHelper.get_Method()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.AllInstances.MethodSetMethodInfo">
            <summary>Sets the shim of GenericMethodHelper.set_Method(MethodInfo value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.AllInstances.ParmTypesGet">
            <summary>Sets the shim of GenericMethodHelper.get_ParmTypes()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.AllInstances.ParmTypesSetTypeArray">
            <summary>Sets the shim of GenericMethodHelper.set_ParmTypes(Type[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.AllInstances.TryApplyArgTypeTypeType">
            <summary>Sets the shim of GenericMethodHelper.TryApplyArgType(Type parmType, Type argType)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.AllInstances.TypeArgsGet">
            <summary>Sets the shim of GenericMethodHelper.get_TypeArgs()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.AllInstances.TypeArgsSetTypeArray">
            <summary>Sets the shim of GenericMethodHelper.set_TypeArgs(Type[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.AllInstances.TypeParmsGet">
            <summary>Sets the shim of GenericMethodHelper.get_TypeParms()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimGenericMethodHelper.AllInstances.TypeParmsSetTypeArray">
            <summary>Sets the shim of GenericMethodHelper.set_TypeParms(Type[] value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimInternalTrace">
            <summary>Shim type of NUnit.Framework.Internal.InternalTrace</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimInternalTrace.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimInternalTrace.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimInternalTrace.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInternalTrace.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInternalTrace.GetLoggerString">
            <summary>Sets the shim of InternalTrace.GetLogger(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInternalTrace.GetLoggerType">
            <summary>Sets the shim of InternalTrace.GetLogger(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInternalTrace.InitializeStringInternalTraceLevel">
            <summary>Sets the shim of InternalTrace.Initialize(String logName, InternalTraceLevel level)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInternalTrace.InitializeTextWriterInternalTraceLevel">
            <summary>Sets the shim of InternalTrace.Initialize(TextWriter writer, InternalTraceLevel level)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInternalTrace.InitializedGet">
            <summary>Sets the shim of InternalTrace.get_Initialized()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInternalTrace.InitializedSetBoolean">
            <summary>Sets the shim of InternalTrace.set_Initialized(Boolean value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimInternalTraceWriter">
            <summary>Shim type of NUnit.Framework.Internal.InternalTraceWriter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimInternalTraceWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimInternalTraceWriter.#ctor(NUnit.Framework.Internal.InternalTraceWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimInternalTraceWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimInternalTraceWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimInternalTraceWriter.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInternalTraceWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInternalTraceWriter.ConstructorString">
            <summary>Sets the shim of InternalTraceWriter.InternalTraceWriter(String logPath)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInternalTraceWriter.ConstructorTextWriter">
            <summary>Sets the shim of InternalTraceWriter.InternalTraceWriter(TextWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInternalTraceWriter.DisposeBoolean">
            <summary>Sets the shim of InternalTraceWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInternalTraceWriter.EncodingGet">
            <summary>Sets the shim of InternalTraceWriter.get_Encoding()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInternalTraceWriter.Flush">
            <summary>Sets the shim of InternalTraceWriter.Flush()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInternalTraceWriter.WriteChar">
            <summary>Sets the shim of InternalTraceWriter.Write(Char value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInternalTraceWriter.WriteLineString">
            <summary>Sets the shim of InternalTraceWriter.WriteLine(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInternalTraceWriter.WriteString">
            <summary>Sets the shim of InternalTraceWriter.Write(String value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimInternalTraceWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInternalTraceWriter.AllInstances.DisposeBoolean">
            <summary>Sets the shim of InternalTraceWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInternalTraceWriter.AllInstances.EncodingGet">
            <summary>Sets the shim of InternalTraceWriter.get_Encoding()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInternalTraceWriter.AllInstances.Flush">
            <summary>Sets the shim of InternalTraceWriter.Flush()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInternalTraceWriter.AllInstances.WriteChar">
            <summary>Sets the shim of InternalTraceWriter.Write(Char value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInternalTraceWriter.AllInstances.WriteLineString">
            <summary>Sets the shim of InternalTraceWriter.WriteLine(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInternalTraceWriter.AllInstances.WriteString">
            <summary>Sets the shim of InternalTraceWriter.Write(String value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimInvalidDataSourceException">
            <summary>Shim type of NUnit.Framework.Internal.InvalidDataSourceException</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimInvalidDataSourceException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimInvalidDataSourceException.#ctor(NUnit.Framework.Internal.InvalidDataSourceException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimInvalidDataSourceException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimInvalidDataSourceException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimInvalidDataSourceException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInvalidDataSourceException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInvalidDataSourceException.Constructor">
            <summary>Sets the shim of InvalidDataSourceException.InvalidDataSourceException()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInvalidDataSourceException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of InvalidDataSourceException.InvalidDataSourceException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInvalidDataSourceException.ConstructorString">
            <summary>Sets the shim of InvalidDataSourceException.InvalidDataSourceException(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInvalidDataSourceException.ConstructorStringException">
            <summary>Sets the shim of InvalidDataSourceException.InvalidDataSourceException(String message, Exception inner)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimInvalidDataSourceException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimInvalidTestFixtureException">
            <summary>Shim type of NUnit.Framework.Internal.InvalidTestFixtureException</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimInvalidTestFixtureException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimInvalidTestFixtureException.#ctor(NUnit.Framework.Internal.InvalidTestFixtureException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimInvalidTestFixtureException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimInvalidTestFixtureException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimInvalidTestFixtureException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInvalidTestFixtureException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInvalidTestFixtureException.Constructor">
            <summary>Sets the shim of InvalidTestFixtureException.InvalidTestFixtureException()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInvalidTestFixtureException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of InvalidTestFixtureException.InvalidTestFixtureException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInvalidTestFixtureException.ConstructorString">
            <summary>Sets the shim of InvalidTestFixtureException.InvalidTestFixtureException(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimInvalidTestFixtureException.ConstructorStringException">
            <summary>Sets the shim of InvalidTestFixtureException.InvalidTestFixtureException(String message, Exception inner)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimInvalidTestFixtureException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimLogger">
            <summary>Shim type of NUnit.Framework.Internal.Logger</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimLogger.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimLogger.#ctor(NUnit.Framework.Internal.Logger)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimLogger.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimLogger.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimLogger.Bind(NUnit.Framework.Internal.ILogger)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.ConstructorStringInternalTraceLevelTextWriter">
            <summary>Sets the shim of Logger.Logger(String name, InternalTraceLevel level, TextWriter writer)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.DebugString">
            <summary>Sets the shim of Logger.Debug(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.DebugStringObjectArray">
            <summary>Sets the shim of Logger.Debug(String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.ErrorString">
            <summary>Sets the shim of Logger.Error(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.ErrorStringObjectArray">
            <summary>Sets the shim of Logger.Error(String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.InfoString">
            <summary>Sets the shim of Logger.Info(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.InfoStringObjectArray">
            <summary>Sets the shim of Logger.Info(String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.LogInternalTraceLevelString">
            <summary>Sets the shim of Logger.Log(InternalTraceLevel level, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.LogInternalTraceLevelStringObjectArray">
            <summary>Sets the shim of Logger.Log(InternalTraceLevel level, String format, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.StaticConstructor">
            <summary>Sets the shim of Logger.Logger()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.WarningString">
            <summary>Sets the shim of Logger.Warning(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.WarningStringObjectArray">
            <summary>Sets the shim of Logger.Warning(String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.WriteLogInternalTraceLevelString">
            <summary>Sets the shim of Logger.WriteLog(InternalTraceLevel level, String message)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimLogger.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.AllInstances.DebugString">
            <summary>Sets the shim of Logger.Debug(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.AllInstances.DebugStringObjectArray">
            <summary>Sets the shim of Logger.Debug(String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.AllInstances.ErrorString">
            <summary>Sets the shim of Logger.Error(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.AllInstances.ErrorStringObjectArray">
            <summary>Sets the shim of Logger.Error(String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.AllInstances.InfoString">
            <summary>Sets the shim of Logger.Info(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.AllInstances.InfoStringObjectArray">
            <summary>Sets the shim of Logger.Info(String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.AllInstances.LogInternalTraceLevelString">
            <summary>Sets the shim of Logger.Log(InternalTraceLevel level, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.AllInstances.LogInternalTraceLevelStringObjectArray">
            <summary>Sets the shim of Logger.Log(InternalTraceLevel level, String format, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.AllInstances.WarningString">
            <summary>Sets the shim of Logger.Warning(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.AllInstances.WarningStringObjectArray">
            <summary>Sets the shim of Logger.Warning(String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimLogger.AllInstances.WriteLogInternalTraceLevelString">
            <summary>Sets the shim of Logger.WriteLog(InternalTraceLevel level, String message)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimMethodWrapper">
            <summary>Shim type of NUnit.Framework.Internal.MethodWrapper</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.#ctor(NUnit.Framework.Internal.MethodWrapper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.Bind(NUnit.Framework.Interfaces.IMethodInfo)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.Bind(NUnit.Framework.Interfaces.IReflectionInfo)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.GetCustomAttributesOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0[]})">
            <summary>Sets the shim of MethodWrapper.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.IsDefinedOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,System.Boolean})">
            <summary>Sets the shim of MethodWrapper.IsDefined(Boolean inherit)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.ConstructorTypeMethodInfo">
            <summary>Sets the shim of MethodWrapper.MethodWrapper(Type type, MethodInfo method)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.ConstructorTypeString">
            <summary>Sets the shim of MethodWrapper.MethodWrapper(Type type, String methodName)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.ContainsGenericParametersGet">
            <summary>Sets the shim of MethodWrapper.get_ContainsGenericParameters()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.GetGenericArguments">
            <summary>Sets the shim of MethodWrapper.GetGenericArguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.GetParameters">
            <summary>Sets the shim of MethodWrapper.GetParameters()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.InvokeObjectObjectArray">
            <summary>Sets the shim of MethodWrapper.Invoke(Object fixture, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.IsAbstractGet">
            <summary>Sets the shim of MethodWrapper.get_IsAbstract()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.IsGenericMethodDefinitionGet">
            <summary>Sets the shim of MethodWrapper.get_IsGenericMethodDefinition()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.IsGenericMethodGet">
            <summary>Sets the shim of MethodWrapper.get_IsGenericMethod()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.IsPublicGet">
            <summary>Sets the shim of MethodWrapper.get_IsPublic()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.MakeGenericMethodTypeArray">
            <summary>Sets the shim of MethodWrapper.MakeGenericMethod(Type[] typeArguments)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.MethodInfoGet">
            <summary>Sets the shim of MethodWrapper.get_MethodInfo()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.MethodInfoSetMethodInfo">
            <summary>Sets the shim of MethodWrapper.set_MethodInfo(MethodInfo value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.NameGet">
            <summary>Sets the shim of MethodWrapper.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.ReturnTypeGet">
            <summary>Sets the shim of MethodWrapper.get_ReturnType()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.ToString">
            <summary>Sets the shim of MethodWrapper.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.TypeInfoGet">
            <summary>Sets the shim of MethodWrapper.get_TypeInfo()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.TypeInfoSetITypeInfo">
            <summary>Sets the shim of MethodWrapper.set_TypeInfo(ITypeInfo value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.AllInstances.GetCustomAttributesOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Internal.MethodWrapper,System.Boolean,``0[]})">
            <summary>Sets the shim of MethodWrapper.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.AllInstances.IsDefinedOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Internal.MethodWrapper,System.Boolean,System.Boolean})">
            <summary>Sets the shim of MethodWrapper.IsDefined(Boolean inherit)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.AllInstances.ContainsGenericParametersGet">
            <summary>Sets the shim of MethodWrapper.get_ContainsGenericParameters()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.AllInstances.GetGenericArguments">
            <summary>Sets the shim of MethodWrapper.GetGenericArguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.AllInstances.GetParameters">
            <summary>Sets the shim of MethodWrapper.GetParameters()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.AllInstances.InvokeObjectObjectArray">
            <summary>Sets the shim of MethodWrapper.Invoke(Object fixture, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.AllInstances.IsAbstractGet">
            <summary>Sets the shim of MethodWrapper.get_IsAbstract()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.AllInstances.IsGenericMethodDefinitionGet">
            <summary>Sets the shim of MethodWrapper.get_IsGenericMethodDefinition()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.AllInstances.IsGenericMethodGet">
            <summary>Sets the shim of MethodWrapper.get_IsGenericMethod()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.AllInstances.IsPublicGet">
            <summary>Sets the shim of MethodWrapper.get_IsPublic()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.AllInstances.MakeGenericMethodTypeArray">
            <summary>Sets the shim of MethodWrapper.MakeGenericMethod(Type[] typeArguments)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.AllInstances.MethodInfoGet">
            <summary>Sets the shim of MethodWrapper.get_MethodInfo()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.AllInstances.MethodInfoSetMethodInfo">
            <summary>Sets the shim of MethodWrapper.set_MethodInfo(MethodInfo value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.AllInstances.NameGet">
            <summary>Sets the shim of MethodWrapper.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.AllInstances.ReturnTypeGet">
            <summary>Sets the shim of MethodWrapper.get_ReturnType()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.AllInstances.ToString01">
            <summary>Sets the shim of MethodWrapper.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.AllInstances.TypeInfoGet">
            <summary>Sets the shim of MethodWrapper.get_TypeInfo()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimMethodWrapper.AllInstances.TypeInfoSetITypeInfo">
            <summary>Sets the shim of MethodWrapper.set_TypeInfo(ITypeInfo value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimNUnitException">
            <summary>Shim type of NUnit.Framework.Internal.NUnitException</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimNUnitException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimNUnitException.#ctor(NUnit.Framework.Internal.NUnitException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimNUnitException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimNUnitException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimNUnitException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimNUnitException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimNUnitException.Constructor">
            <summary>Sets the shim of NUnitException.NUnitException()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimNUnitException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of NUnitException.NUnitException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimNUnitException.ConstructorString">
            <summary>Sets the shim of NUnitException.NUnitException(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimNUnitException.ConstructorStringException">
            <summary>Sets the shim of NUnitException.NUnitException(String message, Exception inner)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimNUnitException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimOSPlatform">
            <summary>Shim type of NUnit.Framework.Internal.OSPlatform</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimOSPlatform.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimOSPlatform.#ctor(NUnit.Framework.Internal.OSPlatform)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimOSPlatform.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimOSPlatform.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.CheckIfIsMacOSXPlatformID">
            <summary>Sets the shim of OSPlatform.CheckIfIsMacOSX(PlatformID platform)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.ConstructorPlatformIDVersion">
            <summary>Sets the shim of OSPlatform.OSPlatform(PlatformID platform, Version version)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.ConstructorPlatformIDVersionOSPlatformProductType">
            <summary>Sets the shim of OSPlatform.OSPlatform(PlatformID platform, Version version, ProductType product)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.CurrentPlatformGet">
            <summary>Sets the shim of OSPlatform.get_CurrentPlatform()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.GetWindows81PlusVersionVersion">
            <summary>Sets the shim of OSPlatform.GetWindows81PlusVersion(Version version)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsMacOSXGet">
            <summary>Sets the shim of OSPlatform.get_IsMacOSX()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsNT3Get">
            <summary>Sets the shim of OSPlatform.get_IsNT3()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsNT4Get">
            <summary>Sets the shim of OSPlatform.get_IsNT4()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsNT5Get">
            <summary>Sets the shim of OSPlatform.get_IsNT5()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsNT60Get">
            <summary>Sets the shim of OSPlatform.get_IsNT60()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsNT61Get">
            <summary>Sets the shim of OSPlatform.get_IsNT61()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsNT62Get">
            <summary>Sets the shim of OSPlatform.get_IsNT62()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsNT63Get">
            <summary>Sets the shim of OSPlatform.get_IsNT63()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsNT6Get">
            <summary>Sets the shim of OSPlatform.get_IsNT6()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsUnixGet">
            <summary>Sets the shim of OSPlatform.get_IsUnix()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsVistaGet">
            <summary>Sets the shim of OSPlatform.get_IsVista()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsWin2003ServerGet">
            <summary>Sets the shim of OSPlatform.get_IsWin2003Server()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsWin2008ServerGet">
            <summary>Sets the shim of OSPlatform.get_IsWin2008Server()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsWin2008ServerR1Get">
            <summary>Sets the shim of OSPlatform.get_IsWin2008ServerR1()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsWin2008ServerR2Get">
            <summary>Sets the shim of OSPlatform.get_IsWin2008ServerR2()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsWin2012ServerGet">
            <summary>Sets the shim of OSPlatform.get_IsWin2012Server()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsWin2012ServerR1Get">
            <summary>Sets the shim of OSPlatform.get_IsWin2012ServerR1()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsWin2012ServerR2Get">
            <summary>Sets the shim of OSPlatform.get_IsWin2012ServerR2()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsWin2KGet">
            <summary>Sets the shim of OSPlatform.get_IsWin2K()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsWin32NTGet">
            <summary>Sets the shim of OSPlatform.get_IsWin32NT()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsWin32SGet">
            <summary>Sets the shim of OSPlatform.get_IsWin32S()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsWin32WindowsGet">
            <summary>Sets the shim of OSPlatform.get_IsWin32Windows()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsWin95Get">
            <summary>Sets the shim of OSPlatform.get_IsWin95()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsWin98Get">
            <summary>Sets the shim of OSPlatform.get_IsWin98()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsWinCEGet">
            <summary>Sets the shim of OSPlatform.get_IsWinCE()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsWinMEGet">
            <summary>Sets the shim of OSPlatform.get_IsWinME()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsWinXPGet">
            <summary>Sets the shim of OSPlatform.get_IsWinXP()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsWindows10Get">
            <summary>Sets the shim of OSPlatform.get_IsWindows10()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsWindows7Get">
            <summary>Sets the shim of OSPlatform.get_IsWindows7()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsWindows81Get">
            <summary>Sets the shim of OSPlatform.get_IsWindows81()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsWindows8Get">
            <summary>Sets the shim of OSPlatform.get_IsWindows8()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsWindowsGet">
            <summary>Sets the shim of OSPlatform.get_IsWindows()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsWindowsServer10Get">
            <summary>Sets the shim of OSPlatform.get_IsWindowsServer10()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.IsXboxGet">
            <summary>Sets the shim of OSPlatform.get_IsXbox()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.PlatformGet">
            <summary>Sets the shim of OSPlatform.get_Platform()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.ProductGet">
            <summary>Sets the shim of OSPlatform.get_Product()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.StaticConstructor">
            <summary>Sets the shim of OSPlatform.OSPlatform()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.VersionGet">
            <summary>Sets the shim of OSPlatform.get_Version()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsMacOSXGet">
            <summary>Sets the shim of OSPlatform.get_IsMacOSX()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsNT3Get">
            <summary>Sets the shim of OSPlatform.get_IsNT3()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsNT4Get">
            <summary>Sets the shim of OSPlatform.get_IsNT4()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsNT5Get">
            <summary>Sets the shim of OSPlatform.get_IsNT5()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsNT60Get">
            <summary>Sets the shim of OSPlatform.get_IsNT60()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsNT61Get">
            <summary>Sets the shim of OSPlatform.get_IsNT61()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsNT62Get">
            <summary>Sets the shim of OSPlatform.get_IsNT62()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsNT63Get">
            <summary>Sets the shim of OSPlatform.get_IsNT63()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsNT6Get">
            <summary>Sets the shim of OSPlatform.get_IsNT6()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsUnixGet">
            <summary>Sets the shim of OSPlatform.get_IsUnix()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsVistaGet">
            <summary>Sets the shim of OSPlatform.get_IsVista()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsWin2003ServerGet">
            <summary>Sets the shim of OSPlatform.get_IsWin2003Server()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsWin2008ServerGet">
            <summary>Sets the shim of OSPlatform.get_IsWin2008Server()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsWin2008ServerR1Get">
            <summary>Sets the shim of OSPlatform.get_IsWin2008ServerR1()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsWin2008ServerR2Get">
            <summary>Sets the shim of OSPlatform.get_IsWin2008ServerR2()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsWin2012ServerGet">
            <summary>Sets the shim of OSPlatform.get_IsWin2012Server()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsWin2012ServerR1Get">
            <summary>Sets the shim of OSPlatform.get_IsWin2012ServerR1()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsWin2012ServerR2Get">
            <summary>Sets the shim of OSPlatform.get_IsWin2012ServerR2()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsWin2KGet">
            <summary>Sets the shim of OSPlatform.get_IsWin2K()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsWin32NTGet">
            <summary>Sets the shim of OSPlatform.get_IsWin32NT()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsWin32SGet">
            <summary>Sets the shim of OSPlatform.get_IsWin32S()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsWin32WindowsGet">
            <summary>Sets the shim of OSPlatform.get_IsWin32Windows()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsWin95Get">
            <summary>Sets the shim of OSPlatform.get_IsWin95()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsWin98Get">
            <summary>Sets the shim of OSPlatform.get_IsWin98()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsWinCEGet">
            <summary>Sets the shim of OSPlatform.get_IsWinCE()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsWinMEGet">
            <summary>Sets the shim of OSPlatform.get_IsWinME()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsWinXPGet">
            <summary>Sets the shim of OSPlatform.get_IsWinXP()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsWindows10Get">
            <summary>Sets the shim of OSPlatform.get_IsWindows10()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsWindows7Get">
            <summary>Sets the shim of OSPlatform.get_IsWindows7()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsWindows81Get">
            <summary>Sets the shim of OSPlatform.get_IsWindows81()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsWindows8Get">
            <summary>Sets the shim of OSPlatform.get_IsWindows8()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsWindowsGet">
            <summary>Sets the shim of OSPlatform.get_IsWindows()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsWindowsServer10Get">
            <summary>Sets the shim of OSPlatform.get_IsWindowsServer10()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.IsXboxGet">
            <summary>Sets the shim of OSPlatform.get_IsXbox()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.PlatformGet">
            <summary>Sets the shim of OSPlatform.get_Platform()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.ProductGet">
            <summary>Sets the shim of OSPlatform.get_Product()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimOSPlatform.AllInstances.VersionGet">
            <summary>Sets the shim of OSPlatform.get_Version()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimParameterWrapper">
            <summary>Shim type of NUnit.Framework.Internal.ParameterWrapper</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.#ctor(NUnit.Framework.Internal.ParameterWrapper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.Bind(NUnit.Framework.Interfaces.IParameterInfo)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.Bind(NUnit.Framework.Interfaces.IReflectionInfo)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.GetCustomAttributesOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0[]})">
            <summary>Sets the shim of ParameterWrapper.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.IsDefinedOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,System.Boolean})">
            <summary>Sets the shim of ParameterWrapper.IsDefined(Boolean inherit)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.ConstructorIMethodInfoParameterInfo">
            <summary>Sets the shim of ParameterWrapper.ParameterWrapper(IMethodInfo method, ParameterInfo parameterInfo)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.IsOptionalGet">
            <summary>Sets the shim of ParameterWrapper.get_IsOptional()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.MethodGet">
            <summary>Sets the shim of ParameterWrapper.get_Method()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.MethodSetIMethodInfo">
            <summary>Sets the shim of ParameterWrapper.set_Method(IMethodInfo value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.ParameterInfoGet">
            <summary>Sets the shim of ParameterWrapper.get_ParameterInfo()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.ParameterInfoSetParameterInfo">
            <summary>Sets the shim of ParameterWrapper.set_ParameterInfo(ParameterInfo value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.ParameterTypeGet">
            <summary>Sets the shim of ParameterWrapper.get_ParameterType()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.AllInstances.GetCustomAttributesOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Internal.ParameterWrapper,System.Boolean,``0[]})">
            <summary>Sets the shim of ParameterWrapper.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.AllInstances.IsDefinedOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Internal.ParameterWrapper,System.Boolean,System.Boolean})">
            <summary>Sets the shim of ParameterWrapper.IsDefined(Boolean inherit)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.AllInstances.IsOptionalGet">
            <summary>Sets the shim of ParameterWrapper.get_IsOptional()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.AllInstances.MethodGet">
            <summary>Sets the shim of ParameterWrapper.get_Method()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.AllInstances.MethodSetIMethodInfo">
            <summary>Sets the shim of ParameterWrapper.set_Method(IMethodInfo value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.AllInstances.ParameterInfoGet">
            <summary>Sets the shim of ParameterWrapper.get_ParameterInfo()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.AllInstances.ParameterInfoSetParameterInfo">
            <summary>Sets the shim of ParameterWrapper.set_ParameterInfo(ParameterInfo value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimParameterWrapper.AllInstances.ParameterTypeGet">
            <summary>Sets the shim of ParameterWrapper.get_ParameterType()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimParameterizedFixtureSuite">
            <summary>Shim type of NUnit.Framework.Internal.ParameterizedFixtureSuite</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterizedFixtureSuite.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterizedFixtureSuite.#ctor(NUnit.Framework.Internal.ParameterizedFixtureSuite)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterizedFixtureSuite.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterizedFixtureSuite.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterizedFixtureSuite.Bind(System.IComparable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterizedFixtureSuite.Bind(NUnit.Framework.Interfaces.ITest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterizedFixtureSuite.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimParameterizedFixtureSuite.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimParameterizedFixtureSuite.ConstructorITypeInfo">
            <summary>Sets the shim of ParameterizedFixtureSuite.ParameterizedFixtureSuite(ITypeInfo typeInfo)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimParameterizedFixtureSuite.TestTypeGet">
            <summary>Sets the shim of ParameterizedFixtureSuite.get_TestType()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimParameterizedFixtureSuite.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimParameterizedFixtureSuite.AllInstances.TestTypeGet">
            <summary>Sets the shim of ParameterizedFixtureSuite.get_TestType()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimParameterizedMethodSuite">
            <summary>Shim type of NUnit.Framework.Internal.ParameterizedMethodSuite</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterizedMethodSuite.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterizedMethodSuite.#ctor(NUnit.Framework.Internal.ParameterizedMethodSuite)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterizedMethodSuite.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterizedMethodSuite.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterizedMethodSuite.Bind(System.IComparable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterizedMethodSuite.Bind(NUnit.Framework.Interfaces.ITest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimParameterizedMethodSuite.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimParameterizedMethodSuite.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimParameterizedMethodSuite.ConstructorIMethodInfo">
            <summary>Sets the shim of ParameterizedMethodSuite.ParameterizedMethodSuite(IMethodInfo method)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimParameterizedMethodSuite.TestTypeGet">
            <summary>Sets the shim of ParameterizedMethodSuite.get_TestType()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimParameterizedMethodSuite.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimParameterizedMethodSuite.AllInstances.TestTypeGet">
            <summary>Sets the shim of ParameterizedMethodSuite.get_TestType()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimPlatformHelper">
            <summary>Shim type of NUnit.Framework.Internal.PlatformHelper</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.#ctor(NUnit.Framework.Internal.PlatformHelper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.Constructor">
            <summary>Sets the shim of PlatformHelper.PlatformHelper()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.ConstructorOSPlatformRuntimeFramework">
            <summary>Sets the shim of PlatformHelper.PlatformHelper(OSPlatform os, RuntimeFramework rt)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.IsPlatformSupportedPlatformAttribute">
            <summary>Sets the shim of PlatformHelper.IsPlatformSupported(PlatformAttribute platformAttribute)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.IsPlatformSupportedString">
            <summary>Sets the shim of PlatformHelper.IsPlatformSupported(String platform)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.IsPlatformSupportedStringArray">
            <summary>Sets the shim of PlatformHelper.IsPlatformSupported(String[] platforms)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.IsPlatformSupportedStringString">
            <summary>Sets the shim of PlatformHelper.IsPlatformSupported(String include, String exclude)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.IsPlatformSupportedTestCaseAttribute">
            <summary>Sets the shim of PlatformHelper.IsPlatformSupported(TestCaseAttribute testCaseAttribute)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.IsRuntimeSupportedRuntimeTypeString">
            <summary>Sets the shim of PlatformHelper.IsRuntimeSupported(RuntimeType runtime, String versionSpecification)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.IsRuntimeSupportedString">
            <summary>Sets the shim of PlatformHelper.IsRuntimeSupported(String platformName)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.ReasonGet">
            <summary>Sets the shim of PlatformHelper.get_Reason()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.StaticConstructor">
            <summary>Sets the shim of PlatformHelper.PlatformHelper()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.AllInstances.IsPlatformSupportedPlatformAttribute">
            <summary>Sets the shim of PlatformHelper.IsPlatformSupported(PlatformAttribute platformAttribute)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.AllInstances.IsPlatformSupportedString">
            <summary>Sets the shim of PlatformHelper.IsPlatformSupported(String platform)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.AllInstances.IsPlatformSupportedStringArray">
            <summary>Sets the shim of PlatformHelper.IsPlatformSupported(String[] platforms)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.AllInstances.IsPlatformSupportedStringString">
            <summary>Sets the shim of PlatformHelper.IsPlatformSupported(String include, String exclude)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.AllInstances.IsPlatformSupportedTestCaseAttribute">
            <summary>Sets the shim of PlatformHelper.IsPlatformSupported(TestCaseAttribute testCaseAttribute)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.AllInstances.IsRuntimeSupportedRuntimeTypeString">
            <summary>Sets the shim of PlatformHelper.IsRuntimeSupported(RuntimeType runtime, String versionSpecification)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.AllInstances.IsRuntimeSupportedString">
            <summary>Sets the shim of PlatformHelper.IsRuntimeSupported(String platformName)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPlatformHelper.AllInstances.ReasonGet">
            <summary>Sets the shim of PlatformHelper.get_Reason()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimPropertyBag">
            <summary>Shim type of NUnit.Framework.Internal.PropertyBag</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimPropertyBag.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimPropertyBag.#ctor(NUnit.Framework.Internal.PropertyBag)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimPropertyBag.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimPropertyBag.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimPropertyBag.Bind(NUnit.Framework.Interfaces.IPropertyBag)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimPropertyBag.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPropertyBag.AddStringObject">
            <summary>Sets the shim of PropertyBag.Add(String key, Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPropertyBag.AddToXmlTNodeBoolean">
            <summary>Sets the shim of PropertyBag.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPropertyBag.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPropertyBag.Constructor">
            <summary>Sets the shim of PropertyBag.PropertyBag()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPropertyBag.ContainsKeyString">
            <summary>Sets the shim of PropertyBag.ContainsKey(String key)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPropertyBag.GetString">
            <summary>Sets the shim of PropertyBag.Get(String key)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPropertyBag.ItemGetString">
            <summary>Sets the shim of PropertyBag.get_Item(String key)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPropertyBag.ItemSetStringIList">
            <summary>Sets the shim of PropertyBag.set_Item(String key, IList value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPropertyBag.KeysGet">
            <summary>Sets the shim of PropertyBag.get_Keys()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPropertyBag.SetStringObject">
            <summary>Sets the shim of PropertyBag.Set(String key, Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPropertyBag.ToXmlBoolean">
            <summary>Sets the shim of PropertyBag.ToXml(Boolean recursive)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimPropertyBag.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPropertyBag.AllInstances.AddStringObject">
            <summary>Sets the shim of PropertyBag.Add(String key, Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPropertyBag.AllInstances.AddToXmlTNodeBoolean">
            <summary>Sets the shim of PropertyBag.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPropertyBag.AllInstances.ContainsKeyString">
            <summary>Sets the shim of PropertyBag.ContainsKey(String key)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPropertyBag.AllInstances.GetString">
            <summary>Sets the shim of PropertyBag.Get(String key)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPropertyBag.AllInstances.ItemGetString">
            <summary>Sets the shim of PropertyBag.get_Item(String key)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPropertyBag.AllInstances.ItemSetStringIList">
            <summary>Sets the shim of PropertyBag.set_Item(String key, IList value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPropertyBag.AllInstances.KeysGet">
            <summary>Sets the shim of PropertyBag.get_Keys()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPropertyBag.AllInstances.SetStringObject">
            <summary>Sets the shim of PropertyBag.Set(String key, Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPropertyBag.AllInstances.ToXmlBoolean">
            <summary>Sets the shim of PropertyBag.ToXml(Boolean recursive)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimPropertyNames">
            <summary>Shim type of NUnit.Framework.Internal.PropertyNames</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimPropertyNames.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimPropertyNames.#ctor(NUnit.Framework.Internal.PropertyNames)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimPropertyNames.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimPropertyNames.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPropertyNames.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimPropertyNames.Constructor">
            <summary>Sets the shim of PropertyNames.PropertyNames()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimPropertyNames.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimRandomizer">
            <summary>Shim type of NUnit.Framework.Internal.Randomizer</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimRandomizer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimRandomizer.#ctor(NUnit.Framework.Internal.Randomizer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimRandomizer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimRandomizer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextEnumOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of Randomizer.NextEnum()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.Constructor">
            <summary>Sets the shim of Randomizer.Randomizer()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.ConstructorInt32">
            <summary>Sets the shim of Randomizer.Randomizer(Int32 seed)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.CreateRandomizer">
            <summary>Sets the shim of Randomizer.CreateRandomizer()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.GetRandomizerMemberInfo">
            <summary>Sets the shim of Randomizer.GetRandomizer(MemberInfo member)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.GetRandomizerParameterInfo">
            <summary>Sets the shim of Randomizer.GetRandomizer(ParameterInfo parameter)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.GetString">
            <summary>Sets the shim of Randomizer.GetString()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.GetStringInt32">
            <summary>Sets the shim of Randomizer.GetString(Int32 outputLength)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.GetStringInt32String">
            <summary>Sets the shim of Randomizer.GetString(Int32 outputLength, String allowedChars)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.InitialSeedGet">
            <summary>Sets the shim of Randomizer.get_InitialSeed()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.InitialSeedSetInt32">
            <summary>Sets the shim of Randomizer.set_InitialSeed(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextBool">
            <summary>Sets the shim of Randomizer.NextBool()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextBoolDouble">
            <summary>Sets the shim of Randomizer.NextBool(Double probability)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextByte">
            <summary>Sets the shim of Randomizer.NextByte()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextByteByte">
            <summary>Sets the shim of Randomizer.NextByte(Byte max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextByteByteByte">
            <summary>Sets the shim of Randomizer.NextByte(Byte min, Byte max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextDecimal">
            <summary>Sets the shim of Randomizer.NextDecimal()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextDecimalDecimal">
            <summary>Sets the shim of Randomizer.NextDecimal(Decimal max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextDecimalDecimalDecimal">
            <summary>Sets the shim of Randomizer.NextDecimal(Decimal min, Decimal max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextDoubleDouble">
            <summary>Sets the shim of Randomizer.NextDouble(Double max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextDoubleDoubleDouble">
            <summary>Sets the shim of Randomizer.NextDouble(Double min, Double max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextEnumType">
            <summary>Sets the shim of Randomizer.NextEnum(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextFloat">
            <summary>Sets the shim of Randomizer.NextFloat()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextFloatSingle">
            <summary>Sets the shim of Randomizer.NextFloat(Single max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextFloatSingleSingle">
            <summary>Sets the shim of Randomizer.NextFloat(Single min, Single max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextLong">
            <summary>Sets the shim of Randomizer.NextLong()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextLongInt64">
            <summary>Sets the shim of Randomizer.NextLong(Int64 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextLongInt64Int64">
            <summary>Sets the shim of Randomizer.NextLong(Int64 min, Int64 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextSByte">
            <summary>Sets the shim of Randomizer.NextSByte()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextSByteSByte">
            <summary>Sets the shim of Randomizer.NextSByte(SByte max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextSByteSByteSByte">
            <summary>Sets the shim of Randomizer.NextSByte(SByte min, SByte max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextShort">
            <summary>Sets the shim of Randomizer.NextShort()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextShortInt16">
            <summary>Sets the shim of Randomizer.NextShort(Int16 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextShortInt16Int16">
            <summary>Sets the shim of Randomizer.NextShort(Int16 min, Int16 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextUInt">
            <summary>Sets the shim of Randomizer.NextUInt()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextUIntUInt32">
            <summary>Sets the shim of Randomizer.NextUInt(UInt32 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextUIntUInt32UInt32">
            <summary>Sets the shim of Randomizer.NextUInt(UInt32 min, UInt32 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextULong">
            <summary>Sets the shim of Randomizer.NextULong()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextULongUInt64">
            <summary>Sets the shim of Randomizer.NextULong(UInt64 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextULongUInt64UInt64">
            <summary>Sets the shim of Randomizer.NextULong(UInt64 min, UInt64 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextUShort">
            <summary>Sets the shim of Randomizer.NextUShort()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextUShortUInt16">
            <summary>Sets the shim of Randomizer.NextUShort(UInt16 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.NextUShortUInt16UInt16">
            <summary>Sets the shim of Randomizer.NextUShort(UInt16 min, UInt16 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.RawDecimal">
            <summary>Sets the shim of Randomizer.RawDecimal()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.RawLong">
            <summary>Sets the shim of Randomizer.RawLong()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.RawUInt">
            <summary>Sets the shim of Randomizer.RawUInt()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.RawULong">
            <summary>Sets the shim of Randomizer.RawULong()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.RawUShort">
            <summary>Sets the shim of Randomizer.RawUShort()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.StaticConstructor">
            <summary>Sets the shim of Randomizer.Randomizer()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextEnumOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Internal.Randomizer,``0})">
            <summary>Sets the shim of Randomizer.NextEnum()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.GetString">
            <summary>Sets the shim of Randomizer.GetString()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.GetStringInt32">
            <summary>Sets the shim of Randomizer.GetString(Int32 outputLength)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.GetStringInt32String">
            <summary>Sets the shim of Randomizer.GetString(Int32 outputLength, String allowedChars)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextBool">
            <summary>Sets the shim of Randomizer.NextBool()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextBoolDouble">
            <summary>Sets the shim of Randomizer.NextBool(Double probability)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextByte">
            <summary>Sets the shim of Randomizer.NextByte()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextByteByte">
            <summary>Sets the shim of Randomizer.NextByte(Byte max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextByteByteByte">
            <summary>Sets the shim of Randomizer.NextByte(Byte min, Byte max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextDecimal">
            <summary>Sets the shim of Randomizer.NextDecimal()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextDecimalDecimal">
            <summary>Sets the shim of Randomizer.NextDecimal(Decimal max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextDecimalDecimalDecimal">
            <summary>Sets the shim of Randomizer.NextDecimal(Decimal min, Decimal max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextDoubleDouble">
            <summary>Sets the shim of Randomizer.NextDouble(Double max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextDoubleDoubleDouble">
            <summary>Sets the shim of Randomizer.NextDouble(Double min, Double max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextEnumType">
            <summary>Sets the shim of Randomizer.NextEnum(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextFloat">
            <summary>Sets the shim of Randomizer.NextFloat()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextFloatSingle">
            <summary>Sets the shim of Randomizer.NextFloat(Single max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextFloatSingleSingle">
            <summary>Sets the shim of Randomizer.NextFloat(Single min, Single max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextLong">
            <summary>Sets the shim of Randomizer.NextLong()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextLongInt64">
            <summary>Sets the shim of Randomizer.NextLong(Int64 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextLongInt64Int64">
            <summary>Sets the shim of Randomizer.NextLong(Int64 min, Int64 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextSByte">
            <summary>Sets the shim of Randomizer.NextSByte()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextSByteSByte">
            <summary>Sets the shim of Randomizer.NextSByte(SByte max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextSByteSByteSByte">
            <summary>Sets the shim of Randomizer.NextSByte(SByte min, SByte max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextShort">
            <summary>Sets the shim of Randomizer.NextShort()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextShortInt16">
            <summary>Sets the shim of Randomizer.NextShort(Int16 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextShortInt16Int16">
            <summary>Sets the shim of Randomizer.NextShort(Int16 min, Int16 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextUInt">
            <summary>Sets the shim of Randomizer.NextUInt()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextUIntUInt32">
            <summary>Sets the shim of Randomizer.NextUInt(UInt32 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextUIntUInt32UInt32">
            <summary>Sets the shim of Randomizer.NextUInt(UInt32 min, UInt32 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextULong">
            <summary>Sets the shim of Randomizer.NextULong()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextULongUInt64">
            <summary>Sets the shim of Randomizer.NextULong(UInt64 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextULongUInt64UInt64">
            <summary>Sets the shim of Randomizer.NextULong(UInt64 min, UInt64 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextUShort">
            <summary>Sets the shim of Randomizer.NextUShort()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextUShortUInt16">
            <summary>Sets the shim of Randomizer.NextUShort(UInt16 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.NextUShortUInt16UInt16">
            <summary>Sets the shim of Randomizer.NextUShort(UInt16 min, UInt16 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.RawDecimal">
            <summary>Sets the shim of Randomizer.RawDecimal()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.RawLong">
            <summary>Sets the shim of Randomizer.RawLong()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.RawUInt">
            <summary>Sets the shim of Randomizer.RawUInt()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.RawULong">
            <summary>Sets the shim of Randomizer.RawULong()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRandomizer.AllInstances.RawUShort">
            <summary>Sets the shim of Randomizer.RawUShort()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimReflect">
            <summary>Shim type of NUnit.Framework.Internal.Reflect</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimReflect.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimReflect.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimReflect.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimReflect.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimReflect.ConstructType">
            <summary>Sets the shim of Reflect.Construct(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimReflect.ConstructTypeObjectArray">
            <summary>Sets the shim of Reflect.Construct(Type type, Object[] arguments)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimReflect.GetMethodsWithAttributeTypeTypeBoolean">
            <summary>Sets the shim of Reflect.GetMethodsWithAttribute(Type fixtureType, Type attributeType, Boolean inherit)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimReflect.GetTypeArrayObjectArray">
            <summary>Sets the shim of Reflect.GetTypeArray(Object[] objects)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimReflect.HasMethodWithAttributeTypeType">
            <summary>Sets the shim of Reflect.HasMethodWithAttribute(Type fixtureType, Type attributeType)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimReflect.InvokeMethodMethodInfoObject">
            <summary>Sets the shim of Reflect.InvokeMethod(MethodInfo method, Object fixture)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimReflect.InvokeMethodMethodInfoObjectObjectArray">
            <summary>Sets the shim of Reflect.InvokeMethod(MethodInfo method, Object fixture, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimReflect.StaticConstructor">
            <summary>Sets the shim of Reflect.Reflect()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework">
            <summary>Shim type of NUnit.Framework.Internal.RuntimeFramework</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.#ctor(NUnit.Framework.Internal.RuntimeFramework)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.AllowAnyVersionGet">
            <summary>Sets the shim of RuntimeFramework.get_AllowAnyVersion()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.ClrVersionGet">
            <summary>Sets the shim of RuntimeFramework.get_ClrVersion()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.ClrVersionSetVersion">
            <summary>Sets the shim of RuntimeFramework.set_ClrVersion(Version value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.ConstructorRuntimeTypeVersion">
            <summary>Sets the shim of RuntimeFramework.RuntimeFramework(RuntimeType runtime, Version version)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.CurrentFrameworkGet">
            <summary>Sets the shim of RuntimeFramework.get_CurrentFramework()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.DisplayNameGet">
            <summary>Sets the shim of RuntimeFramework.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.DisplayNameSetString">
            <summary>Sets the shim of RuntimeFramework.set_DisplayName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.FrameworkVersionGet">
            <summary>Sets the shim of RuntimeFramework.get_FrameworkVersion()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.FrameworkVersionSetVersion">
            <summary>Sets the shim of RuntimeFramework.set_FrameworkVersion(Version value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.GetDefaultDisplayNameRuntimeTypeVersion">
            <summary>Sets the shim of RuntimeFramework.GetDefaultDisplayName(RuntimeType runtime, Version version)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.InitFromClrVersionVersion">
            <summary>Sets the shim of RuntimeFramework.InitFromClrVersion(Version version)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.InitFromFrameworkVersionVersion">
            <summary>Sets the shim of RuntimeFramework.InitFromFrameworkVersion(Version version)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.IsRuntimeTypeNameString">
            <summary>Sets the shim of RuntimeFramework.IsRuntimeTypeName(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.ParseString">
            <summary>Sets the shim of RuntimeFramework.Parse(String s)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.RuntimeGet">
            <summary>Sets the shim of RuntimeFramework.get_Runtime()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.RuntimeSetRuntimeType">
            <summary>Sets the shim of RuntimeFramework.set_Runtime(RuntimeType value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.StaticConstructor">
            <summary>Sets the shim of RuntimeFramework.RuntimeFramework()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.SupportsRuntimeFramework">
            <summary>Sets the shim of RuntimeFramework.Supports(RuntimeFramework target)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.ThrowInvalidFrameworkVersionVersion">
            <summary>Sets the shim of RuntimeFramework.ThrowInvalidFrameworkVersion(Version version)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.ToString">
            <summary>Sets the shim of RuntimeFramework.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.VersionsMatchVersionVersion">
            <summary>Sets the shim of RuntimeFramework.VersionsMatch(Version v1, Version v2)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.AllInstances.AllowAnyVersionGet">
            <summary>Sets the shim of RuntimeFramework.get_AllowAnyVersion()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.AllInstances.ClrVersionGet">
            <summary>Sets the shim of RuntimeFramework.get_ClrVersion()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.AllInstances.ClrVersionSetVersion">
            <summary>Sets the shim of RuntimeFramework.set_ClrVersion(Version value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.AllInstances.DisplayNameGet">
            <summary>Sets the shim of RuntimeFramework.get_DisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.AllInstances.DisplayNameSetString">
            <summary>Sets the shim of RuntimeFramework.set_DisplayName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.AllInstances.FrameworkVersionGet">
            <summary>Sets the shim of RuntimeFramework.get_FrameworkVersion()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.AllInstances.FrameworkVersionSetVersion">
            <summary>Sets the shim of RuntimeFramework.set_FrameworkVersion(Version value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.AllInstances.InitFromClrVersionVersion">
            <summary>Sets the shim of RuntimeFramework.InitFromClrVersion(Version version)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.AllInstances.InitFromFrameworkVersionVersion">
            <summary>Sets the shim of RuntimeFramework.InitFromFrameworkVersion(Version version)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.AllInstances.RuntimeGet">
            <summary>Sets the shim of RuntimeFramework.get_Runtime()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.AllInstances.RuntimeSetRuntimeType">
            <summary>Sets the shim of RuntimeFramework.set_Runtime(RuntimeType value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.AllInstances.SupportsRuntimeFramework">
            <summary>Sets the shim of RuntimeFramework.Supports(RuntimeFramework target)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimRuntimeFramework.AllInstances.ToString01">
            <summary>Sets the shim of RuntimeFramework.ToString()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimSetUpFixture">
            <summary>Shim type of NUnit.Framework.Internal.SetUpFixture</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimSetUpFixture.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimSetUpFixture.#ctor(NUnit.Framework.Internal.SetUpFixture)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimSetUpFixture.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimSetUpFixture.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimSetUpFixture.Bind(System.IComparable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimSetUpFixture.Bind(NUnit.Framework.Interfaces.ITest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimSetUpFixture.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimSetUpFixture.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimSetUpFixture.ConstructorITypeInfo">
            <summary>Sets the shim of SetUpFixture.SetUpFixture(ITypeInfo type)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimSetUpFixture.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimStackFilter">
            <summary>Shim type of NUnit.Framework.Internal.StackFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimStackFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimStackFilter.#ctor(NUnit.Framework.Internal.StackFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimStackFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimStackFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimStackFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimStackFilter.Constructor">
            <summary>Sets the shim of StackFilter.StackFilter()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimStackFilter.ConstructorString">
            <summary>Sets the shim of StackFilter.StackFilter(String topOfStackPattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimStackFilter.ConstructorStringString">
            <summary>Sets the shim of StackFilter.StackFilter(String topOfStackPattern, String bottomOfStackPattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimStackFilter.FilterString">
            <summary>Sets the shim of StackFilter.Filter(String rawTrace)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimStackFilter.StaticConstructor">
            <summary>Sets the shim of StackFilter.StackFilter()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimStackFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimStackFilter.AllInstances.FilterString">
            <summary>Sets the shim of StackFilter.Filter(String rawTrace)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimStringUtil">
            <summary>Shim type of NUnit.Framework.Internal.StringUtil</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimStringUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimStringUtil.#ctor(NUnit.Framework.Internal.StringUtil)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimStringUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimStringUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimStringUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimStringUtil.CompareStringStringBoolean">
            <summary>Sets the shim of StringUtil.Compare(String strA, String strB, Boolean ignoreCase)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimStringUtil.Constructor">
            <summary>Sets the shim of StringUtil.StringUtil()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimStringUtil.StringsEqualStringStringBoolean">
            <summary>Sets the shim of StringUtil.StringsEqual(String strA, String strB, Boolean ignoreCase)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimStringUtil.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTest">
            <summary>Shim type of NUnit.Framework.Internal.Test</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTest.#ctor(NUnit.Framework.Internal.Test)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTest.Bind(System.IComparable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTest.Bind(NUnit.Framework.Interfaces.ITest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTest.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTest.GetCustomAttributesOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0[]})">
            <summary>Sets the shim of Test.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.ActionsGet">
            <summary>Sets the shim of Test.get_Actions()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.ApplyAttributesToTestICustomAttributeProvider">
            <summary>Sets the shim of Test.ApplyAttributesToTest(ICustomAttributeProvider provider)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.ClassNameGet">
            <summary>Sets the shim of Test.get_ClassName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.CompareToObject">
            <summary>Sets the shim of Test.CompareTo(Object obj)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.ConstructorIMethodInfo">
            <summary>Sets the shim of Test.Test(IMethodInfo method)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.ConstructorITypeInfo">
            <summary>Sets the shim of Test.Test(ITypeInfo typeInfo)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.ConstructorString">
            <summary>Sets the shim of Test.Test(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.ConstructorStringString">
            <summary>Sets the shim of Test.Test(String pathName, String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.FixtureGet">
            <summary>Sets the shim of Test.get_Fixture()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.FixtureSetObject">
            <summary>Sets the shim of Test.set_Fixture(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.FullNameGet">
            <summary>Sets the shim of Test.get_FullName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.FullNameSetString">
            <summary>Sets the shim of Test.set_FullName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.GetActionsForTypeType">
            <summary>Sets the shim of Test.GetActionsForType(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.GetNextId">
            <summary>Sets the shim of Test.GetNextId()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.IdGet">
            <summary>Sets the shim of Test.get_Id()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.IdPrefixGet">
            <summary>Sets the shim of Test.get_IdPrefix()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.IdPrefixSetString">
            <summary>Sets the shim of Test.set_IdPrefix(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.IdSetString">
            <summary>Sets the shim of Test.set_Id(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.InitializeString">
            <summary>Sets the shim of Test.Initialize(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.IsSuiteGet">
            <summary>Sets the shim of Test.get_IsSuite()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.MakeInvalidString">
            <summary>Sets the shim of Test.MakeInvalid(String reason)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.MethodGet">
            <summary>Sets the shim of Test.get_Method()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.MethodNameGet">
            <summary>Sets the shim of Test.get_MethodName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.MethodSetIMethodInfo">
            <summary>Sets the shim of Test.set_Method(IMethodInfo value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.NameGet">
            <summary>Sets the shim of Test.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.NameSetString">
            <summary>Sets the shim of Test.set_Name(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.ParentGet">
            <summary>Sets the shim of Test.get_Parent()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.ParentSetITest">
            <summary>Sets the shim of Test.set_Parent(ITest value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.PopulateTestNodeTNodeBoolean">
            <summary>Sets the shim of Test.PopulateTestNode(TNode thisNode, Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.PropertiesGet">
            <summary>Sets the shim of Test.get_Properties()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.PropertiesSetIPropertyBag">
            <summary>Sets the shim of Test.set_Properties(IPropertyBag value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.RequiresThreadGet">
            <summary>Sets the shim of Test.get_RequiresThread()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.RequiresThreadSetBoolean">
            <summary>Sets the shim of Test.set_RequiresThread(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.RunStateGet">
            <summary>Sets the shim of Test.get_RunState()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.RunStateSetRunState">
            <summary>Sets the shim of Test.set_RunState(RunState value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.SeedGet">
            <summary>Sets the shim of Test.get_Seed()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.SeedSetInt32">
            <summary>Sets the shim of Test.set_Seed(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.SetUpMethodsGet">
            <summary>Sets the shim of Test.get_SetUpMethods()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.SetUpMethodsSetMethodInfoArray">
            <summary>Sets the shim of Test.set_SetUpMethods(MethodInfo[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.StaticConstructor">
            <summary>Sets the shim of Test.Test()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.TearDownMethodsGet">
            <summary>Sets the shim of Test.get_TearDownMethods()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.TearDownMethodsSetMethodInfoArray">
            <summary>Sets the shim of Test.set_TearDownMethods(MethodInfo[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.TestCaseCountGet">
            <summary>Sets the shim of Test.get_TestCaseCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.TestTypeGet">
            <summary>Sets the shim of Test.get_TestType()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.ToXmlBoolean">
            <summary>Sets the shim of Test.ToXml(Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.TypeInfoGet">
            <summary>Sets the shim of Test.get_TypeInfo()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.TypeInfoSetITypeInfo">
            <summary>Sets the shim of Test.set_TypeInfo(ITypeInfo value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.GetCustomAttributesOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Internal.Test,System.Boolean,``0[]})">
            <summary>Sets the shim of Test.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.ActionsGet">
            <summary>Sets the shim of Test.get_Actions()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.ApplyAttributesToTestICustomAttributeProvider">
            <summary>Sets the shim of Test.ApplyAttributesToTest(ICustomAttributeProvider provider)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.ClassNameGet">
            <summary>Sets the shim of Test.get_ClassName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.CompareToObject">
            <summary>Sets the shim of Test.CompareTo(Object obj)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.FixtureGet">
            <summary>Sets the shim of Test.get_Fixture()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.FixtureSetObject">
            <summary>Sets the shim of Test.set_Fixture(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.FullNameGet">
            <summary>Sets the shim of Test.get_FullName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.FullNameSetString">
            <summary>Sets the shim of Test.set_FullName(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.IdGet">
            <summary>Sets the shim of Test.get_Id()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.IdSetString">
            <summary>Sets the shim of Test.set_Id(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.InitializeString">
            <summary>Sets the shim of Test.Initialize(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.IsSuiteGet">
            <summary>Sets the shim of Test.get_IsSuite()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.MakeInvalidString">
            <summary>Sets the shim of Test.MakeInvalid(String reason)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.MethodGet">
            <summary>Sets the shim of Test.get_Method()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.MethodNameGet">
            <summary>Sets the shim of Test.get_MethodName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.MethodSetIMethodInfo">
            <summary>Sets the shim of Test.set_Method(IMethodInfo value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.NameGet">
            <summary>Sets the shim of Test.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.NameSetString">
            <summary>Sets the shim of Test.set_Name(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.ParentGet">
            <summary>Sets the shim of Test.get_Parent()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.ParentSetITest">
            <summary>Sets the shim of Test.set_Parent(ITest value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.PopulateTestNodeTNodeBoolean">
            <summary>Sets the shim of Test.PopulateTestNode(TNode thisNode, Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.PropertiesGet">
            <summary>Sets the shim of Test.get_Properties()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.PropertiesSetIPropertyBag">
            <summary>Sets the shim of Test.set_Properties(IPropertyBag value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.RequiresThreadGet">
            <summary>Sets the shim of Test.get_RequiresThread()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.RequiresThreadSetBoolean">
            <summary>Sets the shim of Test.set_RequiresThread(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.RunStateGet">
            <summary>Sets the shim of Test.get_RunState()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.RunStateSetRunState">
            <summary>Sets the shim of Test.set_RunState(RunState value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.SeedGet">
            <summary>Sets the shim of Test.get_Seed()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.SeedSetInt32">
            <summary>Sets the shim of Test.set_Seed(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.SetUpMethodsGet">
            <summary>Sets the shim of Test.get_SetUpMethods()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.SetUpMethodsSetMethodInfoArray">
            <summary>Sets the shim of Test.set_SetUpMethods(MethodInfo[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.TearDownMethodsGet">
            <summary>Sets the shim of Test.get_TearDownMethods()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.TearDownMethodsSetMethodInfoArray">
            <summary>Sets the shim of Test.set_TearDownMethods(MethodInfo[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.TestCaseCountGet">
            <summary>Sets the shim of Test.get_TestCaseCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.TestTypeGet">
            <summary>Sets the shim of Test.get_TestType()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.ToXmlBoolean">
            <summary>Sets the shim of Test.ToXml(Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.TypeInfoGet">
            <summary>Sets the shim of Test.get_TypeInfo()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTest.AllInstances.TypeInfoSetITypeInfo">
            <summary>Sets the shim of Test.set_TypeInfo(ITypeInfo value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestAssembly">
            <summary>Shim type of NUnit.Framework.Internal.TestAssembly</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestAssembly.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestAssembly.#ctor(NUnit.Framework.Internal.TestAssembly)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestAssembly.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestAssembly.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestAssembly.Bind(System.IComparable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestAssembly.Bind(NUnit.Framework.Interfaces.ITest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestAssembly.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestAssembly.GetCustomAttributesOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0[]})">
            <summary>Sets the shim of TestAssembly.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestAssembly.AssemblyGet">
            <summary>Sets the shim of TestAssembly.get_Assembly()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestAssembly.AssemblySetAssembly">
            <summary>Sets the shim of TestAssembly.set_Assembly(Assembly value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestAssembly.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestAssembly.ConstructorAssemblyString">
            <summary>Sets the shim of TestAssembly.TestAssembly(Assembly assembly, String path)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestAssembly.ConstructorString">
            <summary>Sets the shim of TestAssembly.TestAssembly(String path)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestAssembly.ConstructorTestAssemblyITestFilter">
            <summary>Sets the shim of TestAssembly.TestAssembly(TestAssembly assembly, ITestFilter filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestAssembly.TestTypeGet">
            <summary>Sets the shim of TestAssembly.get_TestType()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestAssembly.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestAssembly.AllInstances.GetCustomAttributesOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Internal.TestAssembly,System.Boolean,``0[]})">
            <summary>Sets the shim of TestAssembly.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestAssembly.AllInstances.AssemblyGet">
            <summary>Sets the shim of TestAssembly.get_Assembly()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestAssembly.AllInstances.AssemblySetAssembly">
            <summary>Sets the shim of TestAssembly.set_Assembly(Assembly value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestAssembly.AllInstances.TestTypeGet">
            <summary>Sets the shim of TestAssembly.get_TestType()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestCaseParameters">
            <summary>Shim type of NUnit.Framework.Internal.TestCaseParameters</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestCaseParameters.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestCaseParameters.#ctor(NUnit.Framework.Internal.TestCaseParameters)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestCaseParameters.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestCaseParameters.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestCaseParameters.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestCaseParameters.Bind(NUnit.Framework.Interfaces.ITestCaseData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestCaseParameters.Bind(NUnit.Framework.Interfaces.ITestData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseParameters.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseParameters.Constructor">
            <summary>Sets the shim of TestCaseParameters.TestCaseParameters()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseParameters.ConstructorException">
            <summary>Sets the shim of TestCaseParameters.TestCaseParameters(Exception exception)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseParameters.ConstructorITestCaseData">
            <summary>Sets the shim of TestCaseParameters.TestCaseParameters(ITestCaseData data)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseParameters.ConstructorObjectArray">
            <summary>Sets the shim of TestCaseParameters.TestCaseParameters(Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseParameters.ExpectedResultGet">
            <summary>Sets the shim of TestCaseParameters.get_ExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseParameters.ExpectedResultSetObject">
            <summary>Sets the shim of TestCaseParameters.set_ExpectedResult(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseParameters.HasExpectedResultGet">
            <summary>Sets the shim of TestCaseParameters.get_HasExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseParameters.HasExpectedResultSetBoolean">
            <summary>Sets the shim of TestCaseParameters.set_HasExpectedResult(Boolean value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestCaseParameters.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseParameters.AllInstances.ExpectedResultGet">
            <summary>Sets the shim of TestCaseParameters.get_ExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseParameters.AllInstances.ExpectedResultSetObject">
            <summary>Sets the shim of TestCaseParameters.set_ExpectedResult(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseParameters.AllInstances.HasExpectedResultGet">
            <summary>Sets the shim of TestCaseParameters.get_HasExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseParameters.AllInstances.HasExpectedResultSetBoolean">
            <summary>Sets the shim of TestCaseParameters.set_HasExpectedResult(Boolean value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestCaseResult">
            <summary>Shim type of NUnit.Framework.Internal.TestCaseResult</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.#ctor(NUnit.Framework.Internal.TestCaseResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.Bind(NUnit.Framework.Interfaces.ITestResult)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.ChildrenGet">
            <summary>Sets the shim of TestCaseResult.get_Children()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.ConstructorTestMethod">
            <summary>Sets the shim of TestCaseResult.TestCaseResult(TestMethod test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.FailCountGet">
            <summary>Sets the shim of TestCaseResult.get_FailCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.HasChildrenGet">
            <summary>Sets the shim of TestCaseResult.get_HasChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.InconclusiveCountGet">
            <summary>Sets the shim of TestCaseResult.get_InconclusiveCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.PassCountGet">
            <summary>Sets the shim of TestCaseResult.get_PassCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.SkipCountGet">
            <summary>Sets the shim of TestCaseResult.get_SkipCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.WarningCountGet">
            <summary>Sets the shim of TestCaseResult.get_WarningCount()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.AllInstances.ChildrenGet">
            <summary>Sets the shim of TestCaseResult.get_Children()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.AllInstances.FailCountGet">
            <summary>Sets the shim of TestCaseResult.get_FailCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.AllInstances.HasChildrenGet">
            <summary>Sets the shim of TestCaseResult.get_HasChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.AllInstances.InconclusiveCountGet">
            <summary>Sets the shim of TestCaseResult.get_InconclusiveCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.AllInstances.PassCountGet">
            <summary>Sets the shim of TestCaseResult.get_PassCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.AllInstances.SkipCountGet">
            <summary>Sets the shim of TestCaseResult.get_SkipCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseResult.AllInstances.WarningCountGet">
            <summary>Sets the shim of TestCaseResult.get_WarningCount()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestCaseTimeoutException">
            <summary>Shim type of NUnit.Framework.Internal.TestCaseTimeoutException</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestCaseTimeoutException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestCaseTimeoutException.#ctor(NUnit.Framework.Internal.TestCaseTimeoutException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestCaseTimeoutException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestCaseTimeoutException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestCaseTimeoutException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseTimeoutException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseTimeoutException.Constructor">
            <summary>Sets the shim of TestCaseTimeoutException.TestCaseTimeoutException()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseTimeoutException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of TestCaseTimeoutException.TestCaseTimeoutException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseTimeoutException.ConstructorString">
            <summary>Sets the shim of TestCaseTimeoutException.TestCaseTimeoutException(String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestCaseTimeoutException.ConstructorStringException">
            <summary>Sets the shim of TestCaseTimeoutException.TestCaseTimeoutException(String message, Exception inner)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestCaseTimeoutException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext">
            <summary>Shim type of NUnit.Framework.Internal.TestExecutionContext</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.#ctor(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.Bind(System.Runtime.Remoting.Messaging.ILogicalThreadAffinative)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AddFormatterValueFormatterFactory">
            <summary>Sets the shim of TestExecutionContext.AddFormatter(ValueFormatterFactory formatterFactory)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AssertCountGet">
            <summary>Sets the shim of TestExecutionContext.get_AssertCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.Constructor">
            <summary>Sets the shim of TestExecutionContext.TestExecutionContext()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.ConstructorTestExecutionContext">
            <summary>Sets the shim of TestExecutionContext.TestExecutionContext(TestExecutionContext other)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.CreateIsolatedContext">
            <summary>Sets the shim of TestExecutionContext.CreateIsolatedContext()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.CurrentContextGet">
            <summary>Sets the shim of TestExecutionContext.get_CurrentContext()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.CurrentContextSetTestExecutionContext">
            <summary>Sets the shim of TestExecutionContext.set_CurrentContext(TestExecutionContext value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.CurrentCultureGet">
            <summary>Sets the shim of TestExecutionContext.get_CurrentCulture()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.CurrentCultureSetCultureInfo">
            <summary>Sets the shim of TestExecutionContext.set_CurrentCulture(CultureInfo value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.CurrentPrincipalGet">
            <summary>Sets the shim of TestExecutionContext.get_CurrentPrincipal()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.CurrentPrincipalSetIPrincipal">
            <summary>Sets the shim of TestExecutionContext.set_CurrentPrincipal(IPrincipal value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.CurrentResultGet">
            <summary>Sets the shim of TestExecutionContext.get_CurrentResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.CurrentResultSetTestResult">
            <summary>Sets the shim of TestExecutionContext.set_CurrentResult(TestResult value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.CurrentTestGet">
            <summary>Sets the shim of TestExecutionContext.get_CurrentTest()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.CurrentTestSetTest">
            <summary>Sets the shim of TestExecutionContext.set_CurrentTest(Test value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.CurrentUICultureGet">
            <summary>Sets the shim of TestExecutionContext.get_CurrentUICulture()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.CurrentUICultureSetCultureInfo">
            <summary>Sets the shim of TestExecutionContext.set_CurrentUICulture(CultureInfo value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.CurrentValueFormatterGet">
            <summary>Sets the shim of TestExecutionContext.get_CurrentValueFormatter()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.CurrentValueFormatterSetValueFormatter">
            <summary>Sets the shim of TestExecutionContext.set_CurrentValueFormatter(ValueFormatter value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.DefaultFloatingPointToleranceGet">
            <summary>Sets the shim of TestExecutionContext.get_DefaultFloatingPointTolerance()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.DefaultFloatingPointToleranceSetTolerance">
            <summary>Sets the shim of TestExecutionContext.set_DefaultFloatingPointTolerance(Tolerance value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.DispatcherGet">
            <summary>Sets the shim of TestExecutionContext.get_Dispatcher()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.DispatcherSetIWorkItemDispatcher">
            <summary>Sets the shim of TestExecutionContext.set_Dispatcher(IWorkItemDispatcher value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.EstablishExecutionEnvironment">
            <summary>Sets the shim of TestExecutionContext.EstablishExecutionEnvironment()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.ExecutionStatusGet">
            <summary>Sets the shim of TestExecutionContext.get_ExecutionStatus()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.ExecutionStatusSetTestExecutionStatus">
            <summary>Sets the shim of TestExecutionContext.set_ExecutionStatus(TestExecutionStatus value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.IncrementAssertCount">
            <summary>Sets the shim of TestExecutionContext.IncrementAssertCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.IncrementAssertCountInt32">
            <summary>Sets the shim of TestExecutionContext.IncrementAssertCount(Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.InitializeLifetimeService">
            <summary>Sets the shim of TestExecutionContext.InitializeLifetimeService()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.IsSingleThreadedGet">
            <summary>Sets the shim of TestExecutionContext.get_IsSingleThreaded()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.IsSingleThreadedSetBoolean">
            <summary>Sets the shim of TestExecutionContext.set_IsSingleThreaded(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.ListenerGet">
            <summary>Sets the shim of TestExecutionContext.get_Listener()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.ListenerSetITestListener">
            <summary>Sets the shim of TestExecutionContext.set_Listener(ITestListener value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.MultipleAssertLevelGet">
            <summary>Sets the shim of TestExecutionContext.get_MultipleAssertLevel()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.MultipleAssertLevelSetInt32">
            <summary>Sets the shim of TestExecutionContext.set_MultipleAssertLevel(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.OutWriterGet">
            <summary>Sets the shim of TestExecutionContext.get_OutWriter()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.OutWriterSetTextWriter">
            <summary>Sets the shim of TestExecutionContext.set_OutWriter(TextWriter value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.ParallelScopeGet">
            <summary>Sets the shim of TestExecutionContext.get_ParallelScope()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.ParallelScopeSetParallelScope">
            <summary>Sets the shim of TestExecutionContext.set_ParallelScope(ParallelScope value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.RandomGeneratorGet">
            <summary>Sets the shim of TestExecutionContext.get_RandomGenerator()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.StartTicksGet">
            <summary>Sets the shim of TestExecutionContext.get_StartTicks()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.StartTicksSetInt64">
            <summary>Sets the shim of TestExecutionContext.set_StartTicks(Int64 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.StartTimeGet">
            <summary>Sets the shim of TestExecutionContext.get_StartTime()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.StartTimeSetDateTime">
            <summary>Sets the shim of TestExecutionContext.set_StartTime(DateTime value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.StaticConstructor">
            <summary>Sets the shim of TestExecutionContext.TestExecutionContext()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.StopOnErrorGet">
            <summary>Sets the shim of TestExecutionContext.get_StopOnError()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.StopOnErrorSetBoolean">
            <summary>Sets the shim of TestExecutionContext.set_StopOnError(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.TestCaseTimeoutGet">
            <summary>Sets the shim of TestExecutionContext.get_TestCaseTimeout()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.TestCaseTimeoutSetInt32">
            <summary>Sets the shim of TestExecutionContext.set_TestCaseTimeout(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.TestObjectGet">
            <summary>Sets the shim of TestExecutionContext.get_TestObject()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.TestObjectSetObject">
            <summary>Sets the shim of TestExecutionContext.set_TestObject(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.TestWorkerGet">
            <summary>Sets the shim of TestExecutionContext.get_TestWorker()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.TestWorkerSetTestWorker">
            <summary>Sets the shim of TestExecutionContext.set_TestWorker(TestWorker value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.UpdateContextFromEnvironment">
            <summary>Sets the shim of TestExecutionContext.UpdateContextFromEnvironment()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.UpstreamActionsGet">
            <summary>Sets the shim of TestExecutionContext.get_UpstreamActions()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.UpstreamActionsSetListOfITestAction">
            <summary>Sets the shim of TestExecutionContext.set_UpstreamActions(List`1&lt;ITestAction&gt; value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.AddFormatterValueFormatterFactory">
            <summary>Sets the shim of TestExecutionContext.AddFormatter(ValueFormatterFactory formatterFactory)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.AssertCountGet">
            <summary>Sets the shim of TestExecutionContext.get_AssertCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.CreateIsolatedContext">
            <summary>Sets the shim of TestExecutionContext.CreateIsolatedContext()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.CurrentCultureGet">
            <summary>Sets the shim of TestExecutionContext.get_CurrentCulture()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.CurrentCultureSetCultureInfo">
            <summary>Sets the shim of TestExecutionContext.set_CurrentCulture(CultureInfo value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.CurrentPrincipalGet">
            <summary>Sets the shim of TestExecutionContext.get_CurrentPrincipal()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.CurrentPrincipalSetIPrincipal">
            <summary>Sets the shim of TestExecutionContext.set_CurrentPrincipal(IPrincipal value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.CurrentResultGet">
            <summary>Sets the shim of TestExecutionContext.get_CurrentResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.CurrentResultSetTestResult">
            <summary>Sets the shim of TestExecutionContext.set_CurrentResult(TestResult value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.CurrentTestGet">
            <summary>Sets the shim of TestExecutionContext.get_CurrentTest()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.CurrentTestSetTest">
            <summary>Sets the shim of TestExecutionContext.set_CurrentTest(Test value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.CurrentUICultureGet">
            <summary>Sets the shim of TestExecutionContext.get_CurrentUICulture()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.CurrentUICultureSetCultureInfo">
            <summary>Sets the shim of TestExecutionContext.set_CurrentUICulture(CultureInfo value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.CurrentValueFormatterGet">
            <summary>Sets the shim of TestExecutionContext.get_CurrentValueFormatter()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.CurrentValueFormatterSetValueFormatter">
            <summary>Sets the shim of TestExecutionContext.set_CurrentValueFormatter(ValueFormatter value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.DefaultFloatingPointToleranceGet">
            <summary>Sets the shim of TestExecutionContext.get_DefaultFloatingPointTolerance()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.DefaultFloatingPointToleranceSetTolerance">
            <summary>Sets the shim of TestExecutionContext.set_DefaultFloatingPointTolerance(Tolerance value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.DispatcherGet">
            <summary>Sets the shim of TestExecutionContext.get_Dispatcher()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.DispatcherSetIWorkItemDispatcher">
            <summary>Sets the shim of TestExecutionContext.set_Dispatcher(IWorkItemDispatcher value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.EstablishExecutionEnvironment">
            <summary>Sets the shim of TestExecutionContext.EstablishExecutionEnvironment()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.ExecutionStatusGet">
            <summary>Sets the shim of TestExecutionContext.get_ExecutionStatus()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.ExecutionStatusSetTestExecutionStatus">
            <summary>Sets the shim of TestExecutionContext.set_ExecutionStatus(TestExecutionStatus value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.IncrementAssertCount">
            <summary>Sets the shim of TestExecutionContext.IncrementAssertCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.IncrementAssertCountInt32">
            <summary>Sets the shim of TestExecutionContext.IncrementAssertCount(Int32 count)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.InitializeLifetimeService">
            <summary>Sets the shim of TestExecutionContext.InitializeLifetimeService()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.IsSingleThreadedGet">
            <summary>Sets the shim of TestExecutionContext.get_IsSingleThreaded()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.IsSingleThreadedSetBoolean">
            <summary>Sets the shim of TestExecutionContext.set_IsSingleThreaded(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.ListenerGet">
            <summary>Sets the shim of TestExecutionContext.get_Listener()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.ListenerSetITestListener">
            <summary>Sets the shim of TestExecutionContext.set_Listener(ITestListener value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.MultipleAssertLevelGet">
            <summary>Sets the shim of TestExecutionContext.get_MultipleAssertLevel()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.MultipleAssertLevelSetInt32">
            <summary>Sets the shim of TestExecutionContext.set_MultipleAssertLevel(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.OutWriterGet">
            <summary>Sets the shim of TestExecutionContext.get_OutWriter()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.OutWriterSetTextWriter">
            <summary>Sets the shim of TestExecutionContext.set_OutWriter(TextWriter value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.ParallelScopeGet">
            <summary>Sets the shim of TestExecutionContext.get_ParallelScope()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.ParallelScopeSetParallelScope">
            <summary>Sets the shim of TestExecutionContext.set_ParallelScope(ParallelScope value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.RandomGeneratorGet">
            <summary>Sets the shim of TestExecutionContext.get_RandomGenerator()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.StartTicksGet">
            <summary>Sets the shim of TestExecutionContext.get_StartTicks()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.StartTicksSetInt64">
            <summary>Sets the shim of TestExecutionContext.set_StartTicks(Int64 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.StartTimeGet">
            <summary>Sets the shim of TestExecutionContext.get_StartTime()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.StartTimeSetDateTime">
            <summary>Sets the shim of TestExecutionContext.set_StartTime(DateTime value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.StopOnErrorGet">
            <summary>Sets the shim of TestExecutionContext.get_StopOnError()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.StopOnErrorSetBoolean">
            <summary>Sets the shim of TestExecutionContext.set_StopOnError(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.TestCaseTimeoutGet">
            <summary>Sets the shim of TestExecutionContext.get_TestCaseTimeout()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.TestCaseTimeoutSetInt32">
            <summary>Sets the shim of TestExecutionContext.set_TestCaseTimeout(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.TestObjectGet">
            <summary>Sets the shim of TestExecutionContext.get_TestObject()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.TestObjectSetObject">
            <summary>Sets the shim of TestExecutionContext.set_TestObject(Object value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.TestWorkerGet">
            <summary>Sets the shim of TestExecutionContext.get_TestWorker()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.TestWorkerSetTestWorker">
            <summary>Sets the shim of TestExecutionContext.set_TestWorker(TestWorker value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.UpdateContextFromEnvironment">
            <summary>Sets the shim of TestExecutionContext.UpdateContextFromEnvironment()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.UpstreamActionsGet">
            <summary>Sets the shim of TestExecutionContext.get_UpstreamActions()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.AllInstances.UpstreamActionsSetListOfITestAction">
            <summary>Sets the shim of TestExecutionContext.set_UpstreamActions(List`1&lt;ITestAction&gt; value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.ShimIsolatedContext">
            <summary>Shim type of NUnit.Framework.Internal.TestExecutionContext+IsolatedContext</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.ShimIsolatedContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.ShimIsolatedContext.#ctor(NUnit.Framework.Internal.TestExecutionContext.IsolatedContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.ShimIsolatedContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.ShimIsolatedContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.ShimIsolatedContext.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.ShimIsolatedContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.ShimIsolatedContext.Constructor">
            <summary>Sets the shim of IsolatedContext.IsolatedContext()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.ShimIsolatedContext.Dispose">
            <summary>Sets the shim of IsolatedContext.Dispose()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.ShimIsolatedContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestExecutionContext.ShimIsolatedContext.AllInstances.Dispose">
            <summary>Sets the shim of IsolatedContext.Dispose()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestFilter">
            <summary>Shim type of NUnit.Framework.Internal.TestFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestFilter.#ctor(NUnit.Framework.Internal.TestFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestFilter.Bind(NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestFilter.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFilter.Constructor">
            <summary>Sets the shim of TestFilter.TestFilter()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFilter.FromXmlString">
            <summary>Sets the shim of TestFilter.FromXml(String xmlText)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFilter.FromXmlTNode">
            <summary>Sets the shim of TestFilter.FromXml(TNode node)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFilter.IsEmptyGet">
            <summary>Sets the shim of TestFilter.get_IsEmpty()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFilter.IsExplicitMatchITest">
            <summary>Sets the shim of TestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFilter.MatchDescendantITest">
            <summary>Sets the shim of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFilter.MatchParentITest">
            <summary>Sets the shim of TestFilter.MatchParent(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFilter.PassITest">
            <summary>Sets the shim of TestFilter.Pass(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFilter.StaticConstructor">
            <summary>Sets the shim of TestFilter.TestFilter()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFilter.ToXmlBoolean">
            <summary>Sets the shim of TestFilter.ToXml(Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFilter.TopLevelGet">
            <summary>Sets the shim of TestFilter.get_TopLevel()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFilter.TopLevelSetBoolean">
            <summary>Sets the shim of TestFilter.set_TopLevel(Boolean value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFilter.AllInstances.IsEmptyGet">
            <summary>Sets the shim of TestFilter.get_IsEmpty()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFilter.AllInstances.IsExplicitMatchITest">
            <summary>Sets the shim of TestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFilter.AllInstances.MatchDescendantITest">
            <summary>Sets the shim of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFilter.AllInstances.MatchParentITest">
            <summary>Sets the shim of TestFilter.MatchParent(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFilter.AllInstances.PassITest">
            <summary>Sets the shim of TestFilter.Pass(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFilter.AllInstances.ToXmlBoolean">
            <summary>Sets the shim of TestFilter.ToXml(Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFilter.AllInstances.TopLevelGet">
            <summary>Sets the shim of TestFilter.get_TopLevel()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFilter.AllInstances.TopLevelSetBoolean">
            <summary>Sets the shim of TestFilter.set_TopLevel(Boolean value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestFixture">
            <summary>Shim type of NUnit.Framework.Internal.TestFixture</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestFixture.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestFixture.#ctor(NUnit.Framework.Internal.TestFixture)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestFixture.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestFixture.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestFixture.Bind(System.IComparable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestFixture.Bind(NUnit.Framework.Interfaces.ITest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestFixture.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFixture.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFixture.ConstructorITypeInfoObjectArray">
            <summary>Sets the shim of TestFixture.TestFixture(ITypeInfo fixtureType, Object[] arguments)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestFixture.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestFixtureParameters">
            <summary>Shim type of NUnit.Framework.Internal.TestFixtureParameters</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestFixtureParameters.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestFixtureParameters.#ctor(NUnit.Framework.Internal.TestFixtureParameters)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestFixtureParameters.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestFixtureParameters.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestFixtureParameters.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestFixtureParameters.Bind(NUnit.Framework.Interfaces.ITestData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestFixtureParameters.Bind(NUnit.Framework.Interfaces.ITestFixtureData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFixtureParameters.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFixtureParameters.Constructor">
            <summary>Sets the shim of TestFixtureParameters.TestFixtureParameters()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFixtureParameters.ConstructorException">
            <summary>Sets the shim of TestFixtureParameters.TestFixtureParameters(Exception exception)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFixtureParameters.ConstructorITestFixtureData">
            <summary>Sets the shim of TestFixtureParameters.TestFixtureParameters(ITestFixtureData data)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFixtureParameters.ConstructorObjectArray">
            <summary>Sets the shim of TestFixtureParameters.TestFixtureParameters(Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFixtureParameters.TypeArgsGet">
            <summary>Sets the shim of TestFixtureParameters.get_TypeArgs()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFixtureParameters.TypeArgsSetTypeArray">
            <summary>Sets the shim of TestFixtureParameters.set_TypeArgs(Type[] value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestFixtureParameters.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFixtureParameters.AllInstances.TypeArgsGet">
            <summary>Sets the shim of TestFixtureParameters.get_TypeArgs()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestFixtureParameters.AllInstances.TypeArgsSetTypeArray">
            <summary>Sets the shim of TestFixtureParameters.set_TypeArgs(Type[] value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestListener">
            <summary>Shim type of NUnit.Framework.Internal.TestListener</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestListener.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestListener.#ctor(NUnit.Framework.Internal.TestListener)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestListener.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestListener.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestListener.Bind(NUnit.Framework.Interfaces.ITestListener)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestListener.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestListener.Constructor">
            <summary>Sets the shim of TestListener.TestListener()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestListener.NULLGet">
            <summary>Sets the shim of TestListener.get_NULL()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestListener.TestFinishedITestResult">
            <summary>Sets the shim of TestListener.TestFinished(ITestResult result)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestListener.TestOutputTestOutput">
            <summary>Sets the shim of TestListener.TestOutput(TestOutput output)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestListener.TestStartedITest">
            <summary>Sets the shim of TestListener.TestStarted(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestListener.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestListener.AllInstances.TestFinishedITestResult">
            <summary>Sets the shim of TestListener.TestFinished(ITestResult result)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestListener.AllInstances.TestOutputTestOutput">
            <summary>Sets the shim of TestListener.TestOutput(TestOutput output)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestListener.AllInstances.TestStartedITest">
            <summary>Sets the shim of TestListener.TestStarted(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestMethod">
            <summary>Shim type of NUnit.Framework.Internal.TestMethod</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestMethod.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestMethod.#ctor(NUnit.Framework.Internal.TestMethod)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestMethod.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestMethod.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestMethod.Bind(System.IComparable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestMethod.Bind(NUnit.Framework.Interfaces.ITest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestMethod.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestMethod.AddToXmlTNodeBoolean">
            <summary>Sets the shim of TestMethod.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestMethod.ArgumentsGet">
            <summary>Sets the shim of TestMethod.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestMethod.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestMethod.ConstructorIMethodInfo">
            <summary>Sets the shim of TestMethod.TestMethod(IMethodInfo method)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestMethod.ConstructorIMethodInfoTest">
            <summary>Sets the shim of TestMethod.TestMethod(IMethodInfo method, Test parentSuite)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestMethod.ExpectedResultGet">
            <summary>Sets the shim of TestMethod.get_ExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestMethod.HasChildrenGet">
            <summary>Sets the shim of TestMethod.get_HasChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestMethod.HasExpectedResultGet">
            <summary>Sets the shim of TestMethod.get_HasExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestMethod.MakeTestResult">
            <summary>Sets the shim of TestMethod.MakeTestResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestMethod.MethodNameGet">
            <summary>Sets the shim of TestMethod.get_MethodName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestMethod.StaticConstructor">
            <summary>Sets the shim of TestMethod.TestMethod()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestMethod.TestsGet">
            <summary>Sets the shim of TestMethod.get_Tests()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestMethod.XmlElementNameGet">
            <summary>Sets the shim of TestMethod.get_XmlElementName()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestMethod.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestMethod.AllInstances.AddToXmlTNodeBoolean">
            <summary>Sets the shim of TestMethod.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestMethod.AllInstances.ArgumentsGet">
            <summary>Sets the shim of TestMethod.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestMethod.AllInstances.ExpectedResultGet">
            <summary>Sets the shim of TestMethod.get_ExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestMethod.AllInstances.HasChildrenGet">
            <summary>Sets the shim of TestMethod.get_HasChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestMethod.AllInstances.HasExpectedResultGet">
            <summary>Sets the shim of TestMethod.get_HasExpectedResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestMethod.AllInstances.MakeTestResult">
            <summary>Sets the shim of TestMethod.MakeTestResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestMethod.AllInstances.MethodNameGet">
            <summary>Sets the shim of TestMethod.get_MethodName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestMethod.AllInstances.TestsGet">
            <summary>Sets the shim of TestMethod.get_Tests()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestMethod.AllInstances.XmlElementNameGet">
            <summary>Sets the shim of TestMethod.get_XmlElementName()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestNameGenerator">
            <summary>Shim type of NUnit.Framework.Internal.TestNameGenerator</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestNameGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestNameGenerator.#ctor(NUnit.Framework.Internal.TestNameGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestNameGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestNameGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestNameGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestNameGenerator.Constructor">
            <summary>Sets the shim of TestNameGenerator.TestNameGenerator()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestNameGenerator.ConstructorString">
            <summary>Sets the shim of TestNameGenerator.TestNameGenerator(String pattern)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestNameGenerator.GetDisplayNameTestMethod">
            <summary>Sets the shim of TestNameGenerator.GetDisplayName(TestMethod testMethod)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestNameGenerator.GetDisplayNameTestMethodObjectArray">
            <summary>Sets the shim of TestNameGenerator.GetDisplayName(TestMethod testMethod, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestNameGenerator.StaticConstructor">
            <summary>Sets the shim of TestNameGenerator.TestNameGenerator()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestNameGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestNameGenerator.AllInstances.GetDisplayNameTestMethod">
            <summary>Sets the shim of TestNameGenerator.GetDisplayName(TestMethod testMethod)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestNameGenerator.AllInstances.GetDisplayNameTestMethodObjectArray">
            <summary>Sets the shim of TestNameGenerator.GetDisplayName(TestMethod testMethod, Object[] args)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestParameters">
            <summary>Shim type of NUnit.Framework.Internal.TestParameters</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestParameters.#ctor(NUnit.Framework.Internal.TestParameters)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestParameters.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestParameters.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestParameters.Bind(NUnit.Framework.Interfaces.IApplyToTest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestParameters.Bind(NUnit.Framework.Interfaces.ITestData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.ApplyToTestTest">
            <summary>Sets the shim of TestParameters.ApplyToTest(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.ArgumentsGet">
            <summary>Sets the shim of TestParameters.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.ArgumentsSetObjectArray">
            <summary>Sets the shim of TestParameters.set_Arguments(Object[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.Constructor">
            <summary>Sets the shim of TestParameters.TestParameters()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.ConstructorException">
            <summary>Sets the shim of TestParameters.TestParameters(Exception exception)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.ConstructorITestData">
            <summary>Sets the shim of TestParameters.TestParameters(ITestData data)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.ConstructorObjectArray">
            <summary>Sets the shim of TestParameters.TestParameters(Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.InitializeArgumentsObjectArray">
            <summary>Sets the shim of TestParameters.InitializeArguments(Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.OriginalArgumentsGet">
            <summary>Sets the shim of TestParameters.get_OriginalArguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.OriginalArgumentsSetObjectArray">
            <summary>Sets the shim of TestParameters.set_OriginalArguments(Object[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.PropertiesGet">
            <summary>Sets the shim of TestParameters.get_Properties()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.PropertiesSetIPropertyBag">
            <summary>Sets the shim of TestParameters.set_Properties(IPropertyBag value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.RunStateGet">
            <summary>Sets the shim of TestParameters.get_RunState()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.RunStateSetRunState">
            <summary>Sets the shim of TestParameters.set_RunState(RunState value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.TestNameGet">
            <summary>Sets the shim of TestParameters.get_TestName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.TestNameSetString">
            <summary>Sets the shim of TestParameters.set_TestName(String value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestParameters.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.AllInstances.ApplyToTestTest">
            <summary>Sets the shim of TestParameters.ApplyToTest(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.AllInstances.ArgumentsGet">
            <summary>Sets the shim of TestParameters.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.AllInstances.ArgumentsSetObjectArray">
            <summary>Sets the shim of TestParameters.set_Arguments(Object[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.AllInstances.InitializeArgumentsObjectArray">
            <summary>Sets the shim of TestParameters.InitializeArguments(Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.AllInstances.OriginalArgumentsGet">
            <summary>Sets the shim of TestParameters.get_OriginalArguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.AllInstances.OriginalArgumentsSetObjectArray">
            <summary>Sets the shim of TestParameters.set_OriginalArguments(Object[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.AllInstances.PropertiesGet">
            <summary>Sets the shim of TestParameters.get_Properties()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.AllInstances.PropertiesSetIPropertyBag">
            <summary>Sets the shim of TestParameters.set_Properties(IPropertyBag value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.AllInstances.RunStateGet">
            <summary>Sets the shim of TestParameters.get_RunState()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.AllInstances.RunStateSetRunState">
            <summary>Sets the shim of TestParameters.set_RunState(RunState value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.AllInstances.TestNameGet">
            <summary>Sets the shim of TestParameters.get_TestName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestParameters.AllInstances.TestNameSetString">
            <summary>Sets the shim of TestParameters.set_TestName(String value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestProgressReporter">
            <summary>Shim type of NUnit.Framework.Internal.TestProgressReporter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestProgressReporter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestProgressReporter.#ctor(NUnit.Framework.Internal.TestProgressReporter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestProgressReporter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestProgressReporter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestProgressReporter.Bind(NUnit.Framework.Interfaces.ITestListener)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestProgressReporter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestProgressReporter.ConstructorICallbackEventHandler">
            <summary>Sets the shim of TestProgressReporter.TestProgressReporter(ICallbackEventHandler handler)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestProgressReporter.FormatAttributeValueString">
            <summary>Sets the shim of TestProgressReporter.FormatAttributeValue(String original)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestProgressReporter.GetParentITest">
            <summary>Sets the shim of TestProgressReporter.GetParent(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestProgressReporter.StaticConstructor">
            <summary>Sets the shim of TestProgressReporter.TestProgressReporter()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestProgressReporter.TestFinishedITestResult">
            <summary>Sets the shim of TestProgressReporter.TestFinished(ITestResult result)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestProgressReporter.TestOutputTestOutput">
            <summary>Sets the shim of TestProgressReporter.TestOutput(TestOutput output)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestProgressReporter.TestStartedITest">
            <summary>Sets the shim of TestProgressReporter.TestStarted(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestProgressReporter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestProgressReporter.AllInstances.TestFinishedITestResult">
            <summary>Sets the shim of TestProgressReporter.TestFinished(ITestResult result)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestProgressReporter.AllInstances.TestOutputTestOutput">
            <summary>Sets the shim of TestProgressReporter.TestOutput(TestOutput output)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestProgressReporter.AllInstances.TestStartedITest">
            <summary>Sets the shim of TestProgressReporter.TestStarted(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestResult">
            <summary>Shim type of NUnit.Framework.Internal.TestResult</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestResult.#ctor(NUnit.Framework.Internal.TestResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestResult.Bind(NUnit.Framework.Interfaces.ITestResult)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestResult.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AddAssertionsElementTNode">
            <summary>Sets the shim of TestResult.AddAssertionsElement(TNode targetNode)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AddAttachmentsElementTNode">
            <summary>Sets the shim of TestResult.AddAttachmentsElement(TNode targetNode)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AddFailureElementTNode">
            <summary>Sets the shim of TestResult.AddFailureElement(TNode targetNode)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AddOutputElementTNode">
            <summary>Sets the shim of TestResult.AddOutputElement(TNode targetNode)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AddReasonElementTNode">
            <summary>Sets the shim of TestResult.AddReasonElement(TNode targetNode)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AddTestAttachmentTestAttachment">
            <summary>Sets the shim of TestResult.AddTestAttachment(TestAttachment attachment)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AddToXmlTNodeBoolean">
            <summary>Sets the shim of TestResult.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AssertCountGet">
            <summary>Sets the shim of TestResult.get_AssertCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AssertCountSetInt32">
            <summary>Sets the shim of TestResult.set_AssertCount(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AssertionResultsGet">
            <summary>Sets the shim of TestResult.get_AssertionResults()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AssertionStatusToResultStateAssertionStatus">
            <summary>Sets the shim of TestResult.AssertionStatusToResultState(AssertionStatus status)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.ConstructorITest">
            <summary>Sets the shim of TestResult.TestResult(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.CreateLegacyFailureMessage">
            <summary>Sets the shim of TestResult.CreateLegacyFailureMessage()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.DurationGet">
            <summary>Sets the shim of TestResult.get_Duration()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.DurationSetDouble">
            <summary>Sets the shim of TestResult.set_Duration(Double value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.EndTimeGet">
            <summary>Sets the shim of TestResult.get_EndTime()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.EndTimeSetDateTime">
            <summary>Sets the shim of TestResult.set_EndTime(DateTime value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.FullNameGet">
            <summary>Sets the shim of TestResult.get_FullName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.MessageGet">
            <summary>Sets the shim of TestResult.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.MessageSetString">
            <summary>Sets the shim of TestResult.set_Message(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.NameGet">
            <summary>Sets the shim of TestResult.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.OutWriterGet">
            <summary>Sets the shim of TestResult.get_OutWriter()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.OutWriterSetTextWriter">
            <summary>Sets the shim of TestResult.set_OutWriter(TextWriter value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.OutputGet">
            <summary>Sets the shim of TestResult.get_Output()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.PendingFailuresGet">
            <summary>Sets the shim of TestResult.get_PendingFailures()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.RecordAssertionAssertionResult">
            <summary>Sets the shim of TestResult.RecordAssertion(AssertionResult assertion)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.RecordAssertionAssertionStatusString">
            <summary>Sets the shim of TestResult.RecordAssertion(AssertionStatus status, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.RecordAssertionAssertionStatusStringString">
            <summary>Sets the shim of TestResult.RecordAssertion(AssertionStatus status, String message, String stackTrace)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.RecordExceptionException">
            <summary>Sets the shim of TestResult.RecordException(Exception ex)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.RecordExceptionExceptionFailureSite">
            <summary>Sets the shim of TestResult.RecordException(Exception ex, FailureSite site)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.RecordTearDownExceptionException">
            <summary>Sets the shim of TestResult.RecordTearDownException(Exception ex)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.RecordTestCompletion">
            <summary>Sets the shim of TestResult.RecordTestCompletion()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.ResultStateGet">
            <summary>Sets the shim of TestResult.get_ResultState()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.ResultStateSetResultState">
            <summary>Sets the shim of TestResult.set_ResultState(ResultState value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.SetResultResultState">
            <summary>Sets the shim of TestResult.SetResult(ResultState resultState)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.SetResultResultStateString">
            <summary>Sets the shim of TestResult.SetResult(ResultState resultState, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.SetResultResultStateStringString">
            <summary>Sets the shim of TestResult.SetResult(ResultState resultState, String message, String stackTrace)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.StackTraceGet">
            <summary>Sets the shim of TestResult.get_StackTrace()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.StackTraceSetString">
            <summary>Sets the shim of TestResult.set_StackTrace(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.StartTimeGet">
            <summary>Sets the shim of TestResult.get_StartTime()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.StartTimeSetDateTime">
            <summary>Sets the shim of TestResult.set_StartTime(DateTime value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.StaticConstructor">
            <summary>Sets the shim of TestResult.TestResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.TestAttachmentsGet">
            <summary>Sets the shim of TestResult.get_TestAttachments()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.TestGet">
            <summary>Sets the shim of TestResult.get_Test()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.TestSetITest">
            <summary>Sets the shim of TestResult.set_Test(ITest value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.ToXmlBoolean">
            <summary>Sets the shim of TestResult.ToXml(Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.WorstAssertionStatusGet">
            <summary>Sets the shim of TestResult.get_WorstAssertionStatus()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.AddAssertionsElementTNode">
            <summary>Sets the shim of TestResult.AddAssertionsElement(TNode targetNode)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.AddAttachmentsElementTNode">
            <summary>Sets the shim of TestResult.AddAttachmentsElement(TNode targetNode)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.AddFailureElementTNode">
            <summary>Sets the shim of TestResult.AddFailureElement(TNode targetNode)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.AddOutputElementTNode">
            <summary>Sets the shim of TestResult.AddOutputElement(TNode targetNode)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.AddReasonElementTNode">
            <summary>Sets the shim of TestResult.AddReasonElement(TNode targetNode)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.AddTestAttachmentTestAttachment">
            <summary>Sets the shim of TestResult.AddTestAttachment(TestAttachment attachment)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.AddToXmlTNodeBoolean">
            <summary>Sets the shim of TestResult.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.AssertCountGet">
            <summary>Sets the shim of TestResult.get_AssertCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.AssertCountSetInt32">
            <summary>Sets the shim of TestResult.set_AssertCount(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.AssertionResultsGet">
            <summary>Sets the shim of TestResult.get_AssertionResults()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.AssertionStatusToResultStateAssertionStatus">
            <summary>Sets the shim of TestResult.AssertionStatusToResultState(AssertionStatus status)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.CreateLegacyFailureMessage">
            <summary>Sets the shim of TestResult.CreateLegacyFailureMessage()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.DurationGet">
            <summary>Sets the shim of TestResult.get_Duration()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.DurationSetDouble">
            <summary>Sets the shim of TestResult.set_Duration(Double value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.EndTimeGet">
            <summary>Sets the shim of TestResult.get_EndTime()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.EndTimeSetDateTime">
            <summary>Sets the shim of TestResult.set_EndTime(DateTime value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.FullNameGet">
            <summary>Sets the shim of TestResult.get_FullName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.MessageGet">
            <summary>Sets the shim of TestResult.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.MessageSetString">
            <summary>Sets the shim of TestResult.set_Message(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.NameGet">
            <summary>Sets the shim of TestResult.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.OutWriterGet">
            <summary>Sets the shim of TestResult.get_OutWriter()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.OutWriterSetTextWriter">
            <summary>Sets the shim of TestResult.set_OutWriter(TextWriter value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.OutputGet">
            <summary>Sets the shim of TestResult.get_Output()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.PendingFailuresGet">
            <summary>Sets the shim of TestResult.get_PendingFailures()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.RecordAssertionAssertionResult">
            <summary>Sets the shim of TestResult.RecordAssertion(AssertionResult assertion)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.RecordAssertionAssertionStatusString">
            <summary>Sets the shim of TestResult.RecordAssertion(AssertionStatus status, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.RecordAssertionAssertionStatusStringString">
            <summary>Sets the shim of TestResult.RecordAssertion(AssertionStatus status, String message, String stackTrace)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.RecordExceptionException">
            <summary>Sets the shim of TestResult.RecordException(Exception ex)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.RecordExceptionExceptionFailureSite">
            <summary>Sets the shim of TestResult.RecordException(Exception ex, FailureSite site)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.RecordTearDownExceptionException">
            <summary>Sets the shim of TestResult.RecordTearDownException(Exception ex)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.RecordTestCompletion">
            <summary>Sets the shim of TestResult.RecordTestCompletion()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.ResultStateGet">
            <summary>Sets the shim of TestResult.get_ResultState()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.ResultStateSetResultState">
            <summary>Sets the shim of TestResult.set_ResultState(ResultState value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.SetResultResultState">
            <summary>Sets the shim of TestResult.SetResult(ResultState resultState)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.SetResultResultStateString">
            <summary>Sets the shim of TestResult.SetResult(ResultState resultState, String message)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.SetResultResultStateStringString">
            <summary>Sets the shim of TestResult.SetResult(ResultState resultState, String message, String stackTrace)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.StackTraceGet">
            <summary>Sets the shim of TestResult.get_StackTrace()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.StackTraceSetString">
            <summary>Sets the shim of TestResult.set_StackTrace(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.StartTimeGet">
            <summary>Sets the shim of TestResult.get_StartTime()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.StartTimeSetDateTime">
            <summary>Sets the shim of TestResult.set_StartTime(DateTime value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.TestAttachmentsGet">
            <summary>Sets the shim of TestResult.get_TestAttachments()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.TestGet">
            <summary>Sets the shim of TestResult.get_Test()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.TestSetITest">
            <summary>Sets the shim of TestResult.set_Test(ITest value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.ToXmlBoolean">
            <summary>Sets the shim of TestResult.ToXml(Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestResult.AllInstances.WorstAssertionStatusGet">
            <summary>Sets the shim of TestResult.get_WorstAssertionStatus()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestSuite">
            <summary>Shim type of NUnit.Framework.Internal.TestSuite</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestSuite.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestSuite.#ctor(NUnit.Framework.Internal.TestSuite)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestSuite.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestSuite.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestSuite.Bind(System.IComparable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestSuite.Bind(NUnit.Framework.Interfaces.ITest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestSuite.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.AddTest">
            <summary>Sets the shim of TestSuite.Add(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.AddToXmlTNodeBoolean">
            <summary>Sets the shim of TestSuite.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.ArgumentsGet">
            <summary>Sets the shim of TestSuite.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.CheckSetUpTearDownMethodsMethodInfoArray">
            <summary>Sets the shim of TestSuite.CheckSetUpTearDownMethods(MethodInfo[] methods)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.ConstructorITypeInfoObjectArray">
            <summary>Sets the shim of TestSuite.TestSuite(ITypeInfo fixtureType, Object[] arguments)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.ConstructorString">
            <summary>Sets the shim of TestSuite.TestSuite(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.ConstructorStringString">
            <summary>Sets the shim of TestSuite.TestSuite(String parentSuiteName, String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.ConstructorTestSuiteITestFilter">
            <summary>Sets the shim of TestSuite.TestSuite(TestSuite suite, ITestFilter filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.ConstructorType">
            <summary>Sets the shim of TestSuite.TestSuite(Type fixtureType)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.HasChildrenGet">
            <summary>Sets the shim of TestSuite.get_HasChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.MaintainTestOrderGet">
            <summary>Sets the shim of TestSuite.get_MaintainTestOrder()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.MaintainTestOrderSetBoolean">
            <summary>Sets the shim of TestSuite.set_MaintainTestOrder(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.MakeTestResult">
            <summary>Sets the shim of TestSuite.MakeTestResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.OneTimeSetUpMethodsGet">
            <summary>Sets the shim of TestSuite.get_OneTimeSetUpMethods()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.OneTimeSetUpMethodsSetMethodInfoArray">
            <summary>Sets the shim of TestSuite.set_OneTimeSetUpMethods(MethodInfo[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.OneTimeTearDownMethodsGet">
            <summary>Sets the shim of TestSuite.get_OneTimeTearDownMethods()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.OneTimeTearDownMethodsSetMethodInfoArray">
            <summary>Sets the shim of TestSuite.set_OneTimeTearDownMethods(MethodInfo[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.Sort">
            <summary>Sets the shim of TestSuite.Sort()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.TestCaseCountGet">
            <summary>Sets the shim of TestSuite.get_TestCaseCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.TestsGet">
            <summary>Sets the shim of TestSuite.get_Tests()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.XmlElementNameGet">
            <summary>Sets the shim of TestSuite.get_XmlElementName()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestSuite.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.AllInstances.AddTest">
            <summary>Sets the shim of TestSuite.Add(Test test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.AllInstances.AddToXmlTNodeBoolean">
            <summary>Sets the shim of TestSuite.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.AllInstances.ArgumentsGet">
            <summary>Sets the shim of TestSuite.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.AllInstances.CheckSetUpTearDownMethodsMethodInfoArray">
            <summary>Sets the shim of TestSuite.CheckSetUpTearDownMethods(MethodInfo[] methods)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.AllInstances.HasChildrenGet">
            <summary>Sets the shim of TestSuite.get_HasChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.AllInstances.MaintainTestOrderGet">
            <summary>Sets the shim of TestSuite.get_MaintainTestOrder()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.AllInstances.MaintainTestOrderSetBoolean">
            <summary>Sets the shim of TestSuite.set_MaintainTestOrder(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.AllInstances.MakeTestResult">
            <summary>Sets the shim of TestSuite.MakeTestResult()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.AllInstances.OneTimeSetUpMethodsGet">
            <summary>Sets the shim of TestSuite.get_OneTimeSetUpMethods()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.AllInstances.OneTimeSetUpMethodsSetMethodInfoArray">
            <summary>Sets the shim of TestSuite.set_OneTimeSetUpMethods(MethodInfo[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.AllInstances.OneTimeTearDownMethodsGet">
            <summary>Sets the shim of TestSuite.get_OneTimeTearDownMethods()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.AllInstances.OneTimeTearDownMethodsSetMethodInfoArray">
            <summary>Sets the shim of TestSuite.set_OneTimeTearDownMethods(MethodInfo[] value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.AllInstances.Sort">
            <summary>Sets the shim of TestSuite.Sort()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.AllInstances.TestCaseCountGet">
            <summary>Sets the shim of TestSuite.get_TestCaseCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.AllInstances.TestsGet">
            <summary>Sets the shim of TestSuite.get_Tests()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuite.AllInstances.XmlElementNameGet">
            <summary>Sets the shim of TestSuite.get_XmlElementName()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult">
            <summary>Shim type of NUnit.Framework.Internal.TestSuiteResult</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.#ctor(NUnit.Framework.Internal.TestSuiteResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.Bind(NUnit.Framework.Interfaces.ITestResult)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.AddResultITestResult">
            <summary>Sets the shim of TestSuiteResult.AddResult(ITestResult result)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.ChildrenGet">
            <summary>Sets the shim of TestSuiteResult.get_Children()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.ConstructorTestSuite">
            <summary>Sets the shim of TestSuiteResult.TestSuiteResult(TestSuite suite)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.FailCountGet">
            <summary>Sets the shim of TestSuiteResult.get_FailCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.HasChildrenGet">
            <summary>Sets the shim of TestSuiteResult.get_HasChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.InconclusiveCountGet">
            <summary>Sets the shim of TestSuiteResult.get_InconclusiveCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.MergeChildResultITestResult">
            <summary>Sets the shim of TestSuiteResult.MergeChildResult(ITestResult childResult)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.PassCountGet">
            <summary>Sets the shim of TestSuiteResult.get_PassCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.SkipCountGet">
            <summary>Sets the shim of TestSuiteResult.get_SkipCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.UpdateResultStateResultState">
            <summary>Sets the shim of TestSuiteResult.UpdateResultState(ResultState childResultState)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.WarningCountGet">
            <summary>Sets the shim of TestSuiteResult.get_WarningCount()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.AllInstances.AddResultITestResult">
            <summary>Sets the shim of TestSuiteResult.AddResult(ITestResult result)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.AllInstances.ChildrenGet">
            <summary>Sets the shim of TestSuiteResult.get_Children()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.AllInstances.FailCountGet">
            <summary>Sets the shim of TestSuiteResult.get_FailCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.AllInstances.HasChildrenGet">
            <summary>Sets the shim of TestSuiteResult.get_HasChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.AllInstances.InconclusiveCountGet">
            <summary>Sets the shim of TestSuiteResult.get_InconclusiveCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.AllInstances.MergeChildResultITestResult">
            <summary>Sets the shim of TestSuiteResult.MergeChildResult(ITestResult childResult)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.AllInstances.PassCountGet">
            <summary>Sets the shim of TestSuiteResult.get_PassCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.AllInstances.SkipCountGet">
            <summary>Sets the shim of TestSuiteResult.get_SkipCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.AllInstances.UpdateResultStateResultState">
            <summary>Sets the shim of TestSuiteResult.UpdateResultState(ResultState childResultState)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTestSuiteResult.AllInstances.WarningCountGet">
            <summary>Sets the shim of TestSuiteResult.get_WarningCount()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter">
            <summary>Shim type of NUnit.Framework.Internal.TextMessageWriter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.#ctor(NUnit.Framework.Internal.TextMessageWriter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.Constructor">
            <summary>Sets the shim of TextMessageWriter.TextMessageWriter()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.ConstructorStringObjectArray">
            <summary>Sets the shim of TextMessageWriter.TextMessageWriter(String userMessage, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.DisplayDifferencesConstraintResult">
            <summary>Sets the shim of TextMessageWriter.DisplayDifferences(ConstraintResult result)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.DisplayDifferencesObjectObject">
            <summary>Sets the shim of TextMessageWriter.DisplayDifferences(Object expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.DisplayDifferencesObjectObjectTolerance">
            <summary>Sets the shim of TextMessageWriter.DisplayDifferences(Object expected, Object actual, Tolerance tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.DisplayStringDifferencesStringStringInt32BooleanBoolean">
            <summary>Sets the shim of TextMessageWriter.DisplayStringDifferences(String expected, String actual, Int32 mismatch, Boolean ignoreCase, Boolean clipping)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.MaxLineLengthGet">
            <summary>Sets the shim of TextMessageWriter.get_MaxLineLength()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.MaxLineLengthSetInt32">
            <summary>Sets the shim of TextMessageWriter.set_MaxLineLength(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.ResolveTypeNameDifferenceObjectObjectStringOutStringOut">
            <summary>Sets the shim of TextMessageWriter.ResolveTypeNameDifference(Object expected, Object actual, String&amp; expectedType, String&amp; actualType)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.StaticConstructor">
            <summary>Sets the shim of TextMessageWriter.TextMessageWriter()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.WriteActualLineConstraintResult">
            <summary>Sets the shim of TextMessageWriter.WriteActualLine(ConstraintResult result)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.WriteActualLineObject">
            <summary>Sets the shim of TextMessageWriter.WriteActualLine(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.WriteActualValueObject">
            <summary>Sets the shim of TextMessageWriter.WriteActualValue(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.WriteCaretLineInt32">
            <summary>Sets the shim of TextMessageWriter.WriteCaretLine(Int32 mismatch)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.WriteCollectionElementsIEnumerableInt64Int32">
            <summary>Sets the shim of TextMessageWriter.WriteCollectionElements(IEnumerable collection, Int64 start, Int32 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.WriteExpectedLineConstraintResult">
            <summary>Sets the shim of TextMessageWriter.WriteExpectedLine(ConstraintResult result)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.WriteExpectedLineObject">
            <summary>Sets the shim of TextMessageWriter.WriteExpectedLine(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.WriteExpectedLineObjectTolerance">
            <summary>Sets the shim of TextMessageWriter.WriteExpectedLine(Object expected, Tolerance tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.WriteMessageLineInt32StringObjectArray">
            <summary>Sets the shim of TextMessageWriter.WriteMessageLine(Int32 level, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.WriteValueObject">
            <summary>Sets the shim of TextMessageWriter.WriteValue(Object val)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.AllInstances.DisplayDifferencesConstraintResult">
            <summary>Sets the shim of TextMessageWriter.DisplayDifferences(ConstraintResult result)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.AllInstances.DisplayDifferencesObjectObject">
            <summary>Sets the shim of TextMessageWriter.DisplayDifferences(Object expected, Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.AllInstances.DisplayDifferencesObjectObjectTolerance">
            <summary>Sets the shim of TextMessageWriter.DisplayDifferences(Object expected, Object actual, Tolerance tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.AllInstances.DisplayStringDifferencesStringStringInt32BooleanBoolean">
            <summary>Sets the shim of TextMessageWriter.DisplayStringDifferences(String expected, String actual, Int32 mismatch, Boolean ignoreCase, Boolean clipping)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.AllInstances.MaxLineLengthGet">
            <summary>Sets the shim of TextMessageWriter.get_MaxLineLength()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.AllInstances.MaxLineLengthSetInt32">
            <summary>Sets the shim of TextMessageWriter.set_MaxLineLength(Int32 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.AllInstances.ResolveTypeNameDifferenceObjectObjectStringOutStringOut">
            <summary>Sets the shim of TextMessageWriter.ResolveTypeNameDifference(Object expected, Object actual, String&amp; expectedType, String&amp; actualType)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.AllInstances.WriteActualLineConstraintResult">
            <summary>Sets the shim of TextMessageWriter.WriteActualLine(ConstraintResult result)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.AllInstances.WriteActualLineObject">
            <summary>Sets the shim of TextMessageWriter.WriteActualLine(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.AllInstances.WriteActualValueObject">
            <summary>Sets the shim of TextMessageWriter.WriteActualValue(Object actual)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.AllInstances.WriteCaretLineInt32">
            <summary>Sets the shim of TextMessageWriter.WriteCaretLine(Int32 mismatch)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.AllInstances.WriteCollectionElementsIEnumerableInt64Int32">
            <summary>Sets the shim of TextMessageWriter.WriteCollectionElements(IEnumerable collection, Int64 start, Int32 max)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.AllInstances.WriteExpectedLineConstraintResult">
            <summary>Sets the shim of TextMessageWriter.WriteExpectedLine(ConstraintResult result)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.AllInstances.WriteExpectedLineObject">
            <summary>Sets the shim of TextMessageWriter.WriteExpectedLine(Object expected)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.AllInstances.WriteExpectedLineObjectTolerance">
            <summary>Sets the shim of TextMessageWriter.WriteExpectedLine(Object expected, Tolerance tolerance)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.AllInstances.WriteMessageLineInt32StringObjectArray">
            <summary>Sets the shim of TextMessageWriter.WriteMessageLine(Int32 level, String message, Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTextMessageWriter.AllInstances.WriteValueObject">
            <summary>Sets the shim of TextMessageWriter.WriteValue(Object val)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimThreadUtility">
            <summary>Shim type of NUnit.Framework.Internal.ThreadUtility</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimThreadUtility.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimThreadUtility.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimThreadUtility.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimThreadUtility.AbortThreadInt32">
            <summary>Sets the shim of ThreadUtility.Abort(Thread thread, Int32 nativeId)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimThreadUtility.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimThreadUtility.CheckOnAbortingThreadObject">
            <summary>Sets the shim of ThreadUtility.CheckOnAbortingThread(Object state)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimThreadUtility.DelayInt32WaitCallbackObject">
            <summary>Sets the shim of ThreadUtility.Delay(Int32 milliseconds, WaitCallback threadPoolWork, Object state)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimThreadUtility.DislodgeThreadInNativeMessageWaitThreadInt32">
            <summary>Sets the shim of ThreadUtility.DislodgeThreadInNativeMessageWait(Thread thread, Int32 nativeId)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimThreadUtility.GetCurrentThreadNativeId">
            <summary>Sets the shim of ThreadUtility.GetCurrentThreadNativeId()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimThreadUtility.KillThreadInt32">
            <summary>Sets the shim of ThreadUtility.Kill(Thread thread, Int32 nativeId)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimThreadUtility.KillThreadObjectInt32">
            <summary>Sets the shim of ThreadUtility.Kill(Thread thread, Object stateInfo, Int32 nativeId)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimThreadUtility.PostThreadCloseMessageInt32">
            <summary>Sets the shim of ThreadUtility.PostThreadCloseMessage(Int32 nativeId)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTypeHelper">
            <summary>Shim type of NUnit.Framework.Internal.TypeHelper</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTypeHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTypeHelper.#ctor(NUnit.Framework.Internal.TypeHelper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTypeHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTypeHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeHelper.BestCommonTypeTypeType">
            <summary>Sets the shim of TypeHelper.BestCommonType(Type type1, Type type2)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeHelper.CanDeduceTypeArgsFromArgsTypeObjectArrayTypeArrayRef">
            <summary>Sets the shim of TypeHelper.CanDeduceTypeArgsFromArgs(Type type, Object[] arglist, Type[]&amp; typeArgsOut)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeHelper.Constructor">
            <summary>Sets the shim of TypeHelper.TypeHelper()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeHelper.ConvertArgumentListObjectArrayIParameterInfoArray">
            <summary>Sets the shim of TypeHelper.ConvertArgumentList(Object[] arglist, IParameterInfo[] parameters)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeHelper.GetDeclaredInterfacesType">
            <summary>Sets the shim of TypeHelper.GetDeclaredInterfaces(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeHelper.GetDisplayNameType">
            <summary>Sets the shim of TypeHelper.GetDisplayName(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeHelper.GetDisplayNameTypeObjectArray">
            <summary>Sets the shim of TypeHelper.GetDisplayName(Type type, Object[] arglist)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeHelper.IsNumericType">
            <summary>Sets the shim of TypeHelper.IsNumeric(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeHelper.StaticConstructor">
            <summary>Sets the shim of TypeHelper.TypeHelper()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTypeHelper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTypeWrapper">
            <summary>Shim type of NUnit.Framework.Internal.TypeWrapper</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.#ctor(NUnit.Framework.Internal.TypeWrapper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.Bind(NUnit.Framework.Interfaces.IReflectionInfo)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.Bind(NUnit.Framework.Interfaces.ITypeInfo)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.GetCustomAttributesOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0[]})">
            <summary>Sets the shim of TypeWrapper.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.IsDefinedOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,System.Boolean})">
            <summary>Sets the shim of TypeWrapper.IsDefined(Boolean inherit)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AssemblyGet">
            <summary>Sets the shim of TypeWrapper.get_Assembly()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.BaseTypeGet">
            <summary>Sets the shim of TypeWrapper.get_BaseType()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.ConstructObjectArray">
            <summary>Sets the shim of TypeWrapper.Construct(Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.ConstructorType">
            <summary>Sets the shim of TypeWrapper.TypeWrapper(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.ContainsGenericParametersGet">
            <summary>Sets the shim of TypeWrapper.get_ContainsGenericParameters()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.FullNameGet">
            <summary>Sets the shim of TypeWrapper.get_FullName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.GetConstructorTypeArray">
            <summary>Sets the shim of TypeWrapper.GetConstructor(Type[] argTypes)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.GetDisplayName">
            <summary>Sets the shim of TypeWrapper.GetDisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.GetDisplayNameObjectArray">
            <summary>Sets the shim of TypeWrapper.GetDisplayName(Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.GetGenericTypeDefinition">
            <summary>Sets the shim of TypeWrapper.GetGenericTypeDefinition()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.GetMethodsBindingFlags">
            <summary>Sets the shim of TypeWrapper.GetMethods(BindingFlags flags)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.HasConstructorTypeArray">
            <summary>Sets the shim of TypeWrapper.HasConstructor(Type[] argTypes)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.HasMethodWithAttributeType">
            <summary>Sets the shim of TypeWrapper.HasMethodWithAttribute(Type attributeType)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.IsAbstractGet">
            <summary>Sets the shim of TypeWrapper.get_IsAbstract()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.IsGenericTypeDefinitionGet">
            <summary>Sets the shim of TypeWrapper.get_IsGenericTypeDefinition()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.IsGenericTypeGet">
            <summary>Sets the shim of TypeWrapper.get_IsGenericType()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.IsSealedGet">
            <summary>Sets the shim of TypeWrapper.get_IsSealed()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.IsStaticClassGet">
            <summary>Sets the shim of TypeWrapper.get_IsStaticClass()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.IsTypeType">
            <summary>Sets the shim of TypeWrapper.IsType(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.MakeGenericTypeTypeArray">
            <summary>Sets the shim of TypeWrapper.MakeGenericType(Type[] typeArgs)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.NameGet">
            <summary>Sets the shim of TypeWrapper.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.NamespaceGet">
            <summary>Sets the shim of TypeWrapper.get_Namespace()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.ToString">
            <summary>Sets the shim of TypeWrapper.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.TypeGet">
            <summary>Sets the shim of TypeWrapper.get_Type()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.TypeSetType">
            <summary>Sets the shim of TypeWrapper.set_Type(Type value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.GetCustomAttributesOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Internal.TypeWrapper,System.Boolean,``0[]})">
            <summary>Sets the shim of TypeWrapper.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.IsDefinedOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{NUnit.Framework.Internal.TypeWrapper,System.Boolean,System.Boolean})">
            <summary>Sets the shim of TypeWrapper.IsDefined(Boolean inherit)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.AssemblyGet">
            <summary>Sets the shim of TypeWrapper.get_Assembly()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.BaseTypeGet">
            <summary>Sets the shim of TypeWrapper.get_BaseType()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.ConstructObjectArray">
            <summary>Sets the shim of TypeWrapper.Construct(Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.ContainsGenericParametersGet">
            <summary>Sets the shim of TypeWrapper.get_ContainsGenericParameters()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.FullNameGet">
            <summary>Sets the shim of TypeWrapper.get_FullName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.GetConstructorTypeArray">
            <summary>Sets the shim of TypeWrapper.GetConstructor(Type[] argTypes)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.GetDisplayName">
            <summary>Sets the shim of TypeWrapper.GetDisplayName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.GetDisplayNameObjectArray">
            <summary>Sets the shim of TypeWrapper.GetDisplayName(Object[] args)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.GetGenericTypeDefinition">
            <summary>Sets the shim of TypeWrapper.GetGenericTypeDefinition()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.GetMethodsBindingFlags">
            <summary>Sets the shim of TypeWrapper.GetMethods(BindingFlags flags)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.HasConstructorTypeArray">
            <summary>Sets the shim of TypeWrapper.HasConstructor(Type[] argTypes)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.HasMethodWithAttributeType">
            <summary>Sets the shim of TypeWrapper.HasMethodWithAttribute(Type attributeType)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.IsAbstractGet">
            <summary>Sets the shim of TypeWrapper.get_IsAbstract()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.IsGenericTypeDefinitionGet">
            <summary>Sets the shim of TypeWrapper.get_IsGenericTypeDefinition()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.IsGenericTypeGet">
            <summary>Sets the shim of TypeWrapper.get_IsGenericType()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.IsSealedGet">
            <summary>Sets the shim of TypeWrapper.get_IsSealed()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.IsStaticClassGet">
            <summary>Sets the shim of TypeWrapper.get_IsStaticClass()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.IsTypeType">
            <summary>Sets the shim of TypeWrapper.IsType(Type type)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.MakeGenericTypeTypeArray">
            <summary>Sets the shim of TypeWrapper.MakeGenericType(Type[] typeArgs)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.NameGet">
            <summary>Sets the shim of TypeWrapper.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.NamespaceGet">
            <summary>Sets the shim of TypeWrapper.get_Namespace()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.ToString01">
            <summary>Sets the shim of TypeWrapper.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.TypeGet">
            <summary>Sets the shim of TypeWrapper.get_Type()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.ShimTypeWrapper.AllInstances.TypeSetType">
            <summary>Sets the shim of TypeWrapper.set_Type(Type value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubCultureDetector">
            <summary>Stub type of NUnit.Framework.Internal.CultureDetector</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubCultureDetector.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubCultureDetector.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubCultureDetector.InitializeStub">
            <summary>Initializes a new instance of type StubCultureDetector</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubCultureDetector.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubCultureDetector.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubCultureDetector.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubExceptionHelper">
            <summary>Stub type of NUnit.Framework.Internal.ExceptionHelper</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubExceptionHelper.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubExceptionHelper.InitializeStub">
            <summary>Initializes a new instance of type StubExceptionHelper</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubExceptionHelper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubExceptionHelper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubExceptionHelper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubGenericMethodHelper">
            <summary>Stub type of NUnit.Framework.Internal.GenericMethodHelper</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubGenericMethodHelper.#ctor(System.Reflection.MethodInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubGenericMethodHelper.InitializeStub">
            <summary>Initializes a new instance of type StubGenericMethodHelper</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubGenericMethodHelper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubGenericMethodHelper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubGenericMethodHelper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubILogger">
            <summary>Stub type of NUnit.Framework.Internal.ILogger</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubILogger.#ctor">
            <summary>Initializes a new instance of type StubILogger</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubILogger.DebugString">
            <summary>Sets the stub of ILogger.Debug(String message)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubILogger.DebugStringObjectArray">
            <summary>Sets the stub of ILogger.Debug(String message, Object[] args)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubILogger.ErrorString">
            <summary>Sets the stub of ILogger.Error(String message)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubILogger.ErrorStringObjectArray">
            <summary>Sets the stub of ILogger.Error(String message, Object[] args)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubILogger.InfoString">
            <summary>Sets the stub of ILogger.Info(String message)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubILogger.InfoStringObjectArray">
            <summary>Sets the stub of ILogger.Info(String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubILogger.n::NUnit#Framework#Internal#ILogger#Debug(System.String)">
            <summary>Sets the stub of ILogger.Debug(String message)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubILogger.n::NUnit#Framework#Internal#ILogger#Debug(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.Debug(String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubILogger.n::NUnit#Framework#Internal#ILogger#Error(System.String)">
            <summary>Sets the stub of ILogger.Error(String message)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubILogger.n::NUnit#Framework#Internal#ILogger#Error(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.Error(String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubILogger.n::NUnit#Framework#Internal#ILogger#Info(System.String)">
            <summary>Sets the stub of ILogger.Info(String message)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubILogger.n::NUnit#Framework#Internal#ILogger#Info(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.Info(String message, Object[] args)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubILogger.n::NUnit#Framework#Internal#ILogger#Warning(System.String)">
            <summary>Sets the stub of ILogger.Warning(String message)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubILogger.n::NUnit#Framework#Internal#ILogger#Warning(System.String,System.Object[])">
            <summary>Sets the stub of ILogger.Warning(String message, Object[] args)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubILogger.WarningString">
            <summary>Sets the stub of ILogger.Warning(String message)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubILogger.WarningStringObjectArray">
            <summary>Sets the stub of ILogger.Warning(String message, Object[] args)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter">
            <summary>Stub type of NUnit.Framework.Internal.InternalTraceWriter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.#ctor(System.IO.TextWriter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.AttachBackingFieldToNewLine">
            <summary>Attaches delegates to emulate StubInternalTraceWriter.NewLine as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Close">
            <summary>Sets the stub of TextWriter.Close()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Close01">
            <summary>Sets the stub of TextWriter.Close()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Dispose(System.Boolean)">
            <summary>Sets the stub of InternalTraceWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.DisposeBoolean">
            <summary>Sets the stub of InternalTraceWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.EncodingGet">
            <summary>Sets the stub of InternalTraceWriter.get_Encoding()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Flush">
            <summary>Sets the stub of InternalTraceWriter.Flush()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Flush01">
            <summary>Sets the stub of InternalTraceWriter.Flush()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.FlushAsync">
            <summary>Sets the stub of TextWriter.FlushAsync()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.FlushAsync01">
            <summary>Sets the stub of TextWriter.FlushAsync()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.FormatProviderGet">
            <summary>Sets the stub of TextWriter.get_FormatProvider()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.InitializeStub">
            <summary>Initializes a new instance of type StubInternalTraceWriter</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.NewLineGet">
            <summary>Sets the stub of TextWriter.get_NewLine()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.NewLineSetString">
            <summary>Sets the stub of TextWriter.set_NewLine(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Write(System.Char[])">
            <summary>Sets the stub of TextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Write(System.Boolean)">
            <summary>Sets the stub of TextWriter.Write(Boolean value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Write(System.Object)">
            <summary>Sets the stub of TextWriter.Write(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Write(System.Char)">
            <summary>Sets the stub of InternalTraceWriter.Write(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Write(System.Decimal)">
            <summary>Sets the stub of TextWriter.Write(Decimal value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Write(System.Double)">
            <summary>Sets the stub of TextWriter.Write(Double value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Write(System.Int32)">
            <summary>Sets the stub of TextWriter.Write(Int32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Write(System.Int64)">
            <summary>Sets the stub of TextWriter.Write(Int64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Write(System.Single)">
            <summary>Sets the stub of TextWriter.Write(Single value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Write(System.UInt32)">
            <summary>Sets the stub of TextWriter.Write(UInt32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Write(System.UInt64)">
            <summary>Sets the stub of TextWriter.Write(UInt64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Write(System.String)">
            <summary>Sets the stub of InternalTraceWriter.Write(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Write(System.String,System.Object)">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Write(System.String,System.Object[])">
            <summary>Sets the stub of TextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of TextWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Write(System.String,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteAsync(System.String)">
            <summary>Sets the stub of TextWriter.WriteAsync(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteAsync(System.Char)">
            <summary>Sets the stub of TextWriter.WriteAsync(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of TextWriter.WriteAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteAsyncChar">
            <summary>Sets the stub of TextWriter.WriteAsync(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteAsyncCharArrayInt32Int32">
            <summary>Sets the stub of TextWriter.WriteAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteAsyncString">
            <summary>Sets the stub of TextWriter.WriteAsync(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteBoolean">
            <summary>Sets the stub of TextWriter.Write(Boolean value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteChar">
            <summary>Sets the stub of InternalTraceWriter.Write(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteCharArray">
            <summary>Sets the stub of TextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteCharArrayInt32Int32">
            <summary>Sets the stub of TextWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteDecimal">
            <summary>Sets the stub of TextWriter.Write(Decimal value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteDouble">
            <summary>Sets the stub of TextWriter.Write(Double value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteInt32">
            <summary>Sets the stub of TextWriter.Write(Int32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteInt64">
            <summary>Sets the stub of TextWriter.Write(Int64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLine">
            <summary>Sets the stub of TextWriter.WriteLine()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLine(System.Boolean)">
            <summary>Sets the stub of TextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLine(System.Decimal)">
            <summary>Sets the stub of TextWriter.WriteLine(Decimal value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLine(System.Int32)">
            <summary>Sets the stub of TextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLine(System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLine(System.Char)">
            <summary>Sets the stub of TextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLine(System.Double)">
            <summary>Sets the stub of TextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLine(System.Int64)">
            <summary>Sets the stub of TextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLine(System.String)">
            <summary>Sets the stub of InternalTraceWriter.WriteLine(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLine(System.Single)">
            <summary>Sets the stub of TextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLine(System.Char[])">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLine(System.UInt32)">
            <summary>Sets the stub of TextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLine(System.UInt64)">
            <summary>Sets the stub of TextWriter.WriteLine(UInt64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLine(System.String,System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLine(System.String,System.Object[])">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLine(System.String,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLine01">
            <summary>Sets the stub of TextWriter.WriteLine()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineAsync">
            <summary>Sets the stub of TextWriter.WriteLineAsync()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineAsync(System.Char)">
            <summary>Sets the stub of TextWriter.WriteLineAsync(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineAsync(System.String)">
            <summary>Sets the stub of TextWriter.WriteLineAsync(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of TextWriter.WriteLineAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineAsync01">
            <summary>Sets the stub of TextWriter.WriteLineAsync()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineAsyncChar">
            <summary>Sets the stub of TextWriter.WriteLineAsync(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineAsyncCharArrayInt32Int32">
            <summary>Sets the stub of TextWriter.WriteLineAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineAsyncString">
            <summary>Sets the stub of TextWriter.WriteLineAsync(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineBoolean">
            <summary>Sets the stub of TextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineChar">
            <summary>Sets the stub of TextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineCharArray">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineCharArrayInt32Int32">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineDecimal">
            <summary>Sets the stub of TextWriter.WriteLine(Decimal value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineDouble">
            <summary>Sets the stub of TextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineInt32">
            <summary>Sets the stub of TextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineInt64">
            <summary>Sets the stub of TextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineObject">
            <summary>Sets the stub of TextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineSingle">
            <summary>Sets the stub of TextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineString">
            <summary>Sets the stub of InternalTraceWriter.WriteLine(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineStringObject">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineStringObjectArray">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineStringObjectObject">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineStringObjectObjectObject">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineUInt32">
            <summary>Sets the stub of TextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteLineUInt64">
            <summary>Sets the stub of TextWriter.WriteLine(UInt64 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteObject">
            <summary>Sets the stub of TextWriter.Write(Object value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteSingle">
            <summary>Sets the stub of TextWriter.Write(Single value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteString">
            <summary>Sets the stub of InternalTraceWriter.Write(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteStringObject">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteStringObjectArray">
            <summary>Sets the stub of TextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteStringObjectObject">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteStringObjectObjectObject">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteUInt32">
            <summary>Sets the stub of TextWriter.Write(UInt32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.WriteUInt64">
            <summary>Sets the stub of TextWriter.Write(UInt64 value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.Encoding">
            <summary>Sets the stub of InternalTraceWriter.get_Encoding()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.FormatProvider">
            <summary>Sets the stub of TextWriter.get_FormatProvider()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubInternalTraceWriter.NewLine">
            <summary>Sets the stub of TextWriter.get_NewLine()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException">
            <summary>Stub type of NUnit.Framework.Internal.InvalidDataSourceException</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubInvalidDataSourceException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubInvalidDataSourceException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.InitializeStub">
            <summary>Initializes a new instance of type StubInvalidDataSourceException</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubInvalidDataSourceException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException">
            <summary>Stub type of NUnit.Framework.Internal.InvalidTestFixtureException</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubInvalidTestFixtureException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubInvalidTestFixtureException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.InitializeStub">
            <summary>Initializes a new instance of type StubInvalidTestFixtureException</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubInvalidTestFixtureException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubLogger">
            <summary>Stub type of NUnit.Framework.Internal.Logger</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubLogger.#ctor(System.String,NUnit.Framework.Internal.InternalTraceLevel,System.IO.TextWriter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubLogger.InitializeStub">
            <summary>Initializes a new instance of type StubLogger</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubLogger.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubLogger.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubLogger.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubMethodWrapper">
            <summary>Stub type of NUnit.Framework.Internal.MethodWrapper</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubMethodWrapper.#ctor(System.Type,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubMethodWrapper.#ctor(System.Type,System.Reflection.MethodInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubMethodWrapper.InitializeStub">
            <summary>Initializes a new instance of type StubMethodWrapper</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubMethodWrapper.ToString">
            <summary>Sets the stub of MethodWrapper.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubMethodWrapper.ToString01">
            <summary>Sets the stub of MethodWrapper.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubMethodWrapper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubMethodWrapper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubMethodWrapper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubNUnitException">
            <summary>Stub type of NUnit.Framework.Internal.NUnitException</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubNUnitException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubNUnitException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubNUnitException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubNUnitException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubNUnitException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubNUnitException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubNUnitException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubNUnitException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubNUnitException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubNUnitException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubNUnitException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubNUnitException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubNUnitException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubNUnitException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubNUnitException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubNUnitException.InitializeStub">
            <summary>Initializes a new instance of type StubNUnitException</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubNUnitException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubNUnitException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubNUnitException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubNUnitException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubNUnitException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubNUnitException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubNUnitException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubNUnitException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubNUnitException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubNUnitException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubNUnitException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubNUnitException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubNUnitException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubNUnitException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubOSPlatform">
            <summary>Stub type of NUnit.Framework.Internal.OSPlatform</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubOSPlatform.#ctor(System.PlatformID,System.Version)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubOSPlatform.#ctor(System.PlatformID,System.Version,NUnit.Framework.Internal.OSPlatform.ProductType)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubOSPlatform.InitializeStub">
            <summary>Initializes a new instance of type StubOSPlatform</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubOSPlatform.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubOSPlatform.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubOSPlatform.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubParameterWrapper">
            <summary>Stub type of NUnit.Framework.Internal.ParameterWrapper</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubParameterWrapper.#ctor(NUnit.Framework.Interfaces.IMethodInfo,System.Reflection.ParameterInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubParameterWrapper.InitializeStub">
            <summary>Initializes a new instance of type StubParameterWrapper</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterWrapper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterWrapper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterWrapper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite">
            <summary>Stub type of NUnit.Framework.Internal.ParameterizedFixtureSuite</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.#ctor(NUnit.Framework.Interfaces.ITypeInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of TestSuite.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.AddToXmlTNodeBoolean">
            <summary>Sets the stub of TestSuite.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.ArgumentsGet">
            <summary>Sets the stub of TestSuite.get_Arguments()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.AttachBackingFieldToFixture">
            <summary>Attaches delegates to emulate StubParameterizedFixtureSuite.Fixture as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.FixtureGet">
            <summary>Sets the stub of Test.get_Fixture()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.FixtureSetObject">
            <summary>Sets the stub of Test.set_Fixture(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.GetCustomAttributes``1(System.Boolean)">
            <summary>Sets the stub of Test.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.GetCustomAttributesOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0[]})">
            <summary>Sets stubs of GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.HasChildrenGet">
            <summary>Sets the stub of TestSuite.get_HasChildren()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.InitializeStub">
            <summary>Initializes a new instance of type StubParameterizedFixtureSuite</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.MakeTestResult">
            <summary>Sets the stub of TestSuite.MakeTestResult()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.MakeTestResult01">
            <summary>Sets the stub of TestSuite.MakeTestResult()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.MethodNameGet">
            <summary>Sets the stub of Test.get_MethodName()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.TestCaseCountGet">
            <summary>Sets the stub of TestSuite.get_TestCaseCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.TestTypeGet">
            <summary>Sets the stub of ParameterizedFixtureSuite.get_TestType()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.TestsGet">
            <summary>Sets the stub of TestSuite.get_Tests()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.XmlElementNameGet">
            <summary>Sets the stub of TestSuite.get_XmlElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.Arguments">
            <summary>Sets the stub of TestSuite.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.Fixture">
            <summary>Sets the stub of Test.get_Fixture()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.HasChildren">
            <summary>Sets the stub of TestSuite.get_HasChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.MethodName">
            <summary>Sets the stub of Test.get_MethodName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.TestCaseCount">
            <summary>Sets the stub of TestSuite.get_TestCaseCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.TestType">
            <summary>Sets the stub of ParameterizedFixtureSuite.get_TestType()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.Tests">
            <summary>Sets the stub of TestSuite.get_Tests()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterizedFixtureSuite.XmlElementName">
            <summary>Sets the stub of TestSuite.get_XmlElementName()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite">
            <summary>Stub type of NUnit.Framework.Internal.ParameterizedMethodSuite</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.#ctor(NUnit.Framework.Interfaces.IMethodInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of TestSuite.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.AddToXmlTNodeBoolean">
            <summary>Sets the stub of TestSuite.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.ArgumentsGet">
            <summary>Sets the stub of TestSuite.get_Arguments()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.AttachBackingFieldToFixture">
            <summary>Attaches delegates to emulate StubParameterizedMethodSuite.Fixture as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.FixtureGet">
            <summary>Sets the stub of Test.get_Fixture()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.FixtureSetObject">
            <summary>Sets the stub of Test.set_Fixture(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.GetCustomAttributes``1(System.Boolean)">
            <summary>Sets the stub of Test.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.GetCustomAttributesOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0[]})">
            <summary>Sets stubs of GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.HasChildrenGet">
            <summary>Sets the stub of TestSuite.get_HasChildren()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.InitializeStub">
            <summary>Initializes a new instance of type StubParameterizedMethodSuite</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.MakeTestResult">
            <summary>Sets the stub of TestSuite.MakeTestResult()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.MakeTestResult01">
            <summary>Sets the stub of TestSuite.MakeTestResult()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.MethodNameGet">
            <summary>Sets the stub of Test.get_MethodName()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.TestCaseCountGet">
            <summary>Sets the stub of TestSuite.get_TestCaseCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.TestTypeGet">
            <summary>Sets the stub of ParameterizedMethodSuite.get_TestType()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.TestsGet">
            <summary>Sets the stub of TestSuite.get_Tests()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.XmlElementNameGet">
            <summary>Sets the stub of TestSuite.get_XmlElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.Arguments">
            <summary>Sets the stub of TestSuite.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.Fixture">
            <summary>Sets the stub of Test.get_Fixture()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.HasChildren">
            <summary>Sets the stub of TestSuite.get_HasChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.MethodName">
            <summary>Sets the stub of Test.get_MethodName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.TestCaseCount">
            <summary>Sets the stub of TestSuite.get_TestCaseCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.TestType">
            <summary>Sets the stub of ParameterizedMethodSuite.get_TestType()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.Tests">
            <summary>Sets the stub of TestSuite.get_Tests()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubParameterizedMethodSuite.XmlElementName">
            <summary>Sets the stub of TestSuite.get_XmlElementName()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubPlatformHelper">
            <summary>Stub type of NUnit.Framework.Internal.PlatformHelper</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubPlatformHelper.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubPlatformHelper.#ctor(NUnit.Framework.Internal.OSPlatform,NUnit.Framework.Internal.RuntimeFramework)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubPlatformHelper.InitializeStub">
            <summary>Initializes a new instance of type StubPlatformHelper</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubPlatformHelper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubPlatformHelper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubPlatformHelper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubPropertyBag">
            <summary>Stub type of NUnit.Framework.Internal.PropertyBag</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubPropertyBag.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubPropertyBag.InitializeStub">
            <summary>Initializes a new instance of type StubPropertyBag</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubPropertyBag.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubPropertyBag.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubPropertyBag.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubPropertyNames">
            <summary>Stub type of NUnit.Framework.Internal.PropertyNames</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubPropertyNames.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubPropertyNames.InitializeStub">
            <summary>Initializes a new instance of type StubPropertyNames</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubPropertyNames.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubPropertyNames.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubPropertyNames.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubRandomizer">
            <summary>Stub type of NUnit.Framework.Internal.Randomizer</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubRandomizer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubRandomizer.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubRandomizer.InitializeStub">
            <summary>Initializes a new instance of type StubRandomizer</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubRandomizer.Next">
            <summary>Sets the stub of Random.Next()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubRandomizer.Next(System.Int32)">
            <summary>Sets the stub of Random.Next(Int32 maxValue)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubRandomizer.Next(System.Int32,System.Int32)">
            <summary>Sets the stub of Random.Next(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubRandomizer.Next01">
            <summary>Sets the stub of Random.Next()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubRandomizer.NextBytes(System.Byte[])">
            <summary>Sets the stub of Random.NextBytes(Byte[] buffer)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubRandomizer.NextBytesByteArray">
            <summary>Sets the stub of Random.NextBytes(Byte[] buffer)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubRandomizer.NextDouble">
            <summary>Sets the stub of Random.NextDouble()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubRandomizer.NextDouble01">
            <summary>Sets the stub of Random.NextDouble()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubRandomizer.NextInt32">
            <summary>Sets the stub of Random.Next(Int32 maxValue)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubRandomizer.NextInt32Int32">
            <summary>Sets the stub of Random.Next(Int32 minValue, Int32 maxValue)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubRandomizer.Sample">
            <summary>Sets the stub of Random.Sample()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubRandomizer.Sample01">
            <summary>Sets the stub of Random.Sample()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubRandomizer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubRandomizer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubRandomizer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubSetUpFixture">
            <summary>Stub type of NUnit.Framework.Internal.SetUpFixture</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubSetUpFixture.#ctor(NUnit.Framework.Interfaces.ITypeInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubSetUpFixture.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of TestSuite.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubSetUpFixture.AddToXmlTNodeBoolean">
            <summary>Sets the stub of TestSuite.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubSetUpFixture.ArgumentsGet">
            <summary>Sets the stub of TestSuite.get_Arguments()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubSetUpFixture.AttachBackingFieldToFixture">
            <summary>Attaches delegates to emulate StubSetUpFixture.Fixture as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubSetUpFixture.FixtureGet">
            <summary>Sets the stub of Test.get_Fixture()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubSetUpFixture.FixtureSetObject">
            <summary>Sets the stub of Test.set_Fixture(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubSetUpFixture.GetCustomAttributes``1(System.Boolean)">
            <summary>Sets the stub of Test.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubSetUpFixture.GetCustomAttributesOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0[]})">
            <summary>Sets stubs of GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubSetUpFixture.HasChildrenGet">
            <summary>Sets the stub of TestSuite.get_HasChildren()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubSetUpFixture.InitializeStub">
            <summary>Initializes a new instance of type StubSetUpFixture</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubSetUpFixture.MakeTestResult">
            <summary>Sets the stub of TestSuite.MakeTestResult()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubSetUpFixture.MakeTestResult01">
            <summary>Sets the stub of TestSuite.MakeTestResult()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubSetUpFixture.MethodNameGet">
            <summary>Sets the stub of Test.get_MethodName()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubSetUpFixture.TestCaseCountGet">
            <summary>Sets the stub of TestSuite.get_TestCaseCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubSetUpFixture.TestTypeGet">
            <summary>Sets the stub of Test.get_TestType()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubSetUpFixture.TestsGet">
            <summary>Sets the stub of TestSuite.get_Tests()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubSetUpFixture.XmlElementNameGet">
            <summary>Sets the stub of TestSuite.get_XmlElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubSetUpFixture.Arguments">
            <summary>Sets the stub of TestSuite.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubSetUpFixture.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubSetUpFixture.Fixture">
            <summary>Sets the stub of Test.get_Fixture()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubSetUpFixture.HasChildren">
            <summary>Sets the stub of TestSuite.get_HasChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubSetUpFixture.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubSetUpFixture.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubSetUpFixture.MethodName">
            <summary>Sets the stub of Test.get_MethodName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubSetUpFixture.TestCaseCount">
            <summary>Sets the stub of TestSuite.get_TestCaseCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubSetUpFixture.TestType">
            <summary>Sets the stub of Test.get_TestType()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubSetUpFixture.Tests">
            <summary>Sets the stub of TestSuite.get_Tests()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubSetUpFixture.XmlElementName">
            <summary>Sets the stub of TestSuite.get_XmlElementName()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubStackFilter">
            <summary>Stub type of NUnit.Framework.Internal.StackFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubStackFilter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubStackFilter.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubStackFilter.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubStackFilter.InitializeStub">
            <summary>Initializes a new instance of type StubStackFilter</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubStackFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubStackFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubStackFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubStringUtil">
            <summary>Stub type of NUnit.Framework.Internal.StringUtil</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubStringUtil.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubStringUtil.InitializeStub">
            <summary>Initializes a new instance of type StubStringUtil</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubStringUtil.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubStringUtil.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubStringUtil.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubTest">
            <summary>Stub type of NUnit.Framework.Internal.Test</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTest.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTest.#ctor(NUnit.Framework.Interfaces.IMethodInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTest.#ctor(NUnit.Framework.Interfaces.ITypeInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTest.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTest.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of Test.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTest.AddToXmlTNodeBoolean">
            <summary>Sets the stub of Test.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTest.ArgumentsGet">
            <summary>Sets the stub of Test.get_Arguments()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTest.AttachBackingFieldToFixture">
            <summary>Attaches delegates to emulate StubTest.Fixture as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTest.FixtureGet">
            <summary>Sets the stub of Test.get_Fixture()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTest.FixtureSetObject">
            <summary>Sets the stub of Test.set_Fixture(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTest.GetCustomAttributes``1(System.Boolean)">
            <summary>Sets the stub of Test.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTest.GetCustomAttributesOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0[]})">
            <summary>Sets stubs of GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTest.HasChildrenGet">
            <summary>Sets the stub of Test.get_HasChildren()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTest.InitializeStub">
            <summary>Initializes a new instance of type StubTest</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTest.MakeTestResult">
            <summary>Sets the stub of Test.MakeTestResult()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTest.MakeTestResult01">
            <summary>Sets the stub of Test.MakeTestResult()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTest.MethodNameGet">
            <summary>Sets the stub of Test.get_MethodName()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTest.TestCaseCountGet">
            <summary>Sets the stub of Test.get_TestCaseCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTest.TestTypeGet">
            <summary>Sets the stub of Test.get_TestType()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTest.TestsGet">
            <summary>Sets the stub of Test.get_Tests()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTest.XmlElementNameGet">
            <summary>Sets the stub of Test.get_XmlElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTest.Arguments">
            <summary>Sets the stub of Test.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTest.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTest.Fixture">
            <summary>Sets the stub of Test.get_Fixture()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTest.HasChildren">
            <summary>Sets the stub of Test.get_HasChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTest.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTest.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTest.MethodName">
            <summary>Sets the stub of Test.get_MethodName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTest.TestCaseCount">
            <summary>Sets the stub of Test.get_TestCaseCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTest.TestType">
            <summary>Sets the stub of Test.get_TestType()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTest.Tests">
            <summary>Sets the stub of Test.get_Tests()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTest.XmlElementName">
            <summary>Sets the stub of Test.get_XmlElementName()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubTestAssembly">
            <summary>Stub type of NUnit.Framework.Internal.TestAssembly</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestAssembly.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestAssembly.#ctor(System.Reflection.Assembly,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestAssembly.#ctor(NUnit.Framework.Internal.TestAssembly,NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestAssembly.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of TestSuite.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestAssembly.AddToXmlTNodeBoolean">
            <summary>Sets the stub of TestSuite.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestAssembly.ArgumentsGet">
            <summary>Sets the stub of TestSuite.get_Arguments()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestAssembly.AttachBackingFieldToFixture">
            <summary>Attaches delegates to emulate StubTestAssembly.Fixture as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestAssembly.FixtureGet">
            <summary>Sets the stub of Test.get_Fixture()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestAssembly.FixtureSetObject">
            <summary>Sets the stub of Test.set_Fixture(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestAssembly.GetCustomAttributes``1(System.Boolean)">
            <summary>Sets the stub of TestAssembly.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestAssembly.GetCustomAttributesOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0[]})">
            <summary>Sets stubs of GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestAssembly.HasChildrenGet">
            <summary>Sets the stub of TestSuite.get_HasChildren()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestAssembly.InitializeStub">
            <summary>Initializes a new instance of type StubTestAssembly</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestAssembly.MakeTestResult">
            <summary>Sets the stub of TestSuite.MakeTestResult()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestAssembly.MakeTestResult01">
            <summary>Sets the stub of TestSuite.MakeTestResult()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestAssembly.MethodNameGet">
            <summary>Sets the stub of Test.get_MethodName()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestAssembly.TestCaseCountGet">
            <summary>Sets the stub of TestSuite.get_TestCaseCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestAssembly.TestTypeGet">
            <summary>Sets the stub of TestAssembly.get_TestType()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestAssembly.TestsGet">
            <summary>Sets the stub of TestSuite.get_Tests()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestAssembly.XmlElementNameGet">
            <summary>Sets the stub of TestSuite.get_XmlElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestAssembly.Arguments">
            <summary>Sets the stub of TestSuite.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestAssembly.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestAssembly.Fixture">
            <summary>Sets the stub of Test.get_Fixture()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestAssembly.HasChildren">
            <summary>Sets the stub of TestSuite.get_HasChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestAssembly.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestAssembly.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestAssembly.MethodName">
            <summary>Sets the stub of Test.get_MethodName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestAssembly.TestCaseCount">
            <summary>Sets the stub of TestSuite.get_TestCaseCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestAssembly.TestType">
            <summary>Sets the stub of TestAssembly.get_TestType()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestAssembly.Tests">
            <summary>Sets the stub of TestSuite.get_Tests()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestAssembly.XmlElementName">
            <summary>Sets the stub of TestSuite.get_XmlElementName()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubTestCaseParameters">
            <summary>Stub type of NUnit.Framework.Internal.TestCaseParameters</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestCaseParameters.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestCaseParameters.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestCaseParameters.#ctor(System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestCaseParameters.#ctor(NUnit.Framework.Interfaces.ITestCaseData)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestCaseParameters.InitializeStub">
            <summary>Initializes a new instance of type StubTestCaseParameters</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseParameters.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseParameters.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseParameters.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubTestCaseResult">
            <summary>Stub type of NUnit.Framework.Internal.TestCaseResult</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestCaseResult.#ctor(NUnit.Framework.Internal.TestMethod)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestCaseResult.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of TestResult.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestCaseResult.AddToXmlTNodeBoolean">
            <summary>Sets the stub of TestResult.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestCaseResult.ChildrenGet">
            <summary>Sets the stub of TestCaseResult.get_Children()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestCaseResult.FailCountGet">
            <summary>Sets the stub of TestCaseResult.get_FailCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestCaseResult.FullNameGet">
            <summary>Sets the stub of TestResult.get_FullName()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestCaseResult.HasChildrenGet">
            <summary>Sets the stub of TestCaseResult.get_HasChildren()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestCaseResult.InconclusiveCountGet">
            <summary>Sets the stub of TestCaseResult.get_InconclusiveCount()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestCaseResult.InitializeStub">
            <summary>Initializes a new instance of type StubTestCaseResult</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestCaseResult.NameGet">
            <summary>Sets the stub of TestResult.get_Name()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestCaseResult.PassCountGet">
            <summary>Sets the stub of TestCaseResult.get_PassCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestCaseResult.SkipCountGet">
            <summary>Sets the stub of TestCaseResult.get_SkipCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestCaseResult.WarningCountGet">
            <summary>Sets the stub of TestCaseResult.get_WarningCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseResult.Children">
            <summary>Sets the stub of TestCaseResult.get_Children()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseResult.FailCount">
            <summary>Sets the stub of TestCaseResult.get_FailCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseResult.FullName">
            <summary>Sets the stub of TestResult.get_FullName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseResult.HasChildren">
            <summary>Sets the stub of TestCaseResult.get_HasChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseResult.InconclusiveCount">
            <summary>Sets the stub of TestCaseResult.get_InconclusiveCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseResult.Name">
            <summary>Sets the stub of TestResult.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseResult.PassCount">
            <summary>Sets the stub of TestCaseResult.get_PassCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseResult.SkipCount">
            <summary>Sets the stub of TestCaseResult.get_SkipCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseResult.WarningCount">
            <summary>Sets the stub of TestCaseResult.get_WarningCount()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException">
            <summary>Stub type of NUnit.Framework.Internal.TestCaseTimeoutException</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubTestCaseTimeoutException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubTestCaseTimeoutException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.InitializeStub">
            <summary>Initializes a new instance of type StubTestCaseTimeoutException</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestCaseTimeoutException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubTestExecutionContext">
            <summary>Stub type of NUnit.Framework.Internal.TestExecutionContext</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestExecutionContext.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestExecutionContext.#ctor(NUnit.Framework.Internal.TestExecutionContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestExecutionContext.InitializeLifetimeService">
            <summary>Sets the stub of TestExecutionContext.InitializeLifetimeService()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestExecutionContext.InitializeLifetimeService01">
            <summary>Sets the stub of TestExecutionContext.InitializeLifetimeService()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestExecutionContext.InitializeStub">
            <summary>Initializes a new instance of type StubTestExecutionContext</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestExecutionContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestExecutionContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestExecutionContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubTestFilter">
            <summary>Stub type of NUnit.Framework.Internal.TestFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestFilter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestFilter.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of TestFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestFilter.AddToXmlTNodeBoolean">
            <summary>Sets the stub of TestFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestFilter.InitializeStub">
            <summary>Initializes a new instance of type StubTestFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestFilter.IsExplicitMatch(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestFilter.IsExplicitMatchITest">
            <summary>Sets the stub of TestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestFilter.Match(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestFilter.MatchDescendant(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestFilter.MatchDescendantITest">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestFilter.MatchITest">
            <summary>Sets the stub of TestFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestFilter.Pass(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.Pass(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestFilter.PassITest">
            <summary>Sets the stub of TestFilter.Pass(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubTestFixture">
            <summary>Stub type of NUnit.Framework.Internal.TestFixture</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestFixture.#ctor(NUnit.Framework.Interfaces.ITypeInfo,System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestFixture.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of TestSuite.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestFixture.AddToXmlTNodeBoolean">
            <summary>Sets the stub of TestSuite.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestFixture.ArgumentsGet">
            <summary>Sets the stub of TestSuite.get_Arguments()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestFixture.AttachBackingFieldToFixture">
            <summary>Attaches delegates to emulate StubTestFixture.Fixture as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestFixture.FixtureGet">
            <summary>Sets the stub of Test.get_Fixture()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestFixture.FixtureSetObject">
            <summary>Sets the stub of Test.set_Fixture(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestFixture.GetCustomAttributes``1(System.Boolean)">
            <summary>Sets the stub of Test.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestFixture.GetCustomAttributesOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0[]})">
            <summary>Sets stubs of GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestFixture.HasChildrenGet">
            <summary>Sets the stub of TestSuite.get_HasChildren()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestFixture.InitializeStub">
            <summary>Initializes a new instance of type StubTestFixture</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestFixture.MakeTestResult">
            <summary>Sets the stub of TestSuite.MakeTestResult()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestFixture.MakeTestResult01">
            <summary>Sets the stub of TestSuite.MakeTestResult()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestFixture.MethodNameGet">
            <summary>Sets the stub of Test.get_MethodName()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestFixture.TestCaseCountGet">
            <summary>Sets the stub of TestSuite.get_TestCaseCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestFixture.TestTypeGet">
            <summary>Sets the stub of Test.get_TestType()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestFixture.TestsGet">
            <summary>Sets the stub of TestSuite.get_Tests()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestFixture.XmlElementNameGet">
            <summary>Sets the stub of TestSuite.get_XmlElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestFixture.Arguments">
            <summary>Sets the stub of TestSuite.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestFixture.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestFixture.Fixture">
            <summary>Sets the stub of Test.get_Fixture()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestFixture.HasChildren">
            <summary>Sets the stub of TestSuite.get_HasChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestFixture.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestFixture.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestFixture.MethodName">
            <summary>Sets the stub of Test.get_MethodName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestFixture.TestCaseCount">
            <summary>Sets the stub of TestSuite.get_TestCaseCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestFixture.TestType">
            <summary>Sets the stub of Test.get_TestType()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestFixture.Tests">
            <summary>Sets the stub of TestSuite.get_Tests()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestFixture.XmlElementName">
            <summary>Sets the stub of TestSuite.get_XmlElementName()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubTestFixtureParameters">
            <summary>Stub type of NUnit.Framework.Internal.TestFixtureParameters</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestFixtureParameters.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestFixtureParameters.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestFixtureParameters.#ctor(System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestFixtureParameters.#ctor(NUnit.Framework.Interfaces.ITestFixtureData)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestFixtureParameters.InitializeStub">
            <summary>Initializes a new instance of type StubTestFixtureParameters</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestFixtureParameters.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestFixtureParameters.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestFixtureParameters.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubTestMethod">
            <summary>Stub type of NUnit.Framework.Internal.TestMethod</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestMethod.#ctor(NUnit.Framework.Interfaces.IMethodInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestMethod.#ctor(NUnit.Framework.Interfaces.IMethodInfo,NUnit.Framework.Internal.Test)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestMethod.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of TestMethod.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestMethod.AddToXmlTNodeBoolean">
            <summary>Sets the stub of TestMethod.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestMethod.ArgumentsGet">
            <summary>Sets the stub of TestMethod.get_Arguments()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestMethod.AttachBackingFieldToFixture">
            <summary>Attaches delegates to emulate StubTestMethod.Fixture as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestMethod.FixtureGet">
            <summary>Sets the stub of Test.get_Fixture()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestMethod.FixtureSetObject">
            <summary>Sets the stub of Test.set_Fixture(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestMethod.GetCustomAttributes``1(System.Boolean)">
            <summary>Sets the stub of Test.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestMethod.GetCustomAttributesOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0[]})">
            <summary>Sets stubs of GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestMethod.HasChildrenGet">
            <summary>Sets the stub of TestMethod.get_HasChildren()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestMethod.InitializeStub">
            <summary>Initializes a new instance of type StubTestMethod</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestMethod.MakeTestResult">
            <summary>Sets the stub of TestMethod.MakeTestResult()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestMethod.MakeTestResult01">
            <summary>Sets the stub of TestMethod.MakeTestResult()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestMethod.MethodNameGet">
            <summary>Sets the stub of TestMethod.get_MethodName()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestMethod.TestCaseCountGet">
            <summary>Sets the stub of Test.get_TestCaseCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestMethod.TestTypeGet">
            <summary>Sets the stub of Test.get_TestType()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestMethod.TestsGet">
            <summary>Sets the stub of TestMethod.get_Tests()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestMethod.XmlElementNameGet">
            <summary>Sets the stub of TestMethod.get_XmlElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestMethod.Arguments">
            <summary>Sets the stub of TestMethod.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestMethod.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestMethod.Fixture">
            <summary>Sets the stub of Test.get_Fixture()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestMethod.HasChildren">
            <summary>Sets the stub of TestMethod.get_HasChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestMethod.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestMethod.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestMethod.MethodName">
            <summary>Sets the stub of TestMethod.get_MethodName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestMethod.TestCaseCount">
            <summary>Sets the stub of Test.get_TestCaseCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestMethod.TestType">
            <summary>Sets the stub of Test.get_TestType()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestMethod.Tests">
            <summary>Sets the stub of TestMethod.get_Tests()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestMethod.XmlElementName">
            <summary>Sets the stub of TestMethod.get_XmlElementName()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubTestNameGenerator">
            <summary>Stub type of NUnit.Framework.Internal.TestNameGenerator</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestNameGenerator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestNameGenerator.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestNameGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubTestNameGenerator</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestNameGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestNameGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestNameGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubTestParameters">
            <summary>Stub type of NUnit.Framework.Internal.TestParameters</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestParameters.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestParameters.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestParameters.#ctor(NUnit.Framework.Interfaces.ITestData)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestParameters.#ctor(System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestParameters.InitializeStub">
            <summary>Initializes a new instance of type StubTestParameters</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestParameters.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestParameters.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestParameters.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubTestProgressReporter">
            <summary>Stub type of NUnit.Framework.Internal.TestProgressReporter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestProgressReporter.#ctor(System.Web.UI.ICallbackEventHandler)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestProgressReporter.InitializeStub">
            <summary>Initializes a new instance of type StubTestProgressReporter</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestProgressReporter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestProgressReporter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestProgressReporter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubTestResult">
            <summary>Stub type of NUnit.Framework.Internal.TestResult</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestResult.#ctor(NUnit.Framework.Interfaces.ITest)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestResult.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of TestResult.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestResult.AddToXmlTNodeBoolean">
            <summary>Sets the stub of TestResult.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestResult.ChildrenGet">
            <summary>Sets the stub of TestResult.get_Children()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestResult.FailCountGet">
            <summary>Sets the stub of TestResult.get_FailCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestResult.FullNameGet">
            <summary>Sets the stub of TestResult.get_FullName()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestResult.HasChildrenGet">
            <summary>Sets the stub of TestResult.get_HasChildren()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestResult.InconclusiveCountGet">
            <summary>Sets the stub of TestResult.get_InconclusiveCount()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestResult.InitializeStub">
            <summary>Initializes a new instance of type StubTestResult</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestResult.NameGet">
            <summary>Sets the stub of TestResult.get_Name()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestResult.PassCountGet">
            <summary>Sets the stub of TestResult.get_PassCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestResult.SkipCountGet">
            <summary>Sets the stub of TestResult.get_SkipCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestResult.WarningCountGet">
            <summary>Sets the stub of TestResult.get_WarningCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestResult.Children">
            <summary>Sets the stub of TestResult.get_Children()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestResult.FailCount">
            <summary>Sets the stub of TestResult.get_FailCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestResult.FullName">
            <summary>Sets the stub of TestResult.get_FullName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestResult.HasChildren">
            <summary>Sets the stub of TestResult.get_HasChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestResult.InconclusiveCount">
            <summary>Sets the stub of TestResult.get_InconclusiveCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestResult.Name">
            <summary>Sets the stub of TestResult.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestResult.PassCount">
            <summary>Sets the stub of TestResult.get_PassCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestResult.SkipCount">
            <summary>Sets the stub of TestResult.get_SkipCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestResult.WarningCount">
            <summary>Sets the stub of TestResult.get_WarningCount()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubTestSuite">
            <summary>Stub type of NUnit.Framework.Internal.TestSuite</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestSuite.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestSuite.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestSuite.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestSuite.#ctor(NUnit.Framework.Interfaces.ITypeInfo,System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestSuite.#ctor(NUnit.Framework.Internal.TestSuite,NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestSuite.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of TestSuite.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestSuite.AddToXmlTNodeBoolean">
            <summary>Sets the stub of TestSuite.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestSuite.ArgumentsGet">
            <summary>Sets the stub of TestSuite.get_Arguments()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestSuite.AttachBackingFieldToFixture">
            <summary>Attaches delegates to emulate StubTestSuite.Fixture as a property with a backing field.</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestSuite.FixtureGet">
            <summary>Sets the stub of Test.get_Fixture()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestSuite.FixtureSetObject">
            <summary>Sets the stub of Test.set_Fixture(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestSuite.GetCustomAttributes``1(System.Boolean)">
            <summary>Sets the stub of Test.GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestSuite.GetCustomAttributesOf1Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean,``0[]})">
            <summary>Sets stubs of GetCustomAttributes(Boolean inherit)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestSuite.HasChildrenGet">
            <summary>Sets the stub of TestSuite.get_HasChildren()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestSuite.InitializeStub">
            <summary>Initializes a new instance of type StubTestSuite</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestSuite.MakeTestResult">
            <summary>Sets the stub of TestSuite.MakeTestResult()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestSuite.MakeTestResult01">
            <summary>Sets the stub of TestSuite.MakeTestResult()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestSuite.MethodNameGet">
            <summary>Sets the stub of Test.get_MethodName()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestSuite.TestCaseCountGet">
            <summary>Sets the stub of TestSuite.get_TestCaseCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestSuite.TestTypeGet">
            <summary>Sets the stub of Test.get_TestType()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestSuite.TestsGet">
            <summary>Sets the stub of TestSuite.get_Tests()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestSuite.XmlElementNameGet">
            <summary>Sets the stub of TestSuite.get_XmlElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuite.Arguments">
            <summary>Sets the stub of TestSuite.get_Arguments()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuite.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuite.Fixture">
            <summary>Sets the stub of Test.get_Fixture()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuite.HasChildren">
            <summary>Sets the stub of TestSuite.get_HasChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuite.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuite.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuite.MethodName">
            <summary>Sets the stub of Test.get_MethodName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuite.TestCaseCount">
            <summary>Sets the stub of TestSuite.get_TestCaseCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuite.TestType">
            <summary>Sets the stub of Test.get_TestType()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuite.Tests">
            <summary>Sets the stub of TestSuite.get_Tests()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuite.XmlElementName">
            <summary>Sets the stub of TestSuite.get_XmlElementName()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubTestSuiteResult">
            <summary>Stub type of NUnit.Framework.Internal.TestSuiteResult</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.#ctor(NUnit.Framework.Internal.TestSuite)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.AddResult(NUnit.Framework.Interfaces.ITestResult)">
            <summary>Sets the stub of TestSuiteResult.AddResult(ITestResult result)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.AddResultITestResult">
            <summary>Sets the stub of TestSuiteResult.AddResult(ITestResult result)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of TestResult.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.AddToXmlTNodeBoolean">
            <summary>Sets the stub of TestResult.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.ChildrenGet">
            <summary>Sets the stub of TestSuiteResult.get_Children()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.FailCountGet">
            <summary>Sets the stub of TestSuiteResult.get_FailCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.FullNameGet">
            <summary>Sets the stub of TestResult.get_FullName()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.HasChildrenGet">
            <summary>Sets the stub of TestSuiteResult.get_HasChildren()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.InconclusiveCountGet">
            <summary>Sets the stub of TestSuiteResult.get_InconclusiveCount()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.InitializeStub">
            <summary>Initializes a new instance of type StubTestSuiteResult</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.NameGet">
            <summary>Sets the stub of TestResult.get_Name()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.PassCountGet">
            <summary>Sets the stub of TestSuiteResult.get_PassCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.SkipCountGet">
            <summary>Sets the stub of TestSuiteResult.get_SkipCount()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.WarningCountGet">
            <summary>Sets the stub of TestSuiteResult.get_WarningCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.Children">
            <summary>Sets the stub of TestSuiteResult.get_Children()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.FailCount">
            <summary>Sets the stub of TestSuiteResult.get_FailCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.FullName">
            <summary>Sets the stub of TestResult.get_FullName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.HasChildren">
            <summary>Sets the stub of TestSuiteResult.get_HasChildren()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.InconclusiveCount">
            <summary>Sets the stub of TestSuiteResult.get_InconclusiveCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.Name">
            <summary>Sets the stub of TestResult.get_Name()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.PassCount">
            <summary>Sets the stub of TestSuiteResult.get_PassCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.SkipCount">
            <summary>Sets the stub of TestSuiteResult.get_SkipCount()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTestSuiteResult.WarningCount">
            <summary>Sets the stub of TestSuiteResult.get_WarningCount()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubTextMessageWriter">
            <summary>Stub type of NUnit.Framework.Internal.TextMessageWriter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.#ctor(System.String,System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.AttachBackingFieldToMaxLineLength">
            <summary>Attaches delegates to emulate StubTextMessageWriter.MaxLineLength as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.AttachBackingFieldToNewLine">
            <summary>Attaches delegates to emulate StubTextMessageWriter.NewLine as a property with a backing field.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Close">
            <summary>Sets the stub of StringWriter.Close()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Close01">
            <summary>Sets the stub of StringWriter.Close()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.DisplayDifferences(NUnit.Framework.Constraints.ConstraintResult)">
            <summary>Sets the stub of TextMessageWriter.DisplayDifferences(ConstraintResult result)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.DisplayDifferences(System.Object,System.Object)">
            <summary>Sets the stub of TextMessageWriter.DisplayDifferences(Object expected, Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.DisplayDifferences(System.Object,System.Object,NUnit.Framework.Constraints.Tolerance)">
            <summary>Sets the stub of TextMessageWriter.DisplayDifferences(Object expected, Object actual, Tolerance tolerance)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.DisplayDifferencesConstraintResult">
            <summary>Sets the stub of TextMessageWriter.DisplayDifferences(ConstraintResult result)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.DisplayDifferencesObjectObject">
            <summary>Sets the stub of TextMessageWriter.DisplayDifferences(Object expected, Object actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.DisplayDifferencesObjectObjectTolerance">
            <summary>Sets the stub of TextMessageWriter.DisplayDifferences(Object expected, Object actual, Tolerance tolerance)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.DisplayStringDifferences(System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>Sets the stub of TextMessageWriter.DisplayStringDifferences(String expected, String actual, Int32 mismatch, Boolean ignoreCase, Boolean clipping)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.DisplayStringDifferencesStringStringInt32BooleanBoolean">
            <summary>Sets the stub of TextMessageWriter.DisplayStringDifferences(String expected, String actual, Int32 mismatch, Boolean ignoreCase, Boolean clipping)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Dispose(System.Boolean)">
            <summary>Sets the stub of StringWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.DisposeBoolean">
            <summary>Sets the stub of StringWriter.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.EncodingGet">
            <summary>Sets the stub of StringWriter.get_Encoding()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Flush">
            <summary>Sets the stub of TextWriter.Flush()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Flush01">
            <summary>Sets the stub of TextWriter.Flush()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.FlushAsync">
            <summary>Sets the stub of StringWriter.FlushAsync()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.FlushAsync01">
            <summary>Sets the stub of StringWriter.FlushAsync()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.FormatProviderGet">
            <summary>Sets the stub of TextWriter.get_FormatProvider()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.GetStringBuilder">
            <summary>Sets the stub of StringWriter.GetStringBuilder()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.GetStringBuilder01">
            <summary>Sets the stub of StringWriter.GetStringBuilder()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.InitializeStub">
            <summary>Initializes a new instance of type StubTextMessageWriter</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.MaxLineLengthGet">
            <summary>Sets the stub of TextMessageWriter.get_MaxLineLength()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.MaxLineLengthSetInt32">
            <summary>Sets the stub of TextMessageWriter.set_MaxLineLength(Int32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.NewLineGet">
            <summary>Sets the stub of TextWriter.get_NewLine()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.NewLineSetString">
            <summary>Sets the stub of TextWriter.set_NewLine(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.ToString">
            <summary>Sets the stub of StringWriter.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.ToString01">
            <summary>Sets the stub of StringWriter.ToString()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Write(System.Char[])">
            <summary>Sets the stub of TextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Write(System.Boolean)">
            <summary>Sets the stub of TextWriter.Write(Boolean value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Write(System.String)">
            <summary>Sets the stub of StringWriter.Write(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Write(System.Char)">
            <summary>Sets the stub of StringWriter.Write(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Write(System.Decimal)">
            <summary>Sets the stub of TextWriter.Write(Decimal value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Write(System.Double)">
            <summary>Sets the stub of TextWriter.Write(Double value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Write(System.Int32)">
            <summary>Sets the stub of TextWriter.Write(Int32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Write(System.Int64)">
            <summary>Sets the stub of TextWriter.Write(Int64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Write(System.Single)">
            <summary>Sets the stub of TextWriter.Write(Single value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Write(System.UInt32)">
            <summary>Sets the stub of TextWriter.Write(UInt32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Write(System.UInt64)">
            <summary>Sets the stub of TextWriter.Write(UInt64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Write(System.Object)">
            <summary>Sets the stub of TextWriter.Write(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Write(System.String,System.Object)">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Write(System.String,System.Object[])">
            <summary>Sets the stub of TextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Write(System.String,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of StringWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Write(System.String,System.Object,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteActualValue(System.Object)">
            <summary>Sets the stub of TextMessageWriter.WriteActualValue(Object actual)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteActualValueObject">
            <summary>Sets the stub of TextMessageWriter.WriteActualValue(Object actual)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteAsync(System.Char)">
            <summary>Sets the stub of StringWriter.WriteAsync(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteAsync(System.String)">
            <summary>Sets the stub of StringWriter.WriteAsync(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteAsync(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of StringWriter.WriteAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteAsyncChar">
            <summary>Sets the stub of StringWriter.WriteAsync(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteAsyncCharArrayInt32Int32">
            <summary>Sets the stub of StringWriter.WriteAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteAsyncString">
            <summary>Sets the stub of StringWriter.WriteAsync(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteBoolean">
            <summary>Sets the stub of TextWriter.Write(Boolean value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteChar">
            <summary>Sets the stub of StringWriter.Write(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteCharArray">
            <summary>Sets the stub of TextWriter.Write(Char[] buffer)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteCharArrayInt32Int32">
            <summary>Sets the stub of StringWriter.Write(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteCollectionElements(System.Collections.IEnumerable,System.Int64,System.Int32)">
            <summary>Sets the stub of TextMessageWriter.WriteCollectionElements(IEnumerable collection, Int64 start, Int32 max)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteCollectionElementsIEnumerableInt64Int32">
            <summary>Sets the stub of TextMessageWriter.WriteCollectionElements(IEnumerable collection, Int64 start, Int32 max)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteDecimal">
            <summary>Sets the stub of TextWriter.Write(Decimal value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteDouble">
            <summary>Sets the stub of TextWriter.Write(Double value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteInt32">
            <summary>Sets the stub of TextWriter.Write(Int32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteInt64">
            <summary>Sets the stub of TextWriter.Write(Int64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLine">
            <summary>Sets the stub of TextWriter.WriteLine()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLine(System.Char)">
            <summary>Sets the stub of TextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLine(System.Decimal)">
            <summary>Sets the stub of TextWriter.WriteLine(Decimal value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLine(System.Double)">
            <summary>Sets the stub of TextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLine(System.Int32)">
            <summary>Sets the stub of TextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLine(System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLine(System.String)">
            <summary>Sets the stub of TextWriter.WriteLine(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLine(System.Boolean)">
            <summary>Sets the stub of TextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLine(System.Int64)">
            <summary>Sets the stub of TextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLine(System.Single)">
            <summary>Sets the stub of TextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLine(System.UInt64)">
            <summary>Sets the stub of TextWriter.WriteLine(UInt64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLine(System.Char[])">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLine(System.UInt32)">
            <summary>Sets the stub of TextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLine(System.String,System.Object[])">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLine(System.String,System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLine(System.String,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLine(System.String,System.Object,System.Object,System.Object)">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLine01">
            <summary>Sets the stub of TextWriter.WriteLine()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineAsync">
            <summary>Sets the stub of TextWriter.WriteLineAsync()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineAsync(System.Char)">
            <summary>Sets the stub of StringWriter.WriteLineAsync(Char value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineAsync(System.String)">
            <summary>Sets the stub of StringWriter.WriteLineAsync(String value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of StringWriter.WriteLineAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineAsync01">
            <summary>Sets the stub of TextWriter.WriteLineAsync()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineAsyncChar">
            <summary>Sets the stub of StringWriter.WriteLineAsync(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineAsyncCharArrayInt32Int32">
            <summary>Sets the stub of StringWriter.WriteLineAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineAsyncString">
            <summary>Sets the stub of StringWriter.WriteLineAsync(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineBoolean">
            <summary>Sets the stub of TextWriter.WriteLine(Boolean value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineChar">
            <summary>Sets the stub of TextWriter.WriteLine(Char value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineCharArray">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineCharArrayInt32Int32">
            <summary>Sets the stub of TextWriter.WriteLine(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineDecimal">
            <summary>Sets the stub of TextWriter.WriteLine(Decimal value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineDouble">
            <summary>Sets the stub of TextWriter.WriteLine(Double value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineInt32">
            <summary>Sets the stub of TextWriter.WriteLine(Int32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineInt64">
            <summary>Sets the stub of TextWriter.WriteLine(Int64 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineObject">
            <summary>Sets the stub of TextWriter.WriteLine(Object value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineSingle">
            <summary>Sets the stub of TextWriter.WriteLine(Single value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineString">
            <summary>Sets the stub of TextWriter.WriteLine(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineStringObject">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineStringObjectArray">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object[] arg)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineStringObjectObject">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineStringObjectObjectObject">
            <summary>Sets the stub of TextWriter.WriteLine(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineUInt32">
            <summary>Sets the stub of TextWriter.WriteLine(UInt32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteLineUInt64">
            <summary>Sets the stub of TextWriter.WriteLine(UInt64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteMessageLine(System.Int32,System.String,System.Object[])">
            <summary>Sets the stub of TextMessageWriter.WriteMessageLine(Int32 level, String message, Object[] args)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteMessageLineInt32StringObjectArray">
            <summary>Sets the stub of TextMessageWriter.WriteMessageLine(Int32 level, String message, Object[] args)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteObject">
            <summary>Sets the stub of TextWriter.Write(Object value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteSingle">
            <summary>Sets the stub of TextWriter.Write(Single value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteString">
            <summary>Sets the stub of StringWriter.Write(String value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteStringObject">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteStringObjectArray">
            <summary>Sets the stub of TextWriter.Write(String format, Object[] arg)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteStringObjectObject">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteStringObjectObjectObject">
            <summary>Sets the stub of TextWriter.Write(String format, Object arg0, Object arg1, Object arg2)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteUInt32">
            <summary>Sets the stub of TextWriter.Write(UInt32 value)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteUInt64">
            <summary>Sets the stub of TextWriter.Write(UInt64 value)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteValue(System.Object)">
            <summary>Sets the stub of TextMessageWriter.WriteValue(Object val)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.WriteValueObject">
            <summary>Sets the stub of TextMessageWriter.WriteValue(Object val)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.Encoding">
            <summary>Sets the stub of StringWriter.get_Encoding()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.FormatProvider">
            <summary>Sets the stub of TextWriter.get_FormatProvider()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.MaxLineLength">
            <summary>Sets the stub of TextMessageWriter.get_MaxLineLength()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTextMessageWriter.NewLine">
            <summary>Sets the stub of TextWriter.get_NewLine()</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubTypeHelper">
            <summary>Stub type of NUnit.Framework.Internal.TypeHelper</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTypeHelper.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTypeHelper.InitializeStub">
            <summary>Initializes a new instance of type StubTypeHelper</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTypeHelper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTypeHelper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTypeHelper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Fakes.StubTypeWrapper">
            <summary>Stub type of NUnit.Framework.Internal.TypeWrapper</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTypeWrapper.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTypeWrapper.InitializeStub">
            <summary>Initializes a new instance of type StubTypeWrapper</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Fakes.StubTypeWrapper.ToString">
            <summary>Sets the stub of TypeWrapper.ToString()</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Fakes.StubTypeWrapper.ToString01">
            <summary>Sets the stub of TypeWrapper.ToString()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTypeWrapper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTypeWrapper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Fakes.StubTypeWrapper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimAndFilter">
            <summary>Shim type of NUnit.Framework.Internal.Filters.AndFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimAndFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimAndFilter.#ctor(NUnit.Framework.Internal.Filters.AndFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimAndFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimAndFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimAndFilter.Bind(NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimAndFilter.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimAndFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimAndFilter.Constructor">
            <summary>Sets the shim of AndFilter.AndFilter()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimAndFilter.ConstructorITestFilterArray">
            <summary>Sets the shim of AndFilter.AndFilter(ITestFilter[] filters)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimAndFilter.ElementNameGet">
            <summary>Sets the shim of AndFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimAndFilter.IsExplicitMatchITest">
            <summary>Sets the shim of AndFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimAndFilter.MatchITest">
            <summary>Sets the shim of AndFilter.Match(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimAndFilter.PassITest">
            <summary>Sets the shim of AndFilter.Pass(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimAndFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimAndFilter.AllInstances.ElementNameGet">
            <summary>Sets the shim of AndFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimAndFilter.AllInstances.IsExplicitMatchITest">
            <summary>Sets the shim of AndFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimAndFilter.AllInstances.MatchITest">
            <summary>Sets the shim of AndFilter.Match(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimAndFilter.AllInstances.PassITest">
            <summary>Sets the shim of AndFilter.Pass(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimCategoryFilter">
            <summary>Shim type of NUnit.Framework.Internal.Filters.CategoryFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimCategoryFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimCategoryFilter.#ctor(NUnit.Framework.Internal.Filters.CategoryFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimCategoryFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimCategoryFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimCategoryFilter.Bind(NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimCategoryFilter.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimCategoryFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimCategoryFilter.ConstructorString">
            <summary>Sets the shim of CategoryFilter.CategoryFilter(String name)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimCategoryFilter.ElementNameGet">
            <summary>Sets the shim of CategoryFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimCategoryFilter.MatchITest">
            <summary>Sets the shim of CategoryFilter.Match(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimCategoryFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimCategoryFilter.AllInstances.ElementNameGet">
            <summary>Sets the shim of CategoryFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimCategoryFilter.AllInstances.MatchITest">
            <summary>Sets the shim of CategoryFilter.Match(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimClassNameFilter">
            <summary>Shim type of NUnit.Framework.Internal.Filters.ClassNameFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimClassNameFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimClassNameFilter.#ctor(NUnit.Framework.Internal.Filters.ClassNameFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimClassNameFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimClassNameFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimClassNameFilter.Bind(NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimClassNameFilter.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimClassNameFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimClassNameFilter.ConstructorString">
            <summary>Sets the shim of ClassNameFilter.ClassNameFilter(String expectedValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimClassNameFilter.ElementNameGet">
            <summary>Sets the shim of ClassNameFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimClassNameFilter.MatchITest">
            <summary>Sets the shim of ClassNameFilter.Match(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimClassNameFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimClassNameFilter.AllInstances.ElementNameGet">
            <summary>Sets the shim of ClassNameFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimClassNameFilter.AllInstances.MatchITest">
            <summary>Sets the shim of ClassNameFilter.Match(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimCompositeFilter">
            <summary>Shim type of NUnit.Framework.Internal.Filters.CompositeFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimCompositeFilter.#ctor(NUnit.Framework.Internal.Filters.CompositeFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimCompositeFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimCompositeFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimCompositeFilter.Bind(NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimCompositeFilter.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimCompositeFilter.AddITestFilter">
            <summary>Sets the shim of CompositeFilter.Add(ITestFilter filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimCompositeFilter.AddToXmlTNodeBoolean">
            <summary>Sets the shim of CompositeFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimCompositeFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimCompositeFilter.Constructor">
            <summary>Sets the shim of CompositeFilter.CompositeFilter()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimCompositeFilter.ConstructorITestFilterArray">
            <summary>Sets the shim of CompositeFilter.CompositeFilter(ITestFilter[] filters)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimCompositeFilter.FiltersGet">
            <summary>Sets the shim of CompositeFilter.get_Filters()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimCompositeFilter.FiltersSetIListOfITestFilter">
            <summary>Sets the shim of CompositeFilter.set_Filters(IList`1&lt;ITestFilter&gt; value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimCompositeFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimCompositeFilter.AllInstances.AddITestFilter">
            <summary>Sets the shim of CompositeFilter.Add(ITestFilter filter)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimCompositeFilter.AllInstances.AddToXmlTNodeBoolean">
            <summary>Sets the shim of CompositeFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimCompositeFilter.AllInstances.FiltersGet">
            <summary>Sets the shim of CompositeFilter.get_Filters()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimCompositeFilter.AllInstances.FiltersSetIListOfITestFilter">
            <summary>Sets the shim of CompositeFilter.set_Filters(IList`1&lt;ITestFilter&gt; value)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimFullNameFilter">
            <summary>Shim type of NUnit.Framework.Internal.Filters.FullNameFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimFullNameFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimFullNameFilter.#ctor(NUnit.Framework.Internal.Filters.FullNameFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimFullNameFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimFullNameFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimFullNameFilter.Bind(NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimFullNameFilter.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimFullNameFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimFullNameFilter.ConstructorString">
            <summary>Sets the shim of FullNameFilter.FullNameFilter(String expectedValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimFullNameFilter.ElementNameGet">
            <summary>Sets the shim of FullNameFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimFullNameFilter.MatchITest">
            <summary>Sets the shim of FullNameFilter.Match(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimFullNameFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimFullNameFilter.AllInstances.ElementNameGet">
            <summary>Sets the shim of FullNameFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimFullNameFilter.AllInstances.MatchITest">
            <summary>Sets the shim of FullNameFilter.Match(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimIdFilter">
            <summary>Shim type of NUnit.Framework.Internal.Filters.IdFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimIdFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimIdFilter.#ctor(NUnit.Framework.Internal.Filters.IdFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimIdFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimIdFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimIdFilter.Bind(NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimIdFilter.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimIdFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimIdFilter.ConstructorString">
            <summary>Sets the shim of IdFilter.IdFilter(String id)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimIdFilter.ElementNameGet">
            <summary>Sets the shim of IdFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimIdFilter.MatchITest">
            <summary>Sets the shim of IdFilter.Match(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimIdFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimIdFilter.AllInstances.ElementNameGet">
            <summary>Sets the shim of IdFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimIdFilter.AllInstances.MatchITest">
            <summary>Sets the shim of IdFilter.Match(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimMethodNameFilter">
            <summary>Shim type of NUnit.Framework.Internal.Filters.MethodNameFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimMethodNameFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimMethodNameFilter.#ctor(NUnit.Framework.Internal.Filters.MethodNameFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimMethodNameFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimMethodNameFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimMethodNameFilter.Bind(NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimMethodNameFilter.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimMethodNameFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimMethodNameFilter.ConstructorString">
            <summary>Sets the shim of MethodNameFilter.MethodNameFilter(String expectedValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimMethodNameFilter.ElementNameGet">
            <summary>Sets the shim of MethodNameFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimMethodNameFilter.MatchITest">
            <summary>Sets the shim of MethodNameFilter.Match(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimMethodNameFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimMethodNameFilter.AllInstances.ElementNameGet">
            <summary>Sets the shim of MethodNameFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimMethodNameFilter.AllInstances.MatchITest">
            <summary>Sets the shim of MethodNameFilter.Match(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimNamespaceFilter">
            <summary>Shim type of NUnit.Framework.Internal.Filters.NamespaceFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimNamespaceFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimNamespaceFilter.#ctor(NUnit.Framework.Internal.Filters.NamespaceFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimNamespaceFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimNamespaceFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimNamespaceFilter.Bind(NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimNamespaceFilter.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimNamespaceFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimNamespaceFilter.ConstructorString">
            <summary>Sets the shim of NamespaceFilter.NamespaceFilter(String expectedValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimNamespaceFilter.ElementNameGet">
            <summary>Sets the shim of NamespaceFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimNamespaceFilter.MatchITest">
            <summary>Sets the shim of NamespaceFilter.Match(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimNamespaceFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimNamespaceFilter.AllInstances.ElementNameGet">
            <summary>Sets the shim of NamespaceFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimNamespaceFilter.AllInstances.MatchITest">
            <summary>Sets the shim of NamespaceFilter.Match(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimNotFilter">
            <summary>Shim type of NUnit.Framework.Internal.Filters.NotFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimNotFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimNotFilter.#ctor(NUnit.Framework.Internal.Filters.NotFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimNotFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimNotFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimNotFilter.Bind(NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimNotFilter.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimNotFilter.AddToXmlTNodeBoolean">
            <summary>Sets the shim of NotFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimNotFilter.BaseFilterGet">
            <summary>Sets the shim of NotFilter.get_BaseFilter()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimNotFilter.BaseFilterSetTestFilter">
            <summary>Sets the shim of NotFilter.set_BaseFilter(TestFilter value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimNotFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimNotFilter.ConstructorTestFilter">
            <summary>Sets the shim of NotFilter.NotFilter(TestFilter baseFilter)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimNotFilter.IsExplicitMatchITest">
            <summary>Sets the shim of NotFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimNotFilter.MatchITest">
            <summary>Sets the shim of NotFilter.Match(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimNotFilter.PassITest">
            <summary>Sets the shim of NotFilter.Pass(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimNotFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimNotFilter.AllInstances.AddToXmlTNodeBoolean">
            <summary>Sets the shim of NotFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimNotFilter.AllInstances.BaseFilterGet">
            <summary>Sets the shim of NotFilter.get_BaseFilter()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimNotFilter.AllInstances.BaseFilterSetTestFilter">
            <summary>Sets the shim of NotFilter.set_BaseFilter(TestFilter value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimNotFilter.AllInstances.IsExplicitMatchITest">
            <summary>Sets the shim of NotFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimNotFilter.AllInstances.MatchITest">
            <summary>Sets the shim of NotFilter.Match(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimNotFilter.AllInstances.PassITest">
            <summary>Sets the shim of NotFilter.Pass(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimOrFilter">
            <summary>Shim type of NUnit.Framework.Internal.Filters.OrFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimOrFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimOrFilter.#ctor(NUnit.Framework.Internal.Filters.OrFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimOrFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimOrFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimOrFilter.Bind(NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimOrFilter.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimOrFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimOrFilter.Constructor">
            <summary>Sets the shim of OrFilter.OrFilter()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimOrFilter.ConstructorITestFilterArray">
            <summary>Sets the shim of OrFilter.OrFilter(ITestFilter[] filters)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimOrFilter.ElementNameGet">
            <summary>Sets the shim of OrFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimOrFilter.IsExplicitMatchITest">
            <summary>Sets the shim of OrFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimOrFilter.MatchITest">
            <summary>Sets the shim of OrFilter.Match(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimOrFilter.PassITest">
            <summary>Sets the shim of OrFilter.Pass(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimOrFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimOrFilter.AllInstances.ElementNameGet">
            <summary>Sets the shim of OrFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimOrFilter.AllInstances.IsExplicitMatchITest">
            <summary>Sets the shim of OrFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimOrFilter.AllInstances.MatchITest">
            <summary>Sets the shim of OrFilter.Match(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimOrFilter.AllInstances.PassITest">
            <summary>Sets the shim of OrFilter.Pass(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimPropertyFilter">
            <summary>Shim type of NUnit.Framework.Internal.Filters.PropertyFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimPropertyFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimPropertyFilter.#ctor(NUnit.Framework.Internal.Filters.PropertyFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimPropertyFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimPropertyFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimPropertyFilter.Bind(NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimPropertyFilter.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimPropertyFilter.AddToXmlTNodeBoolean">
            <summary>Sets the shim of PropertyFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimPropertyFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimPropertyFilter.ConstructorStringString">
            <summary>Sets the shim of PropertyFilter.PropertyFilter(String propertyName, String expectedValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimPropertyFilter.ElementNameGet">
            <summary>Sets the shim of PropertyFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimPropertyFilter.MatchITest">
            <summary>Sets the shim of PropertyFilter.Match(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimPropertyFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimPropertyFilter.AllInstances.AddToXmlTNodeBoolean">
            <summary>Sets the shim of PropertyFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimPropertyFilter.AllInstances.ElementNameGet">
            <summary>Sets the shim of PropertyFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimPropertyFilter.AllInstances.MatchITest">
            <summary>Sets the shim of PropertyFilter.Match(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimTestNameFilter">
            <summary>Shim type of NUnit.Framework.Internal.Filters.TestNameFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimTestNameFilter.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimTestNameFilter.#ctor(NUnit.Framework.Internal.Filters.TestNameFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimTestNameFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimTestNameFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimTestNameFilter.Bind(NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimTestNameFilter.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimTestNameFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimTestNameFilter.ConstructorString">
            <summary>Sets the shim of TestNameFilter.TestNameFilter(String expectedValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimTestNameFilter.ElementNameGet">
            <summary>Sets the shim of TestNameFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimTestNameFilter.MatchITest">
            <summary>Sets the shim of TestNameFilter.Match(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimTestNameFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimTestNameFilter.AllInstances.ElementNameGet">
            <summary>Sets the shim of TestNameFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimTestNameFilter.AllInstances.MatchITest">
            <summary>Sets the shim of TestNameFilter.Match(ITest test)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimValueMatchFilter">
            <summary>Shim type of NUnit.Framework.Internal.Filters.ValueMatchFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimValueMatchFilter.#ctor(NUnit.Framework.Internal.Filters.ValueMatchFilter)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimValueMatchFilter.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimValueMatchFilter.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimValueMatchFilter.Bind(NUnit.Framework.Interfaces.ITestFilter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.ShimValueMatchFilter.Bind(NUnit.Framework.Interfaces.IXmlNodeBuilder)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimValueMatchFilter.AddToXmlTNodeBoolean">
            <summary>Sets the shim of ValueMatchFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimValueMatchFilter.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimValueMatchFilter.ConstructorString">
            <summary>Sets the shim of ValueMatchFilter.ValueMatchFilter(String expectedValue)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimValueMatchFilter.ExpectedValueGet">
            <summary>Sets the shim of ValueMatchFilter.get_ExpectedValue()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimValueMatchFilter.ExpectedValueSetString">
            <summary>Sets the shim of ValueMatchFilter.set_ExpectedValue(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimValueMatchFilter.IsRegexGet">
            <summary>Sets the shim of ValueMatchFilter.get_IsRegex()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimValueMatchFilter.IsRegexSetBoolean">
            <summary>Sets the shim of ValueMatchFilter.set_IsRegex(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimValueMatchFilter.MatchString">
            <summary>Sets the shim of ValueMatchFilter.Match(String input)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.ShimValueMatchFilter.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimValueMatchFilter.AllInstances.AddToXmlTNodeBoolean">
            <summary>Sets the shim of ValueMatchFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimValueMatchFilter.AllInstances.ExpectedValueGet">
            <summary>Sets the shim of ValueMatchFilter.get_ExpectedValue()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimValueMatchFilter.AllInstances.ExpectedValueSetString">
            <summary>Sets the shim of ValueMatchFilter.set_ExpectedValue(String value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimValueMatchFilter.AllInstances.IsRegexGet">
            <summary>Sets the shim of ValueMatchFilter.get_IsRegex()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimValueMatchFilter.AllInstances.IsRegexSetBoolean">
            <summary>Sets the shim of ValueMatchFilter.set_IsRegex(Boolean value)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.ShimValueMatchFilter.AllInstances.MatchString">
            <summary>Sets the shim of ValueMatchFilter.Match(String input)</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.StubAndFilter">
            <summary>Stub type of NUnit.Framework.Internal.Filters.AndFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubAndFilter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubAndFilter.#ctor(NUnit.Framework.Interfaces.ITestFilter[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubAndFilter.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of CompositeFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubAndFilter.AddToXmlTNodeBoolean">
            <summary>Sets the stub of CompositeFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubAndFilter.ElementNameGet">
            <summary>Sets the stub of AndFilter.get_ElementName()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubAndFilter.InitializeStub">
            <summary>Initializes a new instance of type StubAndFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubAndFilter.IsExplicitMatch(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of AndFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubAndFilter.IsExplicitMatchITest">
            <summary>Sets the stub of AndFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubAndFilter.Match(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of AndFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubAndFilter.MatchDescendant(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubAndFilter.MatchDescendantITest">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubAndFilter.MatchITest">
            <summary>Sets the stub of AndFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubAndFilter.Pass(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of AndFilter.Pass(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubAndFilter.PassITest">
            <summary>Sets the stub of AndFilter.Pass(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubAndFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubAndFilter.ElementName">
            <summary>Sets the stub of AndFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubAndFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubAndFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.StubCategoryFilter">
            <summary>Stub type of NUnit.Framework.Internal.Filters.CategoryFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubCategoryFilter.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubCategoryFilter.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of ValueMatchFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubCategoryFilter.AddToXmlTNodeBoolean">
            <summary>Sets the stub of ValueMatchFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubCategoryFilter.ElementNameGet">
            <summary>Sets the stub of CategoryFilter.get_ElementName()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubCategoryFilter.InitializeStub">
            <summary>Initializes a new instance of type StubCategoryFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubCategoryFilter.IsExplicitMatch(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubCategoryFilter.IsExplicitMatchITest">
            <summary>Sets the stub of TestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubCategoryFilter.Match(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of CategoryFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubCategoryFilter.MatchDescendant(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubCategoryFilter.MatchDescendantITest">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubCategoryFilter.MatchITest">
            <summary>Sets the stub of CategoryFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubCategoryFilter.Pass(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.Pass(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubCategoryFilter.PassITest">
            <summary>Sets the stub of TestFilter.Pass(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubCategoryFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubCategoryFilter.ElementName">
            <summary>Sets the stub of CategoryFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubCategoryFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubCategoryFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.StubClassNameFilter">
            <summary>Stub type of NUnit.Framework.Internal.Filters.ClassNameFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubClassNameFilter.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubClassNameFilter.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of ValueMatchFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubClassNameFilter.AddToXmlTNodeBoolean">
            <summary>Sets the stub of ValueMatchFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubClassNameFilter.ElementNameGet">
            <summary>Sets the stub of ClassNameFilter.get_ElementName()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubClassNameFilter.InitializeStub">
            <summary>Initializes a new instance of type StubClassNameFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubClassNameFilter.IsExplicitMatch(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubClassNameFilter.IsExplicitMatchITest">
            <summary>Sets the stub of TestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubClassNameFilter.Match(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of ClassNameFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubClassNameFilter.MatchDescendant(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubClassNameFilter.MatchDescendantITest">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubClassNameFilter.MatchITest">
            <summary>Sets the stub of ClassNameFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubClassNameFilter.Pass(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.Pass(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubClassNameFilter.PassITest">
            <summary>Sets the stub of TestFilter.Pass(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubClassNameFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubClassNameFilter.ElementName">
            <summary>Sets the stub of ClassNameFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubClassNameFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubClassNameFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.StubCompositeFilter">
            <summary>Stub type of NUnit.Framework.Internal.Filters.CompositeFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubCompositeFilter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubCompositeFilter.#ctor(NUnit.Framework.Interfaces.ITestFilter[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubCompositeFilter.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of CompositeFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubCompositeFilter.AddToXmlTNodeBoolean">
            <summary>Sets the stub of CompositeFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubCompositeFilter.ElementNameGet">
            <summary>Sets the stub of CompositeFilter.get_ElementName()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubCompositeFilter.InitializeStub">
            <summary>Initializes a new instance of type StubCompositeFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubCompositeFilter.IsExplicitMatch(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of CompositeFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubCompositeFilter.IsExplicitMatchITest">
            <summary>Sets the stub of CompositeFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubCompositeFilter.Match(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of CompositeFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubCompositeFilter.MatchDescendant(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubCompositeFilter.MatchDescendantITest">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubCompositeFilter.MatchITest">
            <summary>Sets the stub of CompositeFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubCompositeFilter.Pass(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of CompositeFilter.Pass(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubCompositeFilter.PassITest">
            <summary>Sets the stub of CompositeFilter.Pass(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubCompositeFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubCompositeFilter.ElementName">
            <summary>Sets the stub of CompositeFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubCompositeFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubCompositeFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.StubFullNameFilter">
            <summary>Stub type of NUnit.Framework.Internal.Filters.FullNameFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubFullNameFilter.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubFullNameFilter.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of ValueMatchFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubFullNameFilter.AddToXmlTNodeBoolean">
            <summary>Sets the stub of ValueMatchFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubFullNameFilter.ElementNameGet">
            <summary>Sets the stub of FullNameFilter.get_ElementName()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubFullNameFilter.InitializeStub">
            <summary>Initializes a new instance of type StubFullNameFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubFullNameFilter.IsExplicitMatch(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubFullNameFilter.IsExplicitMatchITest">
            <summary>Sets the stub of TestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubFullNameFilter.Match(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of FullNameFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubFullNameFilter.MatchDescendant(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubFullNameFilter.MatchDescendantITest">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubFullNameFilter.MatchITest">
            <summary>Sets the stub of FullNameFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubFullNameFilter.Pass(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.Pass(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubFullNameFilter.PassITest">
            <summary>Sets the stub of TestFilter.Pass(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubFullNameFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubFullNameFilter.ElementName">
            <summary>Sets the stub of FullNameFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubFullNameFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubFullNameFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.StubIdFilter">
            <summary>Stub type of NUnit.Framework.Internal.Filters.IdFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubIdFilter.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubIdFilter.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of ValueMatchFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubIdFilter.AddToXmlTNodeBoolean">
            <summary>Sets the stub of ValueMatchFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubIdFilter.ElementNameGet">
            <summary>Sets the stub of IdFilter.get_ElementName()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubIdFilter.InitializeStub">
            <summary>Initializes a new instance of type StubIdFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubIdFilter.IsExplicitMatch(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubIdFilter.IsExplicitMatchITest">
            <summary>Sets the stub of TestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubIdFilter.Match(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of IdFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubIdFilter.MatchDescendant(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubIdFilter.MatchDescendantITest">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubIdFilter.MatchITest">
            <summary>Sets the stub of IdFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubIdFilter.Pass(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.Pass(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubIdFilter.PassITest">
            <summary>Sets the stub of TestFilter.Pass(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubIdFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubIdFilter.ElementName">
            <summary>Sets the stub of IdFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubIdFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubIdFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.StubMethodNameFilter">
            <summary>Stub type of NUnit.Framework.Internal.Filters.MethodNameFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubMethodNameFilter.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubMethodNameFilter.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of ValueMatchFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubMethodNameFilter.AddToXmlTNodeBoolean">
            <summary>Sets the stub of ValueMatchFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubMethodNameFilter.ElementNameGet">
            <summary>Sets the stub of MethodNameFilter.get_ElementName()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubMethodNameFilter.InitializeStub">
            <summary>Initializes a new instance of type StubMethodNameFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubMethodNameFilter.IsExplicitMatch(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubMethodNameFilter.IsExplicitMatchITest">
            <summary>Sets the stub of TestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubMethodNameFilter.Match(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of MethodNameFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubMethodNameFilter.MatchDescendant(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubMethodNameFilter.MatchDescendantITest">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubMethodNameFilter.MatchITest">
            <summary>Sets the stub of MethodNameFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubMethodNameFilter.Pass(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.Pass(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubMethodNameFilter.PassITest">
            <summary>Sets the stub of TestFilter.Pass(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubMethodNameFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubMethodNameFilter.ElementName">
            <summary>Sets the stub of MethodNameFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubMethodNameFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubMethodNameFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.StubNamespaceFilter">
            <summary>Stub type of NUnit.Framework.Internal.Filters.NamespaceFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubNamespaceFilter.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubNamespaceFilter.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of ValueMatchFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubNamespaceFilter.AddToXmlTNodeBoolean">
            <summary>Sets the stub of ValueMatchFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubNamespaceFilter.ElementNameGet">
            <summary>Sets the stub of NamespaceFilter.get_ElementName()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubNamespaceFilter.InitializeStub">
            <summary>Initializes a new instance of type StubNamespaceFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubNamespaceFilter.IsExplicitMatch(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubNamespaceFilter.IsExplicitMatchITest">
            <summary>Sets the stub of TestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubNamespaceFilter.Match(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of NamespaceFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubNamespaceFilter.MatchDescendant(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubNamespaceFilter.MatchDescendantITest">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubNamespaceFilter.MatchITest">
            <summary>Sets the stub of NamespaceFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubNamespaceFilter.Pass(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.Pass(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubNamespaceFilter.PassITest">
            <summary>Sets the stub of TestFilter.Pass(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubNamespaceFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubNamespaceFilter.ElementName">
            <summary>Sets the stub of NamespaceFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubNamespaceFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubNamespaceFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.StubNotFilter">
            <summary>Stub type of NUnit.Framework.Internal.Filters.NotFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubNotFilter.#ctor(NUnit.Framework.Internal.TestFilter)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubNotFilter.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of NotFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubNotFilter.AddToXmlTNodeBoolean">
            <summary>Sets the stub of NotFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubNotFilter.InitializeStub">
            <summary>Initializes a new instance of type StubNotFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubNotFilter.IsExplicitMatch(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of NotFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubNotFilter.IsExplicitMatchITest">
            <summary>Sets the stub of NotFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubNotFilter.Match(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of NotFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubNotFilter.MatchDescendant(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubNotFilter.MatchDescendantITest">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubNotFilter.MatchITest">
            <summary>Sets the stub of NotFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubNotFilter.Pass(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of NotFilter.Pass(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubNotFilter.PassITest">
            <summary>Sets the stub of NotFilter.Pass(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubNotFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubNotFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubNotFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.StubOrFilter">
            <summary>Stub type of NUnit.Framework.Internal.Filters.OrFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubOrFilter.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubOrFilter.#ctor(NUnit.Framework.Interfaces.ITestFilter[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubOrFilter.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of CompositeFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubOrFilter.AddToXmlTNodeBoolean">
            <summary>Sets the stub of CompositeFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubOrFilter.ElementNameGet">
            <summary>Sets the stub of OrFilter.get_ElementName()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubOrFilter.InitializeStub">
            <summary>Initializes a new instance of type StubOrFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubOrFilter.IsExplicitMatch(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of OrFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubOrFilter.IsExplicitMatchITest">
            <summary>Sets the stub of OrFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubOrFilter.Match(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of OrFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubOrFilter.MatchDescendant(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubOrFilter.MatchDescendantITest">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubOrFilter.MatchITest">
            <summary>Sets the stub of OrFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubOrFilter.Pass(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of OrFilter.Pass(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubOrFilter.PassITest">
            <summary>Sets the stub of OrFilter.Pass(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubOrFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubOrFilter.ElementName">
            <summary>Sets the stub of OrFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubOrFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubOrFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.StubPropertyFilter">
            <summary>Stub type of NUnit.Framework.Internal.Filters.PropertyFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubPropertyFilter.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubPropertyFilter.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of PropertyFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubPropertyFilter.AddToXmlTNodeBoolean">
            <summary>Sets the stub of PropertyFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubPropertyFilter.ElementNameGet">
            <summary>Sets the stub of PropertyFilter.get_ElementName()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubPropertyFilter.InitializeStub">
            <summary>Initializes a new instance of type StubPropertyFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubPropertyFilter.IsExplicitMatch(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubPropertyFilter.IsExplicitMatchITest">
            <summary>Sets the stub of TestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubPropertyFilter.Match(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of PropertyFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubPropertyFilter.MatchDescendant(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubPropertyFilter.MatchDescendantITest">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubPropertyFilter.MatchITest">
            <summary>Sets the stub of PropertyFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubPropertyFilter.Pass(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.Pass(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubPropertyFilter.PassITest">
            <summary>Sets the stub of TestFilter.Pass(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubPropertyFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubPropertyFilter.ElementName">
            <summary>Sets the stub of PropertyFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubPropertyFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubPropertyFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.StubTestNameFilter">
            <summary>Stub type of NUnit.Framework.Internal.Filters.TestNameFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubTestNameFilter.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubTestNameFilter.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of ValueMatchFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubTestNameFilter.AddToXmlTNodeBoolean">
            <summary>Sets the stub of ValueMatchFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubTestNameFilter.ElementNameGet">
            <summary>Sets the stub of TestNameFilter.get_ElementName()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubTestNameFilter.InitializeStub">
            <summary>Initializes a new instance of type StubTestNameFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubTestNameFilter.IsExplicitMatch(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubTestNameFilter.IsExplicitMatchITest">
            <summary>Sets the stub of TestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubTestNameFilter.Match(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestNameFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubTestNameFilter.MatchDescendant(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubTestNameFilter.MatchDescendantITest">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubTestNameFilter.MatchITest">
            <summary>Sets the stub of TestNameFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubTestNameFilter.Pass(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.Pass(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubTestNameFilter.PassITest">
            <summary>Sets the stub of TestFilter.Pass(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubTestNameFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubTestNameFilter.ElementName">
            <summary>Sets the stub of TestNameFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubTestNameFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubTestNameFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:NUnit.Framework.Internal.Filters.Fakes.StubValueMatchFilter">
            <summary>Stub type of NUnit.Framework.Internal.Filters.ValueMatchFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubValueMatchFilter.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubValueMatchFilter.AddToXml(NUnit.Framework.Interfaces.TNode,System.Boolean)">
            <summary>Sets the stub of ValueMatchFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubValueMatchFilter.AddToXmlTNodeBoolean">
            <summary>Sets the stub of ValueMatchFilter.AddToXml(TNode parentNode, Boolean recursive)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubValueMatchFilter.ElementNameGet">
            <summary>Sets the stub of ValueMatchFilter.get_ElementName()</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubValueMatchFilter.InitializeStub">
            <summary>Initializes a new instance of type StubValueMatchFilter</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubValueMatchFilter.IsExplicitMatch(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubValueMatchFilter.IsExplicitMatchITest">
            <summary>Sets the stub of TestFilter.IsExplicitMatch(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubValueMatchFilter.Match(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubValueMatchFilter.MatchDescendant(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubValueMatchFilter.MatchDescendantITest">
            <summary>Sets the stub of TestFilter.MatchDescendant(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubValueMatchFilter.MatchITest">
            <summary>Sets the stub of TestFilter.Match(ITest test)</summary>
        </member>
        <member name="M:NUnit.Framework.Internal.Filters.Fakes.StubValueMatchFilter.Pass(NUnit.Framework.Interfaces.ITest)">
            <summary>Sets the stub of TestFilter.Pass(ITest test)</summary>
        </member>
        <member name="F:NUnit.Framework.Internal.Filters.Fakes.StubValueMatchFilter.PassITest">
            <summary>Sets the stub of TestFilter.Pass(ITest test)</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubValueMatchFilter.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubValueMatchFilter.ElementName">
            <summary>Sets the stub of ValueMatchFilter.get_ElementName()</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubValueMatchFilter.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:NUnit.Framework.Internal.Filters.Fakes.StubValueMatchFilter.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
